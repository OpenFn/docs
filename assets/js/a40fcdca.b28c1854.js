"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[59555],{6816:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"library/jobs/auto/generate-pdf","title":"Generate a PDF from a HTML string","description":"\ud83d\udcdc This job is an official example from OpenFn.","source":"@site/adaptors/library/jobs/auto/generate-pdf.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/generate-pdf","permalink":"/adaptors/library/jobs/auto/generate-pdf","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Generate a PDF from a HTML string","sidebar_label":"\ud83d\udcdc Generate a PDF from a HTML string","id":"generate-pdf","keywords":["library","job","expression","pdfshift"]},"sidebar":"adaptors","previous":{"title":"Configuration","permalink":"/adaptors/packages/pdfshift-configuration-schema"},"next":{"title":"Changelog","permalink":"/adaptors/packages/pdfshift-changelog"}}');var r=t(74848),s=t(28453);const o={title:"Generate a PDF from a HTML string",sidebar_label:"\ud83d\udcdc Generate a PDF from a HTML string",id:"generate-pdf",keywords:["library","job","expression","pdfshift"]},i=void 0,l={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["\ud83d\udcdc ",(0,r.jsx)("em",{children:"This job is an official example from OpenFn."})]}),"\n",(0,r.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Name: Generate a PDF from a HTML string"}),"\n",(0,r.jsxs)(n.li,{children:["Adaptor: ",(0,r.jsx)(n.a,{href:"https://www.github.com/openfn/language-pdfshift",children:(0,r.jsx)(n.code,{children:"@openfn/language-pdfshift"})})]}),"\n",(0,r.jsxs)(n.li,{children:["Adaptor Version: ",(0,r.jsx)(n.a,{href:"https://www.github.com/openfn/language-pdfshift",children:(0,r.jsx)(n.code,{children:"latest"})})]}),"\n",(0,r.jsx)(n.li,{children:"Created date unknown"}),"\n",(0,r.jsx)(n.li,{children:"Updated date unknown"}),"\n",(0,r.jsxs)(n.li,{children:["Score: ",(0,r.jsx)("b",{children:"100"})," (an ",(0,r.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,r.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// Generate a PDF document from a HTML string\n\nfn(state => {\n  const { data } = state;\n\n  state.pdfHTMLContent = `<html>\n       <body style=\"font-family: Arial, sans-serif; font-size: 14px;\">\n         <h1>Sales Report</h1>\n         <p>Date: ${data.date}</p>\n         <p>Total Sales: $${data.totalSales}</p>\n      </body>\n    </html>`;\n\n  return state;\n});\n\ngeneratePDF($.pdfHTMLContent, {\n  sandbox: true,\n  filename: 'trials.pdf',\n});\n\nfn(state => {\n  const { data } = state;\n  console.log(`Download PDF in 48 hours from ${data.url}`);\n  return { ...state, pdfData: data };\n});\n\n"})})]})}function f(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const r={},s=a.createContext(r);function o(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);