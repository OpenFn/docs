"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[57436],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var s=n(96540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},81151:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"library/jobs/auto/04b-Update-ODK-form-2019-12-03","title":"04b/ Update ODK form","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/04b-Update-ODK-form-2019-12-03.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/04b-Update-ODK-form-2019-12-03","permalink":"/adaptors/library/jobs/auto/04b-Update-ODK-form-2019-12-03","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"04b/ Update ODK form","sidebar_label":"04b/ Update ODK form","id":"04b-Update-ODK-form-2019-12-03","keywords":["library","job","expression","http","get","post","Number"]},"sidebar":"adaptors","previous":{"title":"05/ Submit employee evaluation","permalink":"/adaptors/library/jobs/auto/05-Submit-employee-evaluation-2019-12-03"},"next":{"title":"commcare reports api","permalink":"/adaptors/library/jobs/auto/commcare-reports-api-2016-08-29"}}');var o=n(74848),i=n(28453);const a={title:"04b/ Update ODK form",sidebar_label:"04b/ Update ODK form",id:"04b-Update-ODK-form-2019-12-03",keywords:["library","job","expression","http","get","post","Number"]},l=void 0,r={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function p(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,o.jsx)(t.h2,{id:"metadata",children:"Metadata"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Name: 04b/ Update ODK form"}),"\n",(0,o.jsxs)(t.li,{children:["Adaptor: ",(0,o.jsx)(t.a,{href:"https://www.github.com/openfn/language-http",children:(0,o.jsx)(t.code,{children:"@openfn/language-http"})})]}),"\n",(0,o.jsxs)(t.li,{children:["Adaptor Version: ",(0,o.jsx)(t.a,{href:"https://www.github.com/openfn/language-http",children:(0,o.jsx)(t.code,{children:"latest"})})]}),"\n",(0,o.jsx)(t.li,{children:"Created over 5 years ago"}),"\n",(0,o.jsx)(t.li,{children:"Updated over 5 years ago"}),"\n",(0,o.jsxs)(t.li,{children:["Score: ",(0,o.jsx)("b",{children:"0"})," (an ",(0,o.jsx)(t.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"get"}),", ",(0,o.jsx)(t.code,{children:"post"}),", ",(0,o.jsx)(t.code,{children:"Number"})]}),"\n",(0,o.jsx)(t.h2,{id:"expression",children:"Expression"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"// Your job goes here.\nget(\n  'http://165.227.185.106/formXml',\n  {\n    query: {\n      formId: 'registration_form',\n    },\n  },\n  state => {\n    console.log('Start processing state and form template!');\n\n    let template = state.data.body;\n    let templateUpdated = false;\n\n    const itemEx = /<item>\\s?<label>[^<>]*<\\/label>\\s?<value>[^<>]*<\\/value>\\s?<\\/item>/gi;\n    const itemMatches = template.match(itemEx);\n\n    const selectFacilityEx = /<select1\\s+ref=\"\\/RegistrationForm\\/position_facility\">/gi;\n    //const selectFacilityEx = /<select1\\s+ref=\"\\/data\\/position_facility\">/gi;\n    const selectPositionEx = /<select1\\s+ref=\"\\/RegistrationForm\\/position\">/gi;\n    //const selectPositionEx = /<select1\\s+ref=\"\\/data\\/position\">/gi;\n\n    console.log(`Received ${state.new_jobs.length} new data!`);\n\n    for(let j = 0; j < state.new_jobs.length; j ++) {\n      let facilityExists = false;\n      let positionExists = false;\n\n      let facilityId = state.new_jobs[j].facility_id;\n      console.log(`Processing facility: ${facilityId}.`);\n\n      const positions = state.new_jobs[j].position_id.split('|'); \n      const salaries = state.new_jobs[j].salary.split('=');\n\n      let positionId = `${positions[1]}_${salaries[1]}`;\n      console.log(`Processing position: ${positionId}.`);\n      for(let i = 0; i < itemMatches.length; i ++) {\n        if (itemMatches[i].indexOf(facilityId) >= 0) {\n          facilityExists = true;\n        }\n        if (itemMatches[i].indexOf(positionId) >= 0) {\n          if (state.new_jobs[j].status === 'CLOSED') {\n            console.log(`Removing closed position: ${positionId}.`);\n            template = template.replace(itemMatches[i], '');\n            templateUpdated = true;\n          }\n          positionExists = true;\n        }\n      }\n\n      if (!facilityExists) {\n        const selectFacilityMatches = template.match(selectFacilityEx);\n        console.log(\"Facility matches: \"+selectFacilityMatches)\n        const facilityItem = \n          `<item><label>${state.new_jobs[j].facility_name}</label><value>${facilityId}</value></item>`;\n        console.log(`Adding facility: ${facilityItem}.`);\n        template = template.replace(\n          selectFacilityEx,\n          selectFacilityMatches[0] + facilityItem\n        );\n        templateUpdated = true;\n      } else {\n        console.log('Not seeing any facility to add. Moving along!');\n      }\n\n      if (!positionExists && state.new_jobs[j].status === 'NEW') {\n        const selectPositionMatches = template.match(selectPositionEx);\n        const positionItem =\n          `<item><label>${state.new_jobs[j].position_name}</label><value>${positionId}</value></item>`;\n        console.log(`Adding position: ${positionItem}.`);\n        template = template.replace(\n          selectPositionEx,\n          selectPositionMatches[0] + positionItem\n        );\n        templateUpdated = true;\n      } else {\n        console.log('Not seeing any position to add. Moving along!');\n      }\n    }\n\n    if (templateUpdated) {\n      const versionEx = /id=\"\\S+\"\\s+version=\"(\\S+)\"/;\n      const versionMatches = template.match(versionEx);\n      const currentVersion = Number.parseInt(versionMatches[1]);\n      console.log(`Updating form version from: ${currentVersion}`);\n      template = template.replace(currentVersion, currentVersion + 1);\n    }\n    \n    state.template = template;\n    return state;\n  }\n);\n\npost('http://165.227.185.106/formUpload', {\n  formData: state => {\n    return {\n      form_def_file: {\n        value: state.template,\n        options: {\n          filename: 'registration_form.xml'\n        }\n      }\n    };\n  },\n});\n\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);