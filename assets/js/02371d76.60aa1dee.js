"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[81471],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(96540);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}},49035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"packages/openmrs-readme","title":"openmrs developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/openmrs","source":"@site/adaptors/packages/openmrs-readme.md","sourceDirName":"packages","slug":"/packages/openmrs-readme","permalink":"/adaptors/packages/openmrs-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"openmrs developer readme","id":"openmrs-readme","keywords":["adaptor","readme","openmrs"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/openmrs-changelog"},"next":{"title":"Overview","permalink":"/adaptors/openspp"}}');var r=t(74848),o=t(28453);const s={title:"openmrs developer readme",id:"openmrs-readme",keywords:["adaptor","readme","openmrs"]},i="openmrs Adaptor developer README.md",d={},p=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Get a patient by some criteria",id:"get-a-patient-by-some-criteria",level:3},{value:"Example of searching for patients based on their <code>EMR Id</code>",id:"example-of-searching-for-patients-based-on-their-emr-id",level:4},{value:"Create an Encounter",id:"create-an-encounter",level:3},{value:"Make a request to any OpenMRS endpoint",id:"make-a-request-to-any-openmrs-endpoint",level:3},{value:"Create new patient",id:"create-new-patient",level:2},{value:"Development",id:"development",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"openmrs-adaptor-developer-readmemd",children:"openmrs Adaptor developer README.md"})}),"\n",(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/openmrs",children:"https://github.com/OpenFn/adaptors/tree/main/packages/openmrs"})]}),"\n",(0,r.jsx)(n.h1,{id:"language-openmrs",children:"Language OpenMRS"}),"\n",(0,r.jsxs)(n.p,{children:["Language Pack for building expressions and operations for working with the\n",(0,r.jsx)(n.a,{href:"https://rest.openmrs.org/?javascript#openmrs-rest-api",children:"OpenMRS Rest API"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"http://burkeware.com/openmrs-data-model/openmrs-data-model-1.11.html#",children:"OpenMRS Data Model Explorer"})}),"\n",(0,r.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,r.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,r.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/openmrs-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,r.jsx)(n.h3,{id:"get-a-patient-by-some-criteria",children:"Get a patient by some criteria"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"// getPatient({ uuid: '516af9aa-0402-4e11-ad79-e394fdec0c91' });\n// getPatient({ uuid: dataValue('patientId')(state) });\ngetPatient({\n  uuid: state => state.data[0].uuid,\n});\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"example-of-searching-for-patients-based-on-their-emr-id",children:["Example of searching for patients based on their ",(0,r.jsx)(n.code,{children:"EMR Id"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"getPatients(\n  {\n    identifier: state => state.data.emrId,\n    v: 'full',\n  },\n  {\n    exactlyOne: true,\n  }\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-an-encounter",children:"Create an Encounter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"createEncounter({\n  encounterDatetime: dataValue('visit_date'), //dynamically fill with source app data\n  patient: dataValue('uuid'),\n  encounterType: dataValue('visit_type'),\n  location: dataValue('location.uuid'),\n  encounterProviders: [\n    {\n      provider: dataValue('provider_name'),\n      encounterRole: '240b26f9-dd88-4172-823d-4a8bfeb7841f', //hardcoded value\n    },\n  ],\n});\n"})}),"\n",(0,r.jsx)(n.h3,{id:"make-a-request-to-any-openmrs-endpoint",children:"Make a request to any OpenMRS endpoint"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"get('/ws/rest/v1/patient', { q: 'mohammed' }, state => {\n  console.log(JSON.stringify(state, null, 2));\n  return state;\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"create-new-patient",children:"Create new patient"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"createPatient(\n  fields(\n    field('gender', 'M'),\n    field('names', function (state) {\n      return [\n        {\n          patient_id: dataValue('form.patientId')(state),\n          creator: dataValue('form.user')(state),\n        },\n      ];\n    })\n  )\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,r.jsxs)(n.p,{children:["Clone the ",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),". Follow the\n",(0,r.jsx)(n.code,{children:"Getting Started"})," guide inside to get set up."]}),"\n",(0,r.jsxs)(n.p,{children:["Run tests using ",(0,r.jsx)(n.code,{children:"pnpm run test"})," or ",(0,r.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,r.jsxs)(n.p,{children:["Build the project using ",(0,r.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To just build the docs run ",(0,r.jsx)(n.code,{children:"pnpm build docs"})]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);