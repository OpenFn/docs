"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78093],{22275:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(58168),r=(n(96540),n(15680));const i={title:"Create a Medication Record",sidebar_label:"\ud83d\udcdc Create a Medication Record",id:"satusehat-create-medication",keywords:["library","job","expression","satusehat","map","post"]},o=void 0,s={unversionedId:"library/jobs/auto/satusehat-create-medication",id:"library/jobs/auto/satusehat-create-medication",title:"Create a Medication Record",description:"\ud83d\udcdc This job is an official example from OpenFn.",source:"@site/adaptors/library/jobs/auto/satusehat-create-medication.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/satusehat-create-medication",permalink:"/adaptors/library/jobs/auto/satusehat-create-medication",draft:!1,tags:[],version:"current",frontMatter:{title:"Create a Medication Record",sidebar_label:"\ud83d\udcdc Create a Medication Record",id:"satusehat-create-medication",keywords:["library","job","expression","satusehat","map","post"]},sidebar:"adaptors",previous:{title:"\ud83d\udcdc Create an Observation",permalink:"/adaptors/library/jobs/auto/satusehat-create-observations"},next:{title:"satusehat changelog",permalink:"/adaptors/packages/satusehat-changelog"}},c={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"\ud83d\udcdc ",(0,r.yg)("em",null,"This job is an official example from OpenFn.")),(0,r.yg)("h2",{id:"metadata"},"Metadata"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Name: Create a Medication Record"),(0,r.yg)("li",{parentName:"ul"},"Adaptor: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-satusehat"},(0,r.yg)("inlineCode",{parentName:"a"},"@openfn/language-satusehat"))),(0,r.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-satusehat"},(0,r.yg)("inlineCode",{parentName:"a"},"latest"))),(0,r.yg)("li",{parentName:"ul"},"Created date unknown"),(0,r.yg)("li",{parentName:"ul"},"Updated date unknown"),(0,r.yg)("li",{parentName:"ul"},"Score: ",(0,r.yg)("b",null,"100")," (an ",(0,r.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.yg)("h2",{id:"key-functions"},"Key Functions"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"post")),(0,r.yg)("h2",{id:"expression"},"Expression"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// Create medication in Satusehat based on an incoming Commcare visit\n\nfn(state => {\n  // state.visit is a Commcare Visit record\n  const properties = state.visit.properties;\n  const medicineKeys = Object.keys(properties).filter(\n    key =>\n      key.startsWith('prescription_') &&\n      !key.includes('_amount') &&\n      !key.includes('_instruction') &&\n      !key.includes('_dose')\n  );\n\n  const medicationId = util.uuid();\n\n  // Map medication data for each relevant key\n  state.medication = medicineKeys.map(item => {\n    return {\n      resourceType: 'Medication',\n      id: state => medicationId,\n      meta: {\n        profile: [\n          'https://fhir.kemkes.go.id/r4/StructureDefinition/Medication',\n        ],\n      },\n      identifier: [\n        {\n          system: `http://sys-ids.kemkes.go.id/medication/${state.visit.satusehatId}`,\n          use: 'usual',\n          value: item.fields['Nama'],\n        },\n      ],\n      code: {\n        coding: [\n          {\n            system: 'http://sys-ids.kemkes.go.id/kfa',\n            code: item.fields['kfa_codes'],\n            display: item.fields['Nama'],\n          },\n        ],\n      },\n      status: 'active',\n      extension: [\n        {\n          url: 'https://fhir.kemkes.go.id/r4/StructureDefinition/MedicationType',\n          valueCodeableConcept: {\n            coding: [\n              {\n                system:\n                  'http://terminology.kemkes.go.id/CodeSystem/medication-type',\n                code: 'NC',\n                display: 'Non-compound',\n              },\n            ],\n          },\n        },\n      ],\n    };\n  });\n\n  return state;\n});\n\n// Post our medication resources to Satusehat\npost('Medication', $.medication);\n\nfn(state => {\n  //  Store the newly created resources, created by the server, into state for the next step\n  state.medication = state.data;\n  return state;\n});\n\n")))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>y});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,y=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(y,o(o({ref:t},d),{},{components:n})):a.createElement(y,o({ref:t},d))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);