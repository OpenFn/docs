"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[48543],{2769:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"manage-projects/manage-credentials","title":"Manage Credentials","description":"You can view the Credentials related to a Project under the Project","source":"@site/docs/manage-projects/manage-credentials.md","sourceDirName":"manage-projects","slug":"/manage-projects/manage-credentials","permalink":"/documentation/manage-projects/manage-credentials","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/docs/manage-projects/manage-credentials.md","tags":[],"version":"current","frontMatter":{"title":"Manage Credentials"},"sidebar":"docs","previous":{"title":"Data Storage","permalink":"/documentation/manage-projects/io-data-storage"},"next":{"title":"User Roles","permalink":"/documentation/manage-projects/user-roles-permissions"}}');var i=t(74848),r=t(28453);const s={title:"Manage Credentials"},o=void 0,d={},c=[{value:"View all Project Credentials",id:"view-all-project-credentials",level:3},{value:"Create a new Credential",id:"create-a-new-credential",level:3},{value:"Share Credentials",id:"share-credentials",level:3},{value:"<code>Raw JSON</code> Credentials",id:"raw-json-credentials",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",img:"img",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["You can view the Credentials related to a Project under the Project\n",(0,i.jsx)(n.code,{children:"Settings > Credentials"})," page. In this article, you'll learn how to manage your\ncredentials related to a project."]}),"\n",(0,i.jsx)(n.h3,{id:"view-all-project-credentials",children:"View all Project Credentials"}),"\n",(0,i.jsxs)(n.p,{children:["Via this ",(0,i.jsx)(n.code,{children:"Credentials"})," page, you can see a list of all Credentials, including\nthe name, type, and owner, and whether they are for a production environment."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Credentials Overview",src:t(71483).A+"",width:"1917",height:"788"})}),"\n",(0,i.jsx)(n.admonition,{title:"Viewing credential secrets",type:"info",children:(0,i.jsx)(n.p,{children:"All Project Collaborators can view the credential name, type, and owner, but\nonly the Credential Owner can view the credential secrets (username, password,\netc.)."})}),"\n",(0,i.jsx)(n.h3,{id:"create-a-new-credential",children:"Create a new Credential"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click on the ",(0,i.jsx)(n.code,{children:"New Credential"})," button, and choose the type of app you want to\nconnect."]}),"\n",(0,i.jsx)(n.li,{children:'If your app is not listed, choose "Raw JSON" to create your own custom\ncredential or "configuration" input. For example:'}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{ "loginUrl": "https://random-app.com", "username": "test", "password": "pwd" }\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Credential Type",src:t(3804).A+"",width:"1098",height:"895"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.code,{children:"Configure Credentials"})," and add the authentication details for your\napp. The credential form will indicate which fields are required."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Add Credential",src:t(80251).A+"",width:"658",height:"955"})}),"\n",(0,i.jsx)(n.admonition,{title:"Not sure how to fill in all credential details?",type:"tip",children:(0,i.jsxs)(n.p,{children:['While creating a new credential form, if you\'re not sure what some of these\nfields require (e.g., "security token"), then head over to the relevant\n',(0,i.jsx)(n.code,{children:"Adaptors"}),' docs page to learn more and read about the "configuration schema" or\nask on ',(0,i.jsx)(n.a,{href:"https://community.openfn.org",children:"Community"}),"."]})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.code,{children:"Save"})," and you'll see it listed in your ",(0,i.jsx)(n.code,{children:"Credentials"})," page. You can now\nuse it across the Project when building and running Workflows."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"New Credential Ready",src:t(63028).A+"",width:"1592",height:"651"})}),"\n",(0,i.jsx)(n.h3,{id:"share-credentials",children:"Share Credentials"}),"\n",(0,i.jsxs)(n.p,{children:["If you own a Credential, you can choose which Project has access to it. To\nupdate which Projects your Credential is shared with, follow the steps on the\n",(0,i.jsx)(n.a,{href:"/documentation/user-credentials",children:"User Credentials docs page"}),"."]}),"\n",(0,i.jsxs)(n.h3,{id:"raw-json-credentials",children:[(0,i.jsx)(n.code,{children:"Raw JSON"})," Credentials"]}),"\n",(0,i.jsx)(n.p,{children:"Raw credentials are valid JSON documents which are passed into a job's runtime\nstate. Note that owners of these credentials will be able to view them, in their\nentirety, in the clear."}),"\n",(0,i.jsxs)(n.p,{children:["Raw credentials will work with any adaptor, so long as that adaptor's required\n",(0,i.jsx)(n.code,{children:"configuration"})," keys (e.g., ",(0,i.jsx)(n.code,{children:"baseUrl"}),') are specified in your credential. See the\n"configuration schema" docs for each adaptor to see what is required for that\napp.']}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Use ",(0,i.jsx)(n.code,{children:"Raw JSON"})," to specify custom credential inputs"]}),(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"Raw JSON"})," credential type if you would like to store secrets that are\nnot standard inputs in an adaptor's credential form. For example, if my REST API\nrequires a ",(0,i.jsx)(n.code,{children:"client_id"})," instead of a ",(0,i.jsx)(n.code,{children:"username"}),", then my ",(0,i.jsx)(n.code,{children:"configuration"})," schema\nmight look like the below code snippet. Because ",(0,i.jsx)(n.code,{children:"client_id"})," isn't an option in\nthe default ",(0,i.jsx)(n.code,{children:"Http"})," credential form, I can create my own custom credential using\nthe ",(0,i.jsx)(n.code,{children:"Raw JSON"})," type."]})]}),"\n",(0,i.jsxs)(n.p,{children:["Example Raw JSON credential body or ",(0,i.jsx)(n.code,{children:"configuration"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "baseUrl": "https://myapp.com/api",\n  "client_id": "test-j01",\n  "password": "testing123",\n  "customInput": "whateverYouWant"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},3804:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/lightning_choose_cred_type-2b19a6809d032a9c089e32a9177b11f4.webp"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var a=t(96540);const i={},r=a.createContext(i);function s(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:n},e.children)}},63028:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/lightning_new_cred_ready-ec3e7f706dc2460c45441a97dff92af7.webp"},71483:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/lightning_credentials_overview-84b3b870ac6d0d834b9fba106e49f42a.webp"},80251:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/lightning_add_cred-613d76ca022ff0dd5971a416bfc203de.webp"}}]);