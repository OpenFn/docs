"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[24165],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>r});var i=s(96540);const a={},o=i.createContext(a);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),i.createElement(o.Provider,{value:n},e.children)}},63535:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"packages/medicmobile-readme","title":"medicmobile developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/medicmobile","source":"@site/adaptors/packages/medicmobile-readme.md","sourceDirName":"packages","slug":"/packages/medicmobile-readme","permalink":"/adaptors/packages/medicmobile-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"medicmobile developer readme","id":"medicmobile-readme","keywords":["adaptor","readme","medicmobile"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/medicmobile-changelog"},"next":{"title":"Functions","permalink":"/adaptors/packages/mogli-docs"}}');var a=s(74848),o=s(28453);const t={title:"medicmobile developer readme",id:"medicmobile-readme",keywords:["adaptor","readme","medicmobile"]},r="medicmobile Adaptor developer README.md",c={},d=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"sample fetchSubmissions expression",id:"sample-fetchsubmissions-expression",level:4},{value:"sample changesApi and pickFormData usage",id:"sample-changesapi-and-pickformdata-usage",level:4},{value:"Development",id:"development",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"medicmobile-adaptor-developer-readmemd",children:"medicmobile Adaptor developer README.md"})}),"\n",(0,a.jsxs)(n.p,{children:["Source: ",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/medicmobile",children:"https://github.com/OpenFn/adaptors/tree/main/packages/medicmobile"})]}),"\n",(0,a.jsx)(n.h1,{id:"language-medic-mobile",children:"Language Medic Mobile"}),"\n",(0,a.jsxs)(n.p,{children:["Language Pack for building expressions and operations to make calls to the Medic\nMobile API.",(0,a.jsx)(n.br,{}),"\n",(0,a.jsxs)(n.strong,{children:["For an overview of Medic's database, check out\n",(0,a.jsx)(n.a,{href:"https://github.com/medic/medic-docs/blob/master/development/db-schema.md",children:"Medic's DB Schema v2"})]}),(0,a.jsx)(n.br,{}),"\n","The exported functions in this language package can be executed by\n",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/core",children:"OpenFn/core"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"../core/lib/cli.js execute -l ./lib/Adaptor -s ./tmp/state.json -e ./tmp/expression.js\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For quick-start help, clone\n",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/openfn-devtools",children:"OpenFn/openfn-devtools"})," and follow\nthe README.md"]}),"\n",(0,a.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,a.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,a.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,a.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/medicmobile-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,a.jsx)(n.h4,{id:"sample-fetchsubmissions-expression",children:"sample fetchSubmissions expression"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"fetchSubmissions(\n  'pregnancy', // formId\n  { 'last-event-id': 334 }, // params, last-event-id will be replaced by cursor\n  'http://localhost:4000/inbox/abc-123-xyz' // postUrl\n);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"sample-changesapi-and-pickformdata-usage",children:"sample changesApi and pickFormData usage"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// get all the changes...\nchangesApi({\n  include_docs: true,\n  // This only gets used the first time the job is run.\n  // Subsequent runs take the lastSeq value as their cursor.\n  // \"last-event-id\": 789,\n});\n\n// Picks out the field data for a given formId.\npickFormData('pregnancy');\n"})}),"\n",(0,a.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,a.jsxs)(n.p,{children:["Clone the ",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),". Follow the\n",(0,a.jsx)(n.code,{children:"Getting Started"})," guide inside to get set up."]}),"\n",(0,a.jsxs)(n.p,{children:["Run tests using ",(0,a.jsx)(n.code,{children:"pnpm run test"})," or ",(0,a.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,a.jsxs)(n.p,{children:["Build the project using ",(0,a.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["To just build the docs run ",(0,a.jsx)(n.code,{children:"pnpm build docs"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);