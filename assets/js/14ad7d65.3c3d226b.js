"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[15045],{28453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>o});var n=t(96540);const i={},r=n.createContext(i);function s(e){const a=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:a},e.children)}},46976:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>_,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"library/jobs/auto/Register-Participant-V2-Skillz-2021-06-02","title":"Register Participant - V2 Skillz","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Register-Participant-V2-Skillz-2021-06-02.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Register-Participant-V2-Skillz-2021-06-02","permalink":"/adaptors/library/jobs/auto/Register-Participant-V2-Skillz-2021-06-02","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Register Participant - V2 Skillz","sidebar_label":"Register Participant - V2 Skillz","id":"Register-Participant-V2-Skillz-2021-06-02","keywords":["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},"sidebar":"adaptors","previous":{"title":"Risk and Vulnerability Assessment","permalink":"/adaptors/library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27"},"next":{"title":"PHQ9","permalink":"/adaptors/library/jobs/auto/PHQ9-2021-05-03"}}');var i=t(74848),r=t(28453);const s={title:"Register Participant - V2 Skillz",sidebar_label:"Register Participant - V2 Skillz",id:"Register-Participant-V2-Skillz-2021-06-02",keywords:["library","job","expression","salesforce","alterState","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},o=void 0,l={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function d(e){const a={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,i.jsx)(a.h2,{id:"metadata",children:"Metadata"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Name: Register Participant - V2 Skillz"}),"\n",(0,i.jsxs)(a.li,{children:["Adaptor: ",(0,i.jsx)(a.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,i.jsx)(a.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,i.jsxs)(a.li,{children:["Adaptor Version: ",(0,i.jsx)(a.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,i.jsx)(a.code,{children:"latest"})})]}),"\n",(0,i.jsx)(a.li,{children:"Created about 4 years ago"}),"\n",(0,i.jsx)(a.li,{children:"Updated 7 months ago"}),"\n",(0,i.jsxs)(a.li,{children:["Score: ",(0,i.jsx)("b",{children:"0"})," (an ",(0,i.jsx)(a.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,i.jsxs)(a.p,{children:[(0,i.jsx)(a.code,{children:"alterState"}),", ",(0,i.jsx)(a.code,{children:"dataPath"}),", ",(0,i.jsx)(a.code,{children:"dataValue"}),", ",(0,i.jsx)(a.code,{children:"each"}),", ",(0,i.jsx)(a.code,{children:"field"}),", ",(0,i.jsx)(a.code,{children:"fields"}),", ",(0,i.jsx)(a.code,{children:"lastReferenceValue"}),", ",(0,i.jsx)(a.code,{children:"map"}),", ",(0,i.jsx)(a.code,{children:"merge"}),", ",(0,i.jsx)(a.code,{children:"query"}),", ",(0,i.jsx)(a.code,{children:"relationship"}),", ",(0,i.jsx)(a.code,{children:"upsert"}),", ",(0,i.jsx)(a.code,{children:"Array"})]}),"\n",(0,i.jsx)(a.h2,{id:"expression",children:"Expression"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-js",children:"query(`SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`);\n\nalterState(state => {\n  // Note: lastReferenceValue selects the first item in the references array.\n  state.data.eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n\n  function objectToArray(object) {\n    return !Array.isArray(object) ? [object] : object;\n  }\n\n  // if (state.data.form.question1) {\n  //   console.log('Ensuring that \"question1\" is an array.');\n  //   state.data.form.question1 = objectToArray(state.data.form.question1);\n  // } else {\n  //   console.log('Shifting \"new_participants\" to \"question1\" array.');\n  //   state.data.form.question1 = objectToArray(state.data.form.new_participants);\n  //   console.log('Creating a \"case\" object inside each item in that array.');\n  //   state.data.form.question1 = state.data.form.question1.map(item => ({\n  //     ...item,\n  //     case: item.create_skillz_plus_participant.case,\n  //   }));\n  // }\n\n  console.log('Done with initial data manipulation.');\n\n  return state;\n});\n\n// beta.each(\n//   merge(\n//     dataPath('form.question1[*]'),\n//     fields(\n//       field('intervention_notes_to_save', dataValue('form.intervention_notes_to_save')))\n//   ),\n\n  upsert(\n    'Person__c',\n    'Participant_Identification_Number_PID__c',\n    fields(\n      field('Notes__c', dataValue('form.intervention_notes_to_save')),\n      field('First_Name__c', dataValue('form.new_participants.participant_first_name')),\n      field('Surname__c', dataValue('form.new_participants.participant_surname')),\n      relationship('RecordType', 'Name', 'Participant'),\n      field('Participant_Identification_Number_PID__c', state => state.data.form.new_participants.create_skillz_plus_participant.case['@case_id']),\n      field('Sex__c', dataValue('gender')),\n      field('Mobile_Number_1__c', dataValue('form.new_participants.mobile_number')), //QUESTION: In CommCare, phone doesn't look like it's saving?\n      field('School_name_person__c', dataValue('form.new_participants.school_name')),\n      field('Date_of_Birth__c', dataValue('date_of_birth')),\n      field('School_name_person__c', dataValue('form.new_participants.school_name')),\n      field('Physical_Address__c', dataValue('form.new_participants.participants_home_address'))\n      //field('Age__c', dataValue('form.question1.age_in_years')), //This is a SF formula field, cannot map\n    )\n  )\n//);\n\n// each(\n//   merge(dataPath('form.question1[*]'), fields(\n//     field('intervention_name', dataValue('form.intervention_name')),\n//     field('eventName', dataValue('eventName')))),\n  upsert(\n    'Attendance__c',\n    'CommCare_Ext_ID__c',\n    fields(\n      field('CommCare_Ext_ID__c', state => {\n        var eventid = `${state.data.eventName}` || dataValue('form.intervention_name')(state);\n        var personid = state.data.form.new_participants.create_skillz_plus_participant.case['case_id'];//state.data.case['@case_id'];\n        return personid + '-' + eventid;\n      }),\n      relationship(\n        //Attendance looks up to Persn via the case_id\n        'Person_Attendance__r',\n        'Participant_Identification_Number_PID__c',\n        state => state.data.case['@case_id']\n      ),\n      relationship(\n        //Attendance looks up to Event via the intervention_name\n        'Event__r',\n        'CommCare_Case_ID__c',\n        state.data.form.new_participants.create_skillz_plus_participant.case.index.parent['#text']\n      ),\n      field('Date_of_Birth__c', dataValue('form.new_participants.date_of_birth'))\n    )\n  )\n//);\n"})})]})}function _(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);