"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[19672],{7859:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"postgresql","title":"PostgreSQL","description":"Overview","source":"@site/adaptors/postgresql.md","sourceDirName":".","slug":"/postgresql","permalink":"/adaptors/postgresql","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"PostgreSQL"},"sidebar":"adaptors","previous":{"title":"README.md","permalink":"/adaptors/packages/pesapal-readme"},"next":{"title":"Functions","permalink":"/adaptors/packages/postgresql-docs"}}');var a=t(74848),i=t(28453);const o={title:"PostgreSQL"},r=void 0,l={},d=[{value:"Overview",id:"overview",level:2},{value:"Integration Use Cases",id:"integration-use-cases",level:2},{value:"Integration Options",id:"integration-options",level:2},{value:"Authentication:",id:"authentication",level:3},{value:"Sample Job Expressions:",id:"sample-job-expressions",level:3},{value:"Integration tips",id:"integration-tips",level:3},{value:"Common Errors",id:"common-errors",level:2},{value:"OpenFn Adaptors",id:"openfn-adaptors",level:2},{value:"Implementation Examples",id:"implementation-examples",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"PostgreSQL is a free and open-source relational database management system. It\ncan be accessed and manipulated using SQL to extract or load data."}),"\n",(0,a.jsx)(n.h2,{id:"integration-use-cases",children:"Integration Use Cases"}),"\n",(0,a.jsx)(n.p,{children:"PostgreSQL databases are great for those looking to configure their own database\nand can be used to feed into reports and analytics."}),"\n",(0,a.jsx)(n.p,{children:"Example user stories:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"As an NGO program manager, I would like to be able to automatically see cases\nregistered in our case-management system in a Postgres database which is\nconnected to a visualization dashboard."}),"\n",(0,a.jsx)(n.li,{children:"As a fundraiser at an NGO, I would like to see all consumption data in\nPostgres so I can better monitor activities in real-time."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"integration-options",children:"Integration Options"}),"\n",(0,a.jsxs)(n.p,{children:["OpenFn adaptors (see\n",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/language-postgresql",children:"language-postgresql"}),") provide\ndirect database connections for accessing data and executing SQL and standard\ndatabase operations."]}),"\n",(0,a.jsx)(n.h3,{id:"authentication",children:"Authentication:"}),"\n",(0,a.jsx)(n.p,{children:"To create the direct DB connection, you'll need to specify the following\ncredential inputs."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "configuration": {\n    "host": "some-host-url.compute-1.amazonaws.com",\n    "port": "5432",\n    "database": "testdatabase",\n    "user": "myusername",\n    "password": "testing123",\n    "ssl": true,\n    "allowSelfSignedCert": true\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"(This authentication step is handled in the OpenFn adaptor.)"}),"\n",(0,a.jsx)(n.h3,{id:"sample-job-expressions",children:"Sample Job Expressions:"}),"\n",(0,a.jsxs)(n.p,{children:["This function creates a table ",(0,a.jsx)(n.code,{children:"users"})," in a database from a given array of\ncolumns."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"insertTable('users', state =>\n  state.data.map(column => ({\n    name: column.name,\n    type: column.type,\n    required: true, // optional\n    unique: false, // optional - set to true for unique constraint\n  }))\n);\n"})}),"\n",(0,a.jsx)(n.p,{children:"This function is used to insert a single record in a Postgres database."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"insert(\n  'users',\n  {\n    email: 'antony@gmail.com',\n    first_name: 'Antony',\n    inserted_at: '2020-08-27 00:00:00',\n    updated_at: '2020-08-27 00:00:00',\n  },\n  { setNull: [\"''\", \"'undefined'\"], writeSql: true, logValues: true }\n);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"/adaptors/library",children:"Job Library"})," for more sample jobs."]}),"\n",(0,a.jsx)(n.h3,{id:"integration-tips",children:"Integration tips"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Keys"}),": Make sure the primary key and foreign keys for each table are known\ndocumented in the mapping specifications"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Unique identifiers"}),': To avoid the "ON CONFLICT DO UPDATE command cannot\naffect row a second time" error discussed below, spend time thinking through\nwhich field or combination of fields makes each record unique using the sample\ndata recieved']}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Testing"}),": Create a robust test suite which outlines which tables should be\nupdated by each job run\n",(0,a.jsx)(n.img,{src:"https://user-images.githubusercontent.com/80456839/150614749-6d667df9-495c-4153-b5d6-48632e3ba05a.png",alt:"image"})]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"common-errors",children:"Common Errors"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Connection TIMEOUT"})," - This error usually means the destination system is\noffline or inaccessible to your user. Contact the destination system\nadministrator."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"error: value too long for type character varying(16)"})," &\n",(0,a.jsx)(n.code,{children:'error: null value in column "household_id" violates not-null constraint'})," -\nBoth of these errors highlight a mismatch in the data you're attempting to\nadd to the database and what it's configured to accept. In this case, you are\nsending more than 16 characters for a field that only accepts up to 16\ncharacters AND sending \"null\" for a required field in that table."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"error: ON CONFLICT DO UPDATE command cannot affect row a second time"}),"- This\nerror means that there are two rows with the same value for unique fields.\nReview the sample data and mapping specifications to decide what makes a\nrecord unique in that table."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"openfn-adaptors",children:"OpenFn Adaptors"}),"\n",(0,a.jsxs)(n.p,{children:["OpenFn implementations can leverage the\n",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/language-postgresql",children:(0,a.jsx)(n.code,{children:"PostgreSQL"})})," adaptor."]}),"\n",(0,a.jsx)(n.h2,{id:"implementation-examples",children:"Implementation Examples"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Wildlife Conservation Society Kobo < > Database:\n",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/consosci",children:"https://github.com/OpenFn/consosci"})]}),"\n",(0,a.jsxs)(n.li,{children:["Cambodia Primero < > ONA Database:\n",(0,a.jsx)(n.a,{href:"https://github.com/OpenFn/primero-ona-dashboard",children:"https://github.com/OpenFn/primero-ona-dashboard"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var s=t(96540);const a={},i=s.createContext(a);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);