"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[24724],{13997:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/workflow-ocl-example-0566a701c869d7712fb64304eaf632ec.webp"},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var a=t(96540);const i={},o=a.createContext(i);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(o.Provider,{value:n},e.children)}},36896:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/mapping_process-5bf5035b717440a83f041c290f722cfe.webp"},68699:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/mapping_example-ba632ee77e976a2c3dffd1546960eed6.webp"},74986:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"design/mapping-specs","title":"Writing Data Element Mapping Specifications","description":"This article walks through the data element mapping process used to develop","source":"@site/docs/design/mapping-specs.md","sourceDirName":"design","slug":"/design/mapping-specs","permalink":"/documentation/design/mapping-specs","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/docs/design/mapping-specs.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"Mapping Specifications","title":"Writing Data Element Mapping Specifications"},"sidebar":"docs","previous":{"title":"API Discovery","permalink":"/documentation/design/api-discovery"},"next":{"title":"Workflow Specifications","permalink":"/documentation/design/workflow-specs"}}');var i=t(74848),o=t(28453);const s={sidebar_label:"Mapping Specifications",title:"Writing Data Element Mapping Specifications"},r="Mapping data elements to define data integration & automation rules",l={},p=[{value:"OpenFn Mapping Specification Template",id:"openfn-mapping-specification-template",level:2},{value:"Mapping Considerations",id:"mapping-considerations",level:2},{value:"Maintaining Mapping Specifications",id:"maintaining-mapping-specifications",level:3},{value:"Functional vs. Technical Mapping",id:"functional-vs-technical-mapping",level:3},{value:"Global variables and mapping rules",id:"global-variables-and-mapping-rules",level:3},{value:"Managing global variables &amp; mappings outside of OpenFn",id:"managing-global-variables--mappings-outside-of-openfn",level:4},{value:"Mapping to Individual or Aggregate Entities",id:"mapping-to-individual-or-aggregate-entities",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"mapping-data-elements-to-define-data-integration--automation-rules",children:"Mapping data elements to define data integration & automation rules"})}),"\n",(0,i.jsx)(n.p,{children:'This article walks through the data element mapping process used to develop\nentity- and field-level specifications for how data points should be exchanged,\ncleaned, and/or transformed in a data integration workflow. In basic terms, data\nmapping is the process of connecting a data field from one source to a data\nfield in another source (e.g., System A "patient" = "person" in System B).'}),"\n",(0,i.jsx)(n.p,{children:"A data element mapping specification is a special type of data dictionary that\nserves as (1) documentation on how you are translating meaning between systems,\nand (2) specifications for developers building the workflow automation solution."}),"\n",(0,i.jsx)(n.p,{children:"For each automation step in your workflow, you will document which data elements\n(or metadata) will be referenced, as well as the \u201crules\u201d for how these data\nelements should be mapped, reassigned, cleaned, transformed, and/or calculated."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"mapping",src:t(68699).A+"",width:"944",height:"566"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"To draft a data element mapping specification, you\u2019ll need to\u2026"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Export the metadata or ask for a list of data elements from the target\nsystems,"}),"\n",(0,i.jsx)(n.li,{children:"Procure a sample \u201cinput\u201d record from the source system and procure a sample\noutput record from the destination system. At best, this is an example JSON\npayload or a link to example records. At worst, this is a screenshot or a CSV\nfile with \u201cdummy\u201d data."}),"\n",(0,i.jsx)(n.li,{children:"Start \u201cmapping\u201d the data elements and recording transformation rules!"}),"\n"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.th,{style:{textAlign:"center"},children:(0,i.jsx)(n.img,{alt:"mapping",src:t(36896).A+"",width:"1334",height:"648"})})})}),(0,i.jsx)(n.tbody,{children:(0,i.jsx)(n.tr,{children:(0,i.jsx)(n.td,{style:{textAlign:"center"},children:(0,i.jsx)(n.em,{children:"The data mapping process for data integration solutions."})})})})]}),"\n",(0,i.jsx)(n.h2,{id:"openfn-mapping-specification-template",children:"OpenFn Mapping Specification Template"}),"\n",(0,i.jsxs)(n.p,{children:["You can document data elements, mappings, and rules using the OpenFn mapping\nspecification template. This\n",(0,i.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/19sPRLP4zeFgFbtOL1wKh-rc7D0KPMu3etmOOG_x5t68/edit#gid=1275153608",children:"template"}),"\nwas created by the OpenFn team as a result of lessons learned from implementing\ndata integration solutions for NGOs and government partners around the world. It\nis used on all OpenFn projects and is maintained by the OpenFn team."]}),"\n",(0,i.jsx)(n.h2,{id:"mapping-considerations",children:"Mapping Considerations"}),"\n",(0,i.jsx)(n.h3,{id:"maintaining-mapping-specifications",children:"Maintaining Mapping Specifications"}),"\n",(0,i.jsx)(n.p,{children:"Once your OpenFn project is live, the Mapping Specs document may be the\nbusiness-friendly way your users interact with your solution. If you make any\nchanges, make sure the Mapping Spec always matches your job code. Also consider\nversioning your mapping specs so stakeholders have access to historical\nimplementations of the solution."}),"\n",(0,i.jsx)(n.h3,{id:"functional-vs-technical-mapping",children:"Functional vs. Technical Mapping"}),"\n",(0,i.jsx)(n.p,{children:"After your organization (or \u201cthe business\u201d) determines the functional data\nelement mapping rules for source/target systems, you'll need to consider which\nother technical data elements are required in order for the integration to work.\nThese may include system-specific fields, IDs, and/or API parameters that are\n\u201cunder the hood\" and may not be visible to the end user, but are required by the\ntarget system to share the data."}),"\n",(0,i.jsx)(n.h3,{id:"global-variables-and-mapping-rules",children:"Global variables and mapping rules"}),"\n",(0,i.jsx)(n.p,{children:'Sometimes when mapping lists of values or option sets (e.g., lists of diagnoses,\ngeographic hierarchies, list of services globally offered at the organization),\nthese values are "global" and need to referenced repeated throughout your\nworkflow implementation.'}),"\n",(0,i.jsxs)(n.p,{children:["For example, imagine that your source app has a list of coded location IDs\n(e.g., ",(0,i.jsx)(n.code,{children:"01, 02, 03"}),") that need to be mapped to a global list of location values\nor administrative units:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"//source location IDs: destination location values\n01: 'Western Cape',\n02: 'Eastern Cape',\n03: 'Gauteng'\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In your mapping spec, you should capture this list of global values and mapping\nrules in a separate ",(0,i.jsx)(n.code,{children:"globals"})," sheet to then reference throughout your mapping\nspec. See an example of this specification in the\n",(0,i.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/19sPRLP4zeFgFbtOL1wKh-rc7D0KPMu3etmOOG_x5t68/edit",children:"template mapping specification"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Then, when building your workflow to implement this globals mapping table\nspecification, your job expression might looks something like the below code\nsnippet."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"//Workflow step 1\n//First we use fn() to transform, map & clean our data\nfn(state => {\n\n    //Global mapping rules you want to implement in your workflow\n    const locationMap = {\n        //location_id from source app: location value in destination app\n        01: 'Western Cape',\n        02: 'Eastern Cape',\n        03: 'Gauteng'\n    }\n\n    // Here we build the payload of our http request body...\n    // We assume the input is an array of records\n    const payload = state.data.map(record => ({\n        location: locationMap[record.location_id] //translate location_id to the mapped value\n        external_id: record.case_id\n    }));\n\n    return {...state, payload};\n});\n\n//Workflow step 2\n//Then we post the payload built in the prior operation to create a record\npost('/api/myEndpoint', {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: (state) => state.payload\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"managing-global-variables--mappings-outside-of-openfn",children:"Managing global variables & mappings outside of OpenFn"}),"\n",(0,i.jsxs)(n.p,{children:["While the OpenFn XLS-based mapping template is helpful for collaborating with\nother stakeholders on defining the mapping requirements, once these\nspecifications are set, you might consider capturing any ",(0,i.jsx)(n.code,{children:"globals"})," mapping rules\nin an outside application, rather than hard-coding these in your job code\ndirectly (as in the example above)."]}),"\n",(0,i.jsxs)(n.p,{children:["Instead, you might store these global variables and mapping rules in a separate\ndatabase table or in an application like\n",(0,i.jsx)(n.a,{href:"https://openconceptlab.org/",children:"Open Concept Lab"}),", which has a user-friendly web\napp for recording data dictionaries & mapping rules, and REST API support. This\nwould then allow you to dynamically query these mapping rules using OpenFn, to\nensure your integration is utilizing the latest and greatest specifications."]}),"\n",(0,i.jsx)(n.p,{children:"In this case, your workflow configuration might look like the below, where the\nsecond step in the workflow is dedicated to querying this list of global\nmappings from the app in which they're stored to dynamically fetch the latest\nglobals every time the workflow is run."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"ocl-workflow-example",src:t(13997).A+"",width:"2848",height:"1300"})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["To see documentation of a workflow implementation that uses\n",(0,i.jsx)(n.a,{href:"https://openconceptlab.org/",children:"Open Concept Lab"})," to store mapping specifications\nand global variables,\n",(0,i.jsx)(n.a,{href:"https://docs.google.com/presentation/d/1NEhgHD3P9luYYsJFMfGee8eR8xA03MpgcZcGPpzTLjE/edit#slide=id.g1ed42eefbd1_0_0",children:"check out this"}),"\nM\xe9decins Sans Fronti\xe8res overview of an example OpenFn workflow that maps\nOpenMRS data to DHIS2."]})}),"\n",(0,i.jsx)(n.h3,{id:"mapping-to-individual-or-aggregate-entities",children:"Mapping to Individual or Aggregate Entities"}),"\n",(0,i.jsxs)(n.p,{children:["Consider if your integration requires a 1-to-1 exchange of individual records,\nor if there is a need for individual records to be summaries or aggregated. Your\nworkflow may require you to map individual entities (i.e., 1-to-1 mapping). For\nexample, you can map a patient from KoboToolBox to a patient in DHIS2. You\nshould use the\n",(0,i.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/19sPRLP4zeFgFbtOL1wKh-rc7D0KPMu3etmOOG_x5t68/edit#gid=1275153608",children:"default OpenFn mapping template"}),"\nfor such scenarios."]}),"\n",(0,i.jsxs)(n.p,{children:["However, if your workflow requires mapping individual entities to an\naggregate/summarized entity (i.e., many-to-1 mapping), then you can use OpenFn\u2019s\n",(0,i.jsx)(n.a,{href:"https://docs.google.com/spreadsheets/d/1JVcM7FEkCeezHXONRaAaEPFks9lS8xO_q51jql_hUtc/edit",children:"aggregate mapping template"}),"\nto start. For example, you might collect individual patient records in\nKoboToolBox, but want to send an aggregated count of patients to DHIS2 for key\nindicator results reporting (e.g. the number of patients under 18 years old)."]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);