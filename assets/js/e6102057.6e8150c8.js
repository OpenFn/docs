"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[5843],{69859:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=t(58168),a=(t(96540),t(15680));const s={title:"Risk and Vulnerability Assessment",sidebar_label:"Risk and Vulnerability Assessment",id:"Risk-and-Vulnerability-Assessment-2021-05-27",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","upsert"]},i=void 0,o={unversionedId:"library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27",id:"library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27",title:"Risk and Vulnerability Assessment",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27",permalink:"/adaptors/library/jobs/auto/Risk-and-Vulnerability-Assessment-2021-05-27",draft:!1,tags:[],version:"current",frontMatter:{title:"Risk and Vulnerability Assessment",sidebar_label:"Risk and Vulnerability Assessment",id:"Risk-and-Vulnerability-Assessment-2021-05-27",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","upsert"]},sidebar:"adaptors",previous:{title:"PHQ9",permalink:"/adaptors/library/jobs/auto/PHQ9-2021-05-03"},next:{title:"Upsert Attendance Skillz Plus Club",permalink:"/adaptors/library/jobs/auto/Upsert-Attendance-Skillz-Plus-Club-2021-05-24"}},_={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],u={toc:l},d="wrapper";function c(e){let{components:n,...t}=e;return(0,a.yg)(d,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,a.yg)("h2",{id:"metadata"},"Metadata"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Name: Risk and Vulnerability Assessment"),(0,a.yg)("li",{parentName:"ul"},"Adaptor: ",(0,a.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,a.yg)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,a.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,a.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4"},(0,a.yg)("inlineCode",{parentName:"a"},"v2.7.4"))),(0,a.yg)("li",{parentName:"ul"},"Created over 3 years ago"),(0,a.yg)("li",{parentName:"ul"},"Updated almost 3 years ago"),(0,a.yg)("li",{parentName:"ul"},"Score: ",(0,a.yg)("b",null,"3")," (an ",(0,a.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,a.yg)("h2",{id:"key-functions"},"Key Functions"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"alterState"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"field"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"fields"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"join"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"upsert")),(0,a.yg)("h2",{id:"expression"},"Expression"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"// Your job goes here. Testing github\nalterState(state => {\n  function checked(key, str) {\n    if (!str) return false;\n    return str.toString().split(' ').indexOf(key) >= 0;\n  }\n\n  function capitalizeFirstLetter(str) {\n    if (!str) return;\n    let new_str = str.toString().toLowerCase();\n    return new_str.slice(0, 1).toUpperCase() + new_str.slice(1);\n  }\n\n  function transformDont(str) {\n    if (!str) return str;\n    return str\n      .toString()\n      .split('_')\n      .map(word => word.replace(/dont/i, \"don't\"))\n      .join('_')\n      .toString()\n      .trim();\n  }\n\n  function transformCant(str) {\n    if (!str) return str;\n    return str\n      .toString()\n      .split('_')\n      .map(word => word.replace(/cant/i, \"can't\"))\n      .join('_')\n      .toString()\n      .trim();\n  }\n\n  function splitAndJoin(str, splitDelimiter, joinDelimiter) {\n    if (!str) return;\n\n    return str.toString().split(splitDelimiter).join(joinDelimiter).toString().trim();\n  }\n\n  function transformHowOften(str) {\n    if (!str) return;\n    if (str === 'special_occasions') return 'Special Occasions';\n    return transformGenericText(str).toString().trim();\n  }\n\n  function transformHIVStatus(status) {\n    switch (status) {\n      case 'yes_negative':\n        return 'Yes,Negative';\n      case 'yes_positive':\n        return 'Yes,Positive';\n      case 'no_i_dont':\n        return \"No,I don't know\";\n      case 'yes_dont_want_to_disclose':\n        return \"Yes, don't want to disclose\";\n      default:\n        return;\n    }\n  }\n\n  function transformLastTested(str) {\n    if (!str) return;\n    switch (str.toString()) {\n      case 'yes_negative':\n        return 'Yes,Negative';\n      case 'yes_positive':\n        return 'Yes,Positive';\n      case 'no_i_dont':\n        return \"No,I don't know\";\n      case 'yes_dont_want_to_disclose':\n        return \"Yes, don't want to disclose\";\n      default:\n        return;\n    }\n  }\n\n  function transformMonthAgo(str) {\n    if (!str) return;\n    switch (str) {\n      case 'month_ago':\n        return '1 month ago';\n      case 'months_ago':\n        return '3 months ago';\n      case 'month_ago':\n        return 'copy-1-of-months_ago ';\n      case 'month_ago':\n        return '6 months ago';\n      case 'a_year_or_more_ago':\n        return 'A year or more';\n      default:\n        return;\n    }\n  }\n\n  function transformGenericText(str) {\n    if (!str) return;\n    return capitalizeFirstLetter(splitAndJoin(transformDont(str), '_', ' '))\n      .toString()\n      .trim();\n  }\n\n  function transformRange(range) {\n    if (!range) return;\n    return range\n      .toString()\n      .replace(/\\d_\\d/i, match => match.replace('_', '-'))\n      .toString()\n      .trim();\n  }\n\n  function transformAgeRange(range) {\n    if (!range) return;\n    if (range === '10_years') return '< 10 years';\n    if (range === 'greater_than_19') return '> 19 years';\n    return capitalizeFirstLetter(transformDont(transformCant(splitAndJoin(transformRange(range), '_', ' '))))\n      .toString()\n      .trim();\n  }\n\n  function transformAbuseExperienced(str) {\n    if (!str) return;\n    return str\n      .split(' ')\n      .map(word => capitalizeFirstLetter(word))\n      .join(' ')\n      .toString()\n      .trim();\n  }\n  \n  function getAge(dateString) {\n    if (!dateString) return;\n\n    const today = new Date();\n    const birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  }\n\n  state.data.perform_a_risk_assessment = state.data.form.do_you_want_to_perform_a_risk_assessment === 'yes';\n\n  state.data.complete_service_referrals = state.data.form.referral_services ? true : false;\n  \n  state.data.form.hidden_properties.gender = \n    capitalizeFirstLetter(state.data.form.hidden_properties.gender);\n\n  state.helperFunctions = {\n    checked,\n    transformAgeRange,\n    transformHIVStatus,\n    transformLastTested,\n    transformMonthAgo,\n    transformGenericText,\n    transformDont,\n    splitAndJoin,\n    transformHowOften,\n    transformAbuseExperienced,\n    getAge,\n  };\n  return state;\n});\n\nupsert(\n  'Risk_Assessment__c',\n  'CommCare_Ext_ID__c',\n  fields(\n    field('CommCare_Ext_ID__c', dataValue('id')),\n    field('Date__c', dataValue('form.date')),\n    field('Participant_Name__c', state => {\n        var firstname = state.data.form.hidden_properties.praticipant_first_name;\n        var lastname = state.data.form.hidden_properties.participant_surname;\n        return firstname + ' ' + lastname;\n      }),\n    field('Participant_Age__c', state => {\n      const dob = dataValue('form.hidden_properties.date_of_birth')(state);\n\n      return state.helperFunctions.getAge(dob);\n    }),\n    field('Participant_Sex__c', dataValue('form.hidden_properties.gender')),\n    field('X1_0_Sexually_Active_past_12_month__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.sexually_active_12_months')(state)\n      )\n    ),\n    field('X1_1_Age_at_first_sex__c', state =>\n      state.helperFunctions.transformAgeRange(\n        dataValue('form.sexual_risk_and_pregnancy.age_at_first_sex')(state)\n      )\n    ),\n    field('X1_2_Have_you_ever_had_unprotected_sex__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.have_you_ever_had_unprotected_sex')(state)\n      )\n    ),\n    field('X1_3_Sex_for_monetary_or_material_benefi__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.sex_monetary_material')(state)\n      )\n    ),\n    field('Do_you_know_your_HIV_status__c', state =>\n      state.helperFunctions.transformHIVStatus(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.do_you_know_your_hiv_status')(state)\n      )\n    ),\n    field('X2_1_When_last_did_you_test_for_HIV__c', state =>\n      state.helperFunctions.transformMonthAgo(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.when_last_did_you_test_for_hiv')(state)\n      )\n    ),\n    field('X2_2_Are_you_on_treatment_ART__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.are_you_on_treatment_art')(state)\n      )\n    ),\n    field('X3_0_Had_an_STI_in_the_last_12months_yea__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.hiv_last_12_months')(state)\n      )\n    ),\n    field('X3_1_Past_12_months_sex_HIV_status_part__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.knowing_partners_hiv_status')(state)\n      )\n    ),\n    //PENDING Donny change data type in SF\n    // field('X4_0_Forms_of_abuse_experienced_before__c', state =>\n    //   state.helperFunctions.transformAbuseExperienced(\n    //     dataValue('form.risk_assessment.gender_based_violence.abuse_experienced')(state)\n    //   )\n    // ),\n    field('X4_1_Feel_unsafe_any1_interact_with_ofte__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.unsafe_with_others')(state)\n      )\n    ),\n    field('X4_2_Of_what_relationship_person_to_you__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.relationship_of_abuser')(state)\n      )\n    ),\n    field('X5_0_Do_you_take_alcohol_or_drugs__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.drugs_and_alcohol_use.do_you_take_alcohol_andor_drugs')(state)\n      )\n    ),\n    field('X5_1_On_average_how_often_drink_alcohol__c', state =>\n      state.helperFunctions.transformHowOften(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.drugs_and_alcohol_use.how_often_alcohol')(state)\n      )\n    ),\n    field('X5_2_On_average_how_often_take_drugs__c', state =>\n      state.helperFunctions.transformHowOften(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.drugs_and_alcohol_use.how_often_drugs')(state)\n      )\n    ),\n    field('X5_3_Easy_for_teens_to_obtain_alcohol__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.drugs_and_alcohol_use.alcohol_19')(state)\n      )\n    ),\n    field('X5_4__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.sexual_risk_and_pregnancy.hiv_status.sti_and_pep.gender_based_violence.drugs_and_alcohol_use.illegal_drugs_19')(state)\n      )\n    )\n  )\n);\n\n")))}c.isMDXComponent=!0},15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>f});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var _=r.createContext({}),l=function(e){var n=r.useContext(_),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(_.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,_=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=l(t),p=a,f=d["".concat(_,".").concat(p)]||d[p]||c[p]||s;return t?r.createElement(f,i(i({ref:n},u),{},{components:t})):r.createElement(f,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=p;var o={};for(var _ in n)hasOwnProperty.call(n,_)&&(o[_]=n[_]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);