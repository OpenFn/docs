"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[94395],{9320:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"library/jobs/auto/04a-Query-for-job-changes-2019-12-12","title":"04a/Query for job changes","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/04a-Query-for-job-changes-2019-12-12.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/04a-Query-for-job-changes-2019-12-12","permalink":"/adaptors/library/jobs/auto/04a-Query-for-job-changes-2019-12-12","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"04a/Query for job changes","sidebar_label":"04a/Query for job changes","id":"04a-Query-for-job-changes-2019-12-12","keywords":["library","job","expression","mysql","alterState"]},"sidebar":"adaptors","previous":{"title":"05a/Query for new employees","permalink":"/adaptors/library/jobs/auto/05a-Query-for-new-employees-2019-12-19"},"next":{"title":"02a/ Query DB for people to pay","permalink":"/adaptors/library/jobs/auto/02a-Query-DB-for-people-to-pay-2019-12-11"}}');var s=r(74848),t=r(28453);const o={title:"04a/Query for job changes",sidebar_label:"04a/Query for job changes",id:"04a-Query-for-job-changes-2019-12-12",keywords:["library","job","expression","mysql","alterState"]},i=void 0,l={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,s.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Name: 04a/Query for job changes"}),"\n",(0,s.jsxs)(n.li,{children:["Adaptor: ",(0,s.jsx)(n.a,{href:"https://www.github.com/openfn/language-mysql",children:(0,s.jsx)(n.code,{children:"@openfn/language-mysql"})})]}),"\n",(0,s.jsxs)(n.li,{children:["Adaptor Version: ",(0,s.jsx)(n.a,{href:"https://www.github.com/openfn/language-mysql",children:(0,s.jsx)(n.code,{children:"latest"})})]}),"\n",(0,s.jsx)(n.li,{children:"Created almost 6 years ago"}),"\n",(0,s.jsx)(n.li,{children:"Updated over 5 years ago"}),"\n",(0,s.jsxs)(n.li,{children:["Score: ",(0,s.jsx)("b",{children:"0"})," (an ",(0,s.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"alterState"})}),"\n",(0,s.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"sqlString(state => {\n  return \"SELECT position_id, position_name, salary, facility_id, facility_name, status \\\n    FROM position_updates WHERE status in ('NEW', 'CLOSED');\";\n});\n\nalterState(state => {\n  state.new_jobs = state.response.body;\n  console.log(state.new_jobs);\n  return state;\n})\n\nsqlString(state => {\n  return `UPDATE position_updates SET status='PROCESSED' WHERE status in ('NEW','CLOSED')`;\n});\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var a=r(96540);const s={},t=a.createContext(s);function o(e){const n=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(t.Provider,{value:n},e.children)}}}]);