"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[68795],{18365:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>_,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"library/jobs/auto/Upsert-Register-Participant-Skillz-2021-08-30","title":"Upsert Register Participant Skillz","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Upsert-Register-Participant-Skillz-2021-08-30.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Upsert-Register-Participant-Skillz-2021-08-30","permalink":"/adaptors/library/jobs/auto/Upsert-Register-Participant-Skillz-2021-08-30","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Upsert Register Participant Skillz","sidebar_label":"Upsert Register Participant Skillz","id":"Upsert-Register-Participant-Skillz-2021-08-30","keywords":["library","job","expression","salesforce","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},"sidebar":"adaptors","previous":{"title":"Upsert Risk and Vulnerability Assessment - Service Referral","permalink":"/adaptors/library/jobs/auto/Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25"},"next":{"title":"Upsert Register Skills plus Club","permalink":"/adaptors/library/jobs/auto/Upsert-Register-Skills-plus-Club-2021-04-30"}}');var i=n(74848),r=n(28453);const s={title:"Upsert Register Participant Skillz",sidebar_label:"Upsert Register Participant Skillz",id:"Upsert-Register-Participant-Skillz-2021-08-30",keywords:["library","job","expression","salesforce","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},o=void 0,l={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,i.jsx)(t.h2,{id:"metadata",children:"Metadata"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Name: Upsert Register Participant Skillz"}),"\n",(0,i.jsxs)(t.li,{children:["Adaptor: ",(0,i.jsx)(t.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,i.jsx)(t.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,i.jsxs)(t.li,{children:["Adaptor Version: ",(0,i.jsx)(t.a,{href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4",children:(0,i.jsx)(t.code,{children:"v2.7.4"})})]}),"\n",(0,i.jsx)(t.li,{children:"Created almost 4 years ago"}),"\n",(0,i.jsx)(t.li,{children:"Updated 7 months ago"}),"\n",(0,i.jsxs)(t.li,{children:["Score: ",(0,i.jsx)("b",{children:"0"})," (an ",(0,i.jsx)(t.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"dataPath"}),", ",(0,i.jsx)(t.code,{children:"dataValue"}),", ",(0,i.jsx)(t.code,{children:"each"}),", ",(0,i.jsx)(t.code,{children:"field"}),", ",(0,i.jsx)(t.code,{children:"fields"}),", ",(0,i.jsx)(t.code,{children:"lastReferenceValue"}),", ",(0,i.jsx)(t.code,{children:"map"}),", ",(0,i.jsx)(t.code,{children:"merge"}),", ",(0,i.jsx)(t.code,{children:"query"}),", ",(0,i.jsx)(t.code,{children:"relationship"}),", ",(0,i.jsx)(t.code,{children:"upsert"}),", ",(0,i.jsx)(t.code,{children:"Array"})]}),"\n",(0,i.jsx)(t.h2,{id:"expression",children:"Expression"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"query(\n  `SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  // Note: lastReferenceValue selects the first item in the references array.\n  state.data.eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n  state.data.eventCase = dataValue('form.case.@case_id')(state);\n\n  function objectToArray(object) {\n    return !Array.isArray(object) ? [object] : object;\n  }\n\n  const { form } = state.data;\n  if (form.question1) {\n    console.log('Ensuring that \"question1\" is an array.');\n    form.question1 = objectToArray(form.question1);\n  } else if (!form.new_participants) {\n    console.log('Nothing to upsert. No participants were registered');\n  } else {\n    console.log('Shifting \"new_participants\" to \"question1\" array.');\n    form.question1 = objectToArray(form.new_participants);\n    console.log('Creating a \"case\" object inside each item in that array.');\n    form.question1 = form.question1.map(item => ({\n      ...item,\n      case: item.create_skillz_plus_participant.case,\n    }));\n  }\n\n  console.log('Done with initial data manipulation.');\n  const persons = merge(\n    dataPath('form.question1[*]'),\n    fields(field('intervention_notes_to_save', dataValue('form.intervention_notes_to_save')))\n  )(state);\n\n  const attendances = merge(\n    dataPath('form.question1[*]'),\n    fields(\n      field('intervention_name', dataValue('form.intervention_name')),\n      field('eventCase', dataValue('eventCase')),\n      field('eventName', dataValue('eventName'))\n    )\n  )(state);\n\n  return { ...state, persons, attendances };\n});\n\neach(\n  'persons[*]',\n  upsert(\n    'Person__c',\n    'Participant_Identification_Number_PID__c',\n    fields(\n      field('Notes__c', dataValue('intervention_notes_to_save')),\n      field('First_Name__c', dataValue('participant_first_name')),\n      field('Surname__c', dataValue('participant_surname')),\n      relationship('RecordType', 'Name', 'Participant'),\n      relationship('Site__r', 'CommCare_Ext_ID__c', dataValue('grp_location.site_id')),\n      field('Participant_Identification_Number_PID__c', state => state.data.case['@case_id']),\n      field('Sex__c', dataValue('gender')),\n      field('Mobile_Number_1__c', dataValue('mobile_number')), //QUESTION: In CommCare, phone doesn't look like it's saving?\n      field('School_name_person__c', dataValue('school_name')),\n      field('Date_of_Birth__c', dataValue('date_of_birth')),\n      field('School_name_person__c', dataValue('school_name')),\n      field('Physical_Address__c', dataValue('participants_home_address')),\n      field('Age_1_0__c', dataValue('participants_age_to_save'))\n    )\n  )\n);\n\neach(\n  'attendances[*]',\n  upsert(\n    'Attendance__c',\n    'CommCare_Ext_ID__c',\n    fields(\n      field('CommCare_Ext_ID__c', state => {\n        const eventid = toUTF8(`${state.data.intervention_name}` || `${state.data.eventName}`); //dataValue('intervention_name')(state) || `${state.data.eventName}`;\n        const personid = state.data.case['@case_id'];\n        const value = personid + '-' + eventid.replace(/\\//gi, '');\n        return scrubEmojis(value, '');\n      }),\n      relationship(\n        //Attendance looks up to Persn via the case_id\n        'Person_Attendance__r',\n        'Participant_Identification_Number_PID__c',\n        state => state.data.case['@case_id']\n      ),\n      relationship(\n        //Attendance looks up to Event via the Event case_id\n        'Event__r',\n        'CommCare_Case_ID__c',\n        state => `${state.data.eventCase}`\n      ),\n      // relationship(\n      //   //Attendance looks up to Event via the intervention_name\n      //   'Event__r',\n      //   'CommCare_Ext_ID__c',\n      //   state => `${state.data.intervention_name}` || `${state.data.eventName}`\n      // ),\n      field('Date_of_Birth__c', dataValue('date_of_birth'))\n    )\n  )\n);\n\n//First we insert Person record\n// fn(state => {\n//   return upsert(\n//     'Person__c',\n//     'Participant_Identification_Number_PID__c',\n//     fields(\n//       field('Notes__c', dataValue('form.intervention_notes_to_save')),\n//       field('First_Name__c', dataValue('form.question1.participant_first_name')),\n//       field('Surname__c', dataValue('form.question1.participant_surname')),\n//       relationship('RecordType', 'Name', 'Participant'),\n//       field('Participant_Identification_Number_PID__c', state => state.data.case['@case_id']),\n//       field('Sex__c', dataValue('form.question1.gender')),\n//       //field('Age__c', dataValue('form.question1.age_in_years')), //This is a SF formula field, cannot map\n//       field('Mobile_Number_1__c', dataValue('form.question1.mobile_number')),\n//       field('School_name_person__c', dataValue('form.question1.school_name'))\n//     )\n//   )(state);\n// });\n\n// fn(state => {\n//   //Then we upsert related Attendance records\n//   return upsert(\n//     'Attendance__c',\n//     'CommCare_Ext_ID__c',\n//     fields(\n//       field('CommCare_Ext_ID__c', state => {\n//         var eventid = dataValue('form.intervention_name')(state);\n//         var personid = dataValue('form.case.@case_id')(state);\n//         return personid + '-' + eventid;\n//       }),\n//       relationship(\n//         //Attendance looks up to Persn via the case_id\n//         'Person_Attendance__r',\n//         'Participant_Identification_Number_PID__c',\n//         dataValue('form.case.@case_id')\n//       ),\n//       relationship(\n//         //Attendance looks up to Event via the intervention_name\n//         'Event__r',\n//         'Name',\n//         dataValue('form.intervention_name')\n//       ),\n//       field('Date_of_Birth__c', dataValue('form.question1.date_of_birth'))\n//     )\n//   )(state);\n// });\n\n"})})]})}function _(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var a=n(96540);const i={},r=a.createContext(i);function s(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);