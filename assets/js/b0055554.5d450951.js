"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[64293],{28453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>a});var t=n(96540);const s={},i=t.createContext(s);function r(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:o},e.children)}},81427:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"jobs/multiple-operations","title":"Using multiple operations","description":"You can do many things in sequence with OpenFn, whether using core,","source":"@site/versioned_docs/version-legacy/jobs/multiple-operations.md","sourceDirName":"jobs","slug":"/jobs/multiple-operations","permalink":"/documentation/legacy/jobs/multiple-operations","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/versioned_docs/version-legacy/jobs/multiple-operations.md","tags":[],"version":"legacy","frontMatter":{"title":"Using multiple operations"},"sidebar":"docs","previous":{"title":"What\'s an operation?","permalink":"/documentation/legacy/jobs/operations"},"next":{"title":"Initial and final state for runs","permalink":"/documentation/legacy/jobs/state"}}');var s=n(74848),i=n(28453);const r={title:"Using multiple operations"},a=void 0,l={},c=[{value:"Flow jobs vs multiple operations in a single job vs posting back to the inbox",id:"flow-jobs-vs-multiple-operations-in-a-single-job-vs-posting-back-to-the-inbox",level:2},{value:"Reasons to use flow jobs",id:"reasons-to-use-flow-jobs",level:3},{value:"Reasons to use multiple operations in a single job",id:"reasons-to-use-multiple-operations-in-a-single-job",level:3},{value:"Reasons to post back to the inbox",id:"reasons-to-post-back-to-the-inbox",level:3}];function d(e){const o={code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(o.p,{children:["You can do many things in sequence with OpenFn, whether using ",(0,s.jsx)(o.code,{children:"core"}),",\n",(0,s.jsx)(o.code,{children:"microservice"}),", or ",(0,s.jsx)(o.code,{children:"platform"}),"."]}),"\n",(0,s.jsx)(o.h2,{id:"flow-jobs-vs-multiple-operations-in-a-single-job-vs-posting-back-to-the-inbox",children:"Flow jobs vs multiple operations in a single job vs posting back to the inbox"}),"\n",(0,s.jsx)(o.h3,{id:"reasons-to-use-flow-jobs",children:"Reasons to use flow jobs"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["Each operation needs to use functions that are ",(0,s.jsx)(o.em,{children:"only"})," available in different\nadaptors."]}),"\n",(0,s.jsxs)(o.li,{children:["You ",(0,s.jsx)(o.em,{children:"must"})," have different credentials for each operation"]}),"\n",(0,s.jsx)(o.li,{children:"You want to see success and failure at the level of each operation"}),"\n",(0,s.jsxs)(o.li,{children:["Each individual run takes a long time and you're worried about your NodeVM\nbeing timed out. (On ",(0,s.jsx)(o.code,{children:"platform"}),", this happens after 100s for non-enterprise\nusers; on ",(0,s.jsx)(o.code,{children:"microservice"})," you've likely configured your own timeout duration.)"]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"reasons-to-use-multiple-operations-in-a-single-job",children:"Reasons to use multiple operations in a single job"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"The job must be atomic, you want the whole thing to count as a failure if any\npart of it fails."}),"\n",(0,s.jsx)(o.li,{children:"You run jobs manually and you want a single button to click to retry the\nentire sequence of operations."}),"\n",(0,s.jsxs)(o.li,{children:["You update a ",(0,s.jsx)(o.code,{children:"cursor"})," in a series of operations that involve ",(0,s.jsx)(o.code,{children:"GET"})," and ",(0,s.jsx)(o.code,{children:"POST"}),".\nWhen the ",(0,s.jsx)(o.code,{children:"POST"})," fails, you don't want to update the ",(0,s.jsx)(o.code,{children:"cursor"})," for the\nsubsequent job run which contains the ",(0,s.jsx)(o.code,{children:"GET"}),"."]}),"\n",(0,s.jsxs)(o.li,{children:["Your operations don't take too long (<100s in total for ",(0,s.jsx)(o.code,{children:"platform"}),") and you\nwant to reduce the number of executions."]}),"\n"]}),"\n",(0,s.jsx)(o.h3,{id:"reasons-to-post-back-to-the-inbox",children:"Reasons to post back to the inbox"}),"\n",(0,s.jsxs)(o.p,{children:["You might decide to send data from a ",(0,s.jsx)(o.code,{children:"GET"})," back to your inbox and let another\njob be triggered by a message filter."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-js",children:"get('somePath', { query: { after: '2020-10-12' } }, post('my-inbox-uuid'));\n"})}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsx)(o.li,{children:"You'd like to store the result of the first operation for later use or\ninspection and not have to retry that operation in order to reproduce the\ndata."}),"\n",(0,s.jsx)(o.li,{children:"You don't care about small delays between the first and second job being run."}),"\n"]})]})}function u(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);