"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[3296],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},87877:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"release-notes","title":"Release Notes","description":"Release notes for OpenFn/plaform","source":"@site/docs/release-notes.md","sourceDirName":".","slug":"/release-notes","permalink":"/documentation/release-notes","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/docs/release-notes.md","tags":[],"version":"current","frontMatter":{"title":"Release Notes"}}');var r=s(74848),t=s(28453);const o={title:"Release Notes"},a=void 0,l={},d=[{value:"Version 1.94.87 (2021-07-05)",id:"version-19487-2021-07-05",level:2},{value:"Version v1.94.80 (2021-05-25)",id:"version-v19480-2021-05-25",level:2},{value:"Version 1.92.44 (2021-05-07)",id:"version-19244-2021-05-07",level:2},{value:"Version 1.90.30 (2021-03-31)",id:"version-19030-2021-03-31",level:2},{value:"Version 1.89.29 (2021-03-24)",id:"version-18929-2021-03-24",level:2},{value:"Version 1.89.0 (2021-03-15)",id:"version-1890-2021-03-15",level:2},{value:"Version 1.88.0 (2021-02-22)",id:"version-1880-2021-02-22",level:2},{value:"Version 1.87.8 (2021-01-28)",id:"version-1878-2021-01-28",level:2},{value:"Version 1.75.0 (2020-07-14)",id:"version-1750-2020-07-14",level:2},{value:"Version 1.72.17 (2020-06-21)",id:"version-17217-2020-06-21",level:2},{value:"Version 1.37.0 (2019-10-21)",id:"version-1370-2019-10-21",level:2},{value:"Version 1.36.0 (2019-10-01)",id:"version-1360-2019-10-01",level:2},{value:"Version 1.35.0 (2019-10-01)",id:"version-1350-2019-10-01",level:2},{value:"Version 1.22.0 (2019-03-10)",id:"version-1220-2019-03-10",level:2},{value:"Version 1.21.0 (2019-03-09)",id:"version-1210-2019-03-09",level:2},{value:"Version 1.20.0 (2019-03-07)",id:"version-1200-2019-03-07",level:2},{value:"Version 1.10.0 (2017-05-04)",id:"version-1100-2017-05-04",level:2},{value:"Version 1.9.0 (2017-03-07)",id:"version-190-2017-03-07",level:2},{value:"Version 1.75.0 (2016-12-08)",id:"version-1750-2016-12-08",level:2},{value:"Version 1.7.0 (2016-12-05)",id:"version-170-2016-12-05",level:2},{value:"<em>1.7 is all about user experience!</em>",id:"17-is-all-about-user-experience",level:4},{value:"Version 1.6.0 (2016-11-24)",id:"version-160-2016-11-24",level:2},{value:"Version 1.5.0 (2016-10-05)",id:"version-150-2016-10-05",level:2},{value:"Version 1.4.0 (2016-09-26)",id:"version-140-2016-09-26",level:2},{value:"Version 1.3.0 (2016-09-20)",id:"version-130-2016-09-20",level:2},{value:"Version 1.2.0 (2016-09-15)",id:"version-120-2016-09-15",level:2},{value:"Version 1.1.0 (2016-08-29)",id:"version-110-2016-08-29",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Release notes for ",(0,r.jsx)(n.strong,{children:"OpenFn/plaform"})]}),"\n",(0,r.jsx)(n.h2,{id:"version-19487-2021-07-05",children:"Version 1.94.87 (2021-07-05)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full text search with Search Console"}),": Users can now search across message\nbodies, message headers, and run logs via full-text string search."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-v19480-2021-05-25",children:"Version v1.94.80 (2021-05-25)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced date selection for inbox and activity history:"})," Users can now type\na date string ",(0,r.jsx)(n.code,{children:"YYYY-MM-DD HH:mm:ss"}),", directly into the date field as a filter,\nor select it as before from the date picker."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Inbox and Activity History speed enhancements:"})," Via database structure\nchanges, the speed for loading lists of messages and runs has been improved\nsignificantly."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"New Export and Reprocess Interfaces:"}),' A unified\n"what-you-see-is-what-you-get" interface has been implemented for exporting\nand reprocessing messages and runs. Now, the bulk query is taken from the\ncurrent filters and a confirmation dialog which displays the query is\npresented to the user. This allows users to have a strong understand of what\nwill be exported or reprocessed before executing the bulk request.']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-19244-2021-05-07",children:"Version 1.92.44 (2021-05-07)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Exclusion filters:"})," Users can now specify message filter triggers to\n",(0,r.jsx)(n.em,{children:"exclude"})," messages matching a certain signature via the same matching rules as\nthe standard ",(0,r.jsx)(n.em,{children:"inclusion"})," filter. Read more in the\n",(0,r.jsx)(n.a,{href:"/documentation/build/triggers#message-filter-triggers",children:"docs"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-19030-2021-03-31",children:"Version 1.90.30 (2021-03-31)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Streaming logs:"})," Users can now view individual logs lines as they are\nemitted by their NodeVM during the execution of a run."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Click to find paths:"})," Users can now click on a node in a sample message in\nthe job studio to copy the path to that node. It can then be pasted into the\nexpression."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Run directly from job studio:"})," While writing a job in the job studio, it's\nnow possible to start a run for that job given the sample message and the logs\nwill automatically be streamed back to the Job Studio."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-18929-2021-03-24",children:"Version 1.89.29 (2021-03-24)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sample message explorer:"})," When writing a job, users can view a selection of\nmatching messages which would cause the job to run. Now, that sample\n",(0,r.jsx)(n.code,{children:"state.json"})," view is more easily browseable as a tree, and by clicking\nindividual nodes in the tree users can determine the require ",(0,r.jsx)(n.code,{children:"path"})," to\naccessing source data. For example, clicking on a node at\n",(0,r.jsx)(n.code,{children:"state.data.patient.lastVisitDate"})," will copy\n",(0,r.jsx)(n.code,{children:"dataValue('patient.lastVisitDate')"})," to your clipboard for pasting into the\njob expression in the adjacent panel."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Bug Fixes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Addressed an issue with the archive service which resulted in incomplete\narchiving of expired data. This impacted users with 365 day retention plans\nand Google Cloud Storage ",(0,r.jsx)(n.code,{children:".zip"})," archiving for data past its platform expiry.\n",(0,r.jsx)(n.em,{children:"Data stored on the platform itself was unaffected"})," but automatic archives for\ndata that expired from August 1st, 2019 to March 31st, 2020 only contains a\nsubset of the messages and runs from that period."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1890-2021-03-15",children:"Version 1.89.0 (2021-03-15)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Export as yaml or microservice.zip:"})," Users can now export their project\nconfigurations (triggers, jobs, credentials) as a ",(0,r.jsx)(n.code,{children:".yaml"})," file which can be\nrun with ",(0,r.jsx)(n.code,{children:"OpenFn/microservice"})," or as a ",(0,r.jsx)(n.code,{children:".zip"})," file with a prepared\nmicroservice implementation which can be extracted and started with\n",(0,r.jsx)(n.code,{children:"docker-compose up"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1880-2021-02-22",children:"Version 1.88.0 (2021-02-22)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Typeahead snippets:"}),' When writing jobs on OpenFn.org, users are now\nprompted with a typeahead (or "autocomplete") dialog which shows them all\navailable helper functions and provides rich templates which can be accessed\nat a keystroke. The result is a simpler, more intuitive job writing experience\nthat is more tightly coupled to the adaptors themselves.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Better IDE mode:"}),' When editing a job, users are now provided with either a\nstep-by-step "wizard" mode or a full-screen integrated development environment\n(IDE) which gives them a flexible workspace for viewing sample receipts,\ndrafting jobs, and exploring documentation.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Direct links to source code:"})," In the documentation drawer, users now find\ndirect links to the source code for each ",(0,r.jsx)(n.em,{children:"version"})," of the adaptor they're\nusing so that they don't need to take extra steps once on GitHub."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Save and share searches and filters:"})," On the ",(0,r.jsx)(n.strong,{children:"Inbox"})," and ",(0,r.jsx)(n.strong,{children:"Activity\nHistory"}),' pages the current filter (e.g., "Only show messages from the last 7\ndays matching trigger X with associated job runs in a failed state") is now\nstored in the URL, allowing users to bookmark particular searches and share\nthose searches/filters with colleagues.']}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1878-2021-01-28",children:"Version 1.87.8 (2021-01-28)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Improved logging on timeouts:"})," We've enhanced job timeouts significantly,\nsplitting into two separate types of timeouts. Exit code ",(0,r.jsx)(n.code,{children:"2"}),' is a standard\ntimeout which allows us to display the full Javascript logs up to the moment\nof the timeout instead of a mysterious "we timed out your run" message. Exit\ncode ',(0,r.jsx)(n.code,{children:"4"})," will be used for when the NodeVM fails to time itself out and becomes\nunresponsive. This second case is extremely rare."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1750-2020-07-14",children:"Version 1.75.0 (2020-07-14)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scheduled jobs replace timer jobs:"}),' In the past "interval trigger." behaved\nlike sand timers, executing your jobs every ',(0,r.jsx)(n.code,{children:"x"})," seconds. This functionality\nhas been completely overhauled, giving users much greater control over when\njobs get executed by introducing ",(0,r.jsx)(n.code,{children:"cron"})," expressions. Learn about ",(0,r.jsx)(n.code,{children:"cron"})," via\nthe OpenFn UI, or at\n",(0,r.jsx)("a",{href:"https://crontab.guru",target:"_blank",children:"crontab.guru"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-17217-2020-06-21",children:"Version 1.72.17 (2020-06-21)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Credential sharing:"})," Users can now share credentials across multiple\nprojects ",(0,r.jsx)(n.em,{children:"and"})," transfer credential ownership to other users."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced credential security:"})," Project owners can now ",(0,r.jsx)(n.em,{children:"disable"})," ",(0,r.jsx)(n.code,{children:"console"}),"\nfor particular jobs in their projects. This can be used to stop unintentional\nor malicious printing of credential data to the logs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Test mode for HTTP jobs:"}),' Users can turn on "test mode" for jobs, which\nwill intercept all outbound HTTP requests, print the request parameters to the\nlog, and provide a 200 OK response. This can be used to test integrations for\nsystems that are still in development.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced debugging/open-source integration:"})," Now using a new version of\nOpenFn/core which displays the current langauge-package version and Node JS\nversion for better debugging and a tighter integration between our\noffline/open-source tools and the platform."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Enhanced monitoring:"})," Queue size monitor allows users to see approximately\nhow many runs are in their queue\u2014this is useful for estimating time to\ncompleting for big bulk reprocessing jobs."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1370-2019-10-21",children:"Version 1.37.0 (2019-10-21)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Submit ODK Collect forms (or any OpenRosa compliant form) directly to an\nOpenFn inbox, rather than to ODK Aggregate or some other server before\nforwarding."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1360-2019-10-01",children:"Version 1.36.0 (2019-10-01)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Allow messages to be deleted (in accordance with plan retention periods)\ndespite having more recent runs related to them. We set the message to "null"\nfor these younger runs, but the run logs will still be available until they\'re\npast the retention period. This allows sensitive data in the initial message\npayload to be purged with the retention period, while less sensitive data in\nthe run logs is still kept.'}),"\n",(0,r.jsxs)(n.li,{children:["Added more specific exit codes to runs for non-standard exits. Note that exit\ncodes above 2 are ",(0,r.jsx)(n.em,{children:"very"})," rare. See below for new codes from ",(0,r.jsx)(n.code,{children:"v1.36.0"})," onwards."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Enhanced Error Codes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"0"}),": success (run succeeded, e.g. a destination system responded with a ",(0,r.jsx)(n.code,{children:"200"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"1"}),": error (run failed normally, e.g. a destination system responded with a\n",(0,r.jsx)(n.code,{children:"4XX"}),", ",(0,r.jsx)(n.code,{children:"5XX"}),", or some specialized ",(0,r.jsx)(n.code,{children:"RequiredFieldMissing"})," error.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"2"}),": run timed out (runs >100s only supported in enterprise plans)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"3"}),": run could not start due to error (could relate to network traffic, but\nvery rare as an error ",(0,r.jsx)(n.em,{children:"before"})," the run is started will be retried from Redis\nwith an exponential backoff for a very long time)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"5"}),": unexpected error during job execution"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"10"}),": error in ",(0,r.jsx)(n.code,{children:"core/cli.js execute"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1350-2019-10-01",children:"Version 1.35.0 (2019-10-01)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Default navigation drawer to open and grouped nav items for easier access"}),"\n",(0,r.jsx)(n.li,{children:"Various UI bug-fixes"}),"\n",(0,r.jsx)(n.li,{children:"Added new indexes on messages and runs for faster search and filter\nperformance."}),"\n",(0,r.jsx)(n.li,{children:"Enhanced bulk-retry feature for runs"}),"\n",(0,r.jsx)(n.li,{children:"Enhanced bulk-reprocess feature for messages"}),"\n",(0,r.jsx)(n.li,{children:"Added user-warning when connecting a job to a GitHub filepath: the contents at\nthat filepath will overwrite your current OpenFn job on the next GitHub commit"}),"\n",(0,r.jsx)(n.li,{children:"Added historical project usage view"}),"\n",(0,r.jsxs)(n.li,{children:["Added activity cleaning, as per ",(0,r.jsx)(n.a,{href:"http://www.openfn.org/pricing#plans",children:"www.openfn.org/pricing#plans"})," to better comply\nwith data protection regulations and improve UI performance"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1220-2019-03-10",children:"Version 1.22.0 (2019-03-10)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Allow ",(0,r.jsx)(n.strong,{children:"filtering by run status (any, success, failed) for bulk retrying\nruns"})," in the Run Retry modal."]}),"\n",(0,r.jsxs)(n.li,{children:["Hovering over a message/run ",(0,r.jsx)(n.strong,{children:"displays the full date-time"})," at which it was\nreceived/started as well as the relative time (i.e., how long ago) of that\naction."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1210-2019-03-09",children:"Version 1.21.0 (2019-03-09)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Added buttons to the Job, Run, and Activity History pages that allow a user to\n",(0,r.jsx)(n.strong,{children:"run a time triggered job on demand"})," so that they don't have to wait for the\ntimer to expire to test."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1200-2019-03-07",children:"Version 1.20.0 (2019-03-07)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"We've been busy, but negligent on release notes. To explain all that's\nchanged we've broken the new features list into multiple sections."})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Messages & the "Inbox" view:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Filter messages by body text"}),". (Be patient, doing ",(0,r.jsx)(n.code,{children:"tsvector"})," searching\nacross millions of payloads.)"]}),"\n",(0,r.jsx)(n.li,{children:"Filter by date. (Default inbox view shows last 30 days.)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Export messages"})," as a CSV, based on your currently applied filters."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bulk reprocess messages"})," in a series."]}),"\n",(0,r.jsx)(n.li,{children:"All projects on paid plans now have their own job running queues."}),"\n",(0,r.jsx)(n.li,{children:'Partial loading to address inbox view performance issues: messages are loaded\nfirst on the inbox view, and then their related "run states" are calculated\nand loaded in a second action.'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:'Runs & the "Activity History" view:'}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Filter runs by log text"}),". (This is a full text search and may take some\ntime.)"]}),"\n",(0,r.jsx)(n.li,{children:"Filter by date. (Default activity history view shows last 30 days.)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bulk retry runs"})," in a series. (With the ability to limit retries to a\ncertain job.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Export runs"})," as a CSV, based on your currently applied filters."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Authentication & Security:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Require basic auth or token auth to make HTTP requests to a project inbox."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Project Settings:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'View the "inbox URL" as text with a click-to-reveal button.'}),"\n",(0,r.jsx)(n.li,{children:'Show "pace" of estimated usage to determine when a plan upgrade will be\nnecessary.'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Jobs:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Ability to create a job, and a trigger all from the same "Wizard" view.'}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Triggers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Ability to create "success" and "failure" triggers so that jobs can be run\nbased on the success or failure of another job run.'}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1100-2017-05-04",children:"Version 1.10.0 (2017-05-04)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"GitHub integration now generally available for enterprise users. Self-setup\ninterface completed."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-190-2017-03-07",children:"Version 1.9.0 (2017-03-07)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"View matching messages in the job writing interface when a message filter\ntrigger is selected."}),"\n",(0,r.jsx)(n.li,{children:'"Tree view" exposed for job expression viewing. With valid syntax, you\'re able\nto see your expression as a syntax tree as we step slowly towards a more\npoint-and-click interface.'}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-1750-2016-12-08",children:"Version 1.75.0 (2016-12-08)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hold control while clicking on navigation buttons to open the target in a new\nwindow."}),"\n",(0,r.jsx)(n.li,{children:"Filter messages in your inbox by their content by selecting a message-filter\ntrigger."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-170-2016-12-05",children:"Version 1.7.0 (2016-12-05)"}),"\n",(0,r.jsx)(n.h4,{id:"17-is-all-about-user-experience",children:(0,r.jsx)(n.em,{children:"1.7 is all about user experience!"})}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Material design\u2014more whitespace and cleaner lines."}),"\n",(0,r.jsx)(n.li,{children:"Goto page on inbox and activity tables\u2014save time when processing errors."}),"\n",(0,r.jsx)(n.li,{children:"Change number of items per page on inbox and activity table\u2014care with this one\non slow connections!"}),"\n",(0,r.jsx)(n.li,{children:"Go to next or previous message or run\u2014makes working through an audit trail\neasier"}),"\n",(0,r.jsx)(n.li,{children:"Change user profile settings without changing password"}),"\n",(0,r.jsx)(n.li,{children:"Select syntax style for code editors in user settings\u2014clouds midnight is my\nnew favorite"}),"\n",(0,r.jsx)(n.li,{children:"Filter projects, jobs, triggers by name\u2014on the fly for quick navigation"}),"\n",(0,r.jsx)(n.li,{children:"Add adaptor logos to credentials list\u2014quick identification"}),"\n",(0,r.jsx)(n.li,{children:'Specify connection types on "Apps" list\u2014seems there was some confusion about\nthis. I know we\'re missing plenty of apps that have good APIs. Will consider\nlogging API documentation as well.'}),"\n",(0,r.jsx)(n.li,{children:'Shift second top-nav to a collapseable "side nav"\u2014better use of screen\nreal-esate.'}),"\n",(0,r.jsx)(n.li,{children:"Use 'masonry' packing module for jobs, triggers, credentials, and project\nsettings boxes\u2014more efficient use of space"}),"\n",(0,r.jsxs)(n.li,{children:["Add material design to ",(0,r.jsx)(n.em,{children:"this"})," documentation page!"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"version-160-2016-11-24",children:"Version 1.6.0 (2016-11-24)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Updated payment receipts to include project names."}),"\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.code,{children:"update(...)"})," to Salesforce adaptor v0.3.0"]}),"\n",(0,r.jsxs)(n.li,{children:["Added ",(0,r.jsx)(n.code,{children:"fetchWithErrors"})," to HTTP adaptor v0.3.1"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["New Salesforce helper function ",(0,r.jsx)(n.code,{children:"update(...)"}),":"]}),' It takes an object and, so\nlong as you\'re using the "Id" only updates.']}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'update("Patient__c", fields(\n  field("Id", dataValue("pathToSalesforceId"),\n  field("Name__c", dataValue("patient.first_name")),\n  field(...)\n))\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["New http helper function ",(0,r.jsx)(n.code,{children:"fetchWithErrors(...)"}),":"]})," This function will perform\na get request on an endpoint and return the response to another endpoint,\nregardless of whether the first GET suceeded or failed. It's currently being\nused to send message receipt confirmations back to a system of origin that uses\nOpenFn as an intermediary between it and an SMS gateway. If the SMS message\ndoesn't get delivered because the phone number is invalid, we'd like that\ninformation the return all the way to Salesforce, rather than erroring out and\nstaying in OpenFn."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'// =============\n// We use "fetchWithErrors(...)" so that when the\n// SMS gateway returns an error the run does not "fail".\n// It "succeeds" and then delivers that error message\n// back to Salesforce with the "Update SMS Status" job.\n// =============\nfetchWithErrors({\n  getEndpoint: \'send_to_contact\',\n  query: function (state) {\n    return {\n      msisdn:\n        state.data.Envelope.Body.notifications.Notification.sObject\n          .SMS__Phone_Number__c,\n      message:\n        state.data.Envelope.Body.notifications.Notification.sObject\n          .SMS__Message__c,\n      api_key: \'some-secret-key\',\n    };\n  },\n  externalId: state.data.Envelope.Body.notifications.Notification.sObject.Id,\n  postUrl: \'https://www.openfn.org/inbox/another-secret-key\',\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"version-150-2016-10-05",children:"Version 1.5.0 (2016-10-05)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Delete credentials"}),"\n",(0,r.jsx)(n.li,{children:"Delete triggers"}),"\n",(0,r.jsx)(n.li,{children:"Archive jobs"}),"\n",(0,r.jsx)(n.li,{children:"Continual testing from status.openfn.org"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Delete credentials and triggers:"})," Users can now delete credentials and\ntriggers."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Archive jobs:"}),' Users can now archive jobs, rendering them inactive. Click\n"view archived jobs" to see and restore old jobs.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"status.openfn.org"}),": is now live, providing continual testing of key OpenFn\nservices. We run both message-filter-based and timer-trigger-based jobs every\nfive minutes to ensure availability, as well as measuring the round-trip time\n(in ms) that it takes for a server in a different geographical location to send\nvalid JSON to OpenFn then receive and process the 200 response. (This time will\nvary according to the location of your servers, but it's important to note that\nwe test the full round trip. Our servers typically send out 200s in about 5-6ms,\nbut you can expect the round trip to complete in closer to 750ms.)"]}),"\n",(0,r.jsx)(n.h2,{id:"version-140-2016-09-26",children:"Version 1.4.0 (2016-09-26)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Run "matches" directly from your inbox view.'}),"\n",(0,r.jsx)(n.li,{children:"Always display the latest notification, dismiss to scroll back in time."}),"\n",(0,r.jsx)(n.li,{children:"Login and signup server responses"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:'Run "matches" from inbox:'}),' Users can now run matches in a single click from\ntheir inbox, getting notifications that runs have successfully started without\nhaving to navigate to the Message Inspector page for a given message. Look for\nthe blue "play" button next to each match. Simply click to start running that\njob with the message in question.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Latest notifications:"})," User notifications will now be displayed\n",(0,r.jsx)(n.em,{children:"newest-on-top"}),' and when there are multiple stacked notifications users will\nbe... well... notified. Click the small "x" to dismiss the latest notification,\nmoving backwards in time until all have been read.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Login/signup errors:"}),' Until now, invalid login messages and duplicate singup\nemails had been only displayed in your brower\'s logs. (That\'s our fault.) You\'ll\nnow see a handy "invalid credentials" or "email already registered" message when\ntrying to log in or sign up.']}),"\n",(0,r.jsx)(n.h2,{id:"version-130-2016-09-20",children:"Version 1.3.0 (2016-09-20)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["New version of language-salesforce allows users to ",(0,r.jsx)(n.code,{children:"alterState"})," with a custom\nfunction."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"alterState:"}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/docs/blob/master/generate-library/alter-state-before-operations.js",children:"documentation"})]}),"\n",(0,r.jsx)(n.h2,{id:"version-120-2016-09-15",children:"Version 1.2.0 (2016-09-15)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Users can now select specific adaptor versions for their jobs."}),"\n",(0,r.jsx)(n.li,{children:'Jobs will "auto-upgrade" unless locked to a specific version.'}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Adaptor versions:"})," This means that the code beneath your job, once saved with\na specific adaptor version, will never change. This is an important step forward\nfor the whole community, as it enables more rapid progress\u2014especially\nconsidering the growing number of outside contributors\u2014without risking\nintroducing instability to existing jobs."]}),"\n",(0,r.jsx)(n.p,{children:"Each new version of an adaptor will have release notes introducing the new\nfeatures or changes to helper functions. To allow easy upgrades, we will still\nmandate that all new versions are backwards compatible."}),"\n",(0,r.jsx)(n.h2,{id:"version-110-2016-08-29",children:"Version 1.1.0 (2016-08-29)"}),"\n",(0,r.jsx)(n.p,{children:"New features:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Users can now run jobs based on ",(0,r.jsx)(n.strong,{children:"timers"})," as well as filters."]}),"\n",(0,r.jsx)(n.li,{children:"Users can now view logs for all runs, not just the most recent."}),"\n",(0,r.jsx)(n.li,{children:'Jobs are "aware" of their last running state.'}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"get(...)"})," and ",(0,r.jsx)(n.code,{children:"post(...)"})," are now supported using the language-http adaptor,\nallowing users to make their own HTTP calls in jobs."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Timer triggers:"}),' On the triggers tab, users can set the trigger type to\n"timer" and input a whole number of seconds for the "interval". Any "active"\njobs associated with this trigger will run periodically after the interval\nelapses.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"View logs for all runs:"})," By clicking on an individual run from either the\nActivity tab or the Message Inspector, users can view the full logs for that\nrun, regardless of whether or not a more recent run took place with the same job\nand message."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Job state:"}),' When a job runs based on a timer, not an incoming message, it\nwill preserve it\'s state for the next run. This feature is commonly used by\nlanguage packs like language-surveycto, language-odk, and others to create a\n"cursor" to offset or limit database queries.']}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["For example, ",(0,r.jsx)(n.code,{children:"fetchSubmissions(...)"})," in the language-surveycto adaptor takes\nthree arguments: ",(0,r.jsx)(n.code,{children:"formId"}),", ",(0,r.jsx)(n.code,{children:"afterDate"}),", and ",(0,r.jsx)(n.code,{children:"postUrl"}),". The first time this job\nruns it will only fetch submissions ",(0,r.jsx)(n.em,{children:"after"})," the ",(0,r.jsx)(n.code,{children:"afterDate"}),". If any\nsubmissions are received, it will take the last submission from the array (by\ndate) and persist it in the ",(0,r.jsx)(n.code,{children:"job_state"})," as ",(0,r.jsx)(n.code,{children:"lastSubmissionDate"}),". The next time\nthis job runs, say, 300 seconds (5 minutes) later, it will ignore ",(0,r.jsx)(n.code,{children:"afterDate"}),"\nand instead fetch submissions after ",(0,r.jsx)(n.code,{children:"lastSubmissionDate"}),". While this\nparticular helper function is very abstract (it does this one thing well) it's\npossible to write a job that simply alters the final \"state\" before\ncompleting, passing whatever data you'd like from ",(0,r.jsx)(n.em,{children:"THIS RUN"})," to the ",(0,r.jsx)(n.em,{children:"NEXT RUN"}),"\nof the job."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"get(...) and post(...):"})," Have a look at this complex job using language-http.\nSee how it is possible to provide a query and a callback for ",(0,r.jsx)(n.code,{children:"get"})," while ",(0,r.jsx)(n.code,{children:"post"}),"\ntakes a url and a body object. At the end, the user is setting\nstate.lastSubmissionDate to ",(0,r.jsx)(n.code,{children:"submissions[submissions.length-1].SubmissionDate"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["See the functions themselves at\n",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/language-http/blob/master/src/Adaptor.js",children:"language-http"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"get('forms/data/wide/json/someForm', {\n  query: function (state) {\n    return { date: state.lastSubmissionDate || 'Aug 29, 2016 4:44:26 PM' };\n  },\n  callback: function (state) {\n    // Pick submissions out in order to avoid `post` overwriting `response`.\n    var submissions = state.response.body;\n    // return submissions\n    return submissions\n      .reduce(function (acc, item) {\n        // tag submissions as part of the \"someForm\" form\n        item.formId = 'someForm';\n        return acc.then(\n          post('https://www.openfn.org/inbox/some-inbox-uuid', { body: item })\n        );\n      }, Promise.resolve(state))\n      .then(function (state) {\n        if (submissions.length) {\n          state.lastSubmissionDate =\n            submissions[submissions.length - 1].SubmissionDate;\n        }\n        return state;\n      })\n      .then(function (state) {\n        delete state.response;\n        return state;\n      });\n  },\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);