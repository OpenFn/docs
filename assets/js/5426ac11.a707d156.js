"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[45966],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(96540);const o={},r=t.createContext(o);function i(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}},74538:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"packages/surveycto-readme","title":"surveycto developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/surveycto","source":"@site/adaptors/packages/surveycto-readme.md","sourceDirName":"packages","slug":"/packages/surveycto-readme","permalink":"/adaptors/packages/surveycto-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"surveycto developer readme","id":"surveycto-readme","keywords":["adaptor","readme","surveycto"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/surveycto-changelog"},"next":{"title":"tableau","permalink":"/adaptors/tableau"}}');var o=s(74848),r=s(28453);const i={title:"surveycto developer readme",id:"surveycto-readme",keywords:["adaptor","readme","surveycto"]},a="surveycto Adaptor developer README.md",c={},d=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"fetchSubmissions",id:"fetchsubmissions",level:2},{value:"sample <code>fetchSubmissions</code> expression",id:"sample-fetchsubmissions-expression",level:3},{value:"Development",id:"development",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"surveycto-adaptor-developer-readmemd",children:"surveycto Adaptor developer README.md"})}),"\n",(0,o.jsxs)(n.p,{children:["Source: ",(0,o.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/surveycto",children:"https://github.com/OpenFn/adaptors/tree/main/packages/surveycto"})]}),"\n",(0,o.jsx)(n.h1,{id:"language-surveycto",children:"Language SurveyCTO"}),"\n",(0,o.jsx)(n.p,{children:"Language Pack for building expressions and operations to make HTTP calls to\nSurveyCTO."}),"\n",(0,o.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,o.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,o.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,o.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/surveycto-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,o.jsx)(n.h2,{id:"fetchsubmissions",children:"fetchSubmissions"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"fetchSubmissions(1,2,3)"})," takes three arguments:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["the ",(0,o.jsx)(n.code,{children:"formId"})," of the form on SurveyCTO"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["the ",(0,o.jsx)(n.code,{children:"initialAfterDate"}),", a date string or UNIX timestamp which instructs the\njob to only fetch submissions after a certain date. After the first run of\nthe job, subsequent runs will only fetch ",(0,o.jsx)(n.em,{children:"NEW"})," submissions."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["the ",(0,o.jsx)(n.code,{children:"postUrl"})," is where the wide-format JSON representation of each form\nsubmission should be sent. Note that a ",(0,o.jsx)(n.code,{children:"formId"})," key will be added to each\nform submission for later filtering/routing."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.h3,{id:"sample-fetchsubmissions-expression",children:["sample ",(0,o.jsx)(n.code,{children:"fetchSubmissions"})," expression"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"fetchSubmissions(\n  // formId on SurveyCTO server\n  'household_survey',\n  // initialAfterDate: this will only be accessed if \"lastSubmissionDate\" is empty in your job_state\".\n  // After the initial run of the job, OpenFn will only pull new submissions from SurveyCTO.\n  'Aug 29, 2016 4:44:26 PM',\n  // postUrl is where you want to send the JSON submissions, appended with a new \"formId\" key\n  'https://www.openfn.org/inbox/secret-inbox-uuid'\n);\n"})}),"\n",(0,o.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,o.jsxs)(n.p,{children:["Clone the repo, run ",(0,o.jsx)(n.code,{children:"npm install"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Run tests using ",(0,o.jsx)(n.code,{children:"npm run test"})," or ",(0,o.jsx)(n.code,{children:"npm run test:watch"})]}),"\n",(0,o.jsxs)(n.p,{children:["Build the project using ",(0,o.jsx)(n.code,{children:"make"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);