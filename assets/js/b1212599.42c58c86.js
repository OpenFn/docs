"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[34446],{97622:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(58168),r=(n(96540),n(15680));const i={title:"Attendance Non Skillz",sidebar_label:"\u2728 Attendance Non Skillz",id:"Attendance-Non-Skillz-2021-06-14",keywords:["library","job","expression","salesforce","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},o=void 0,s={unversionedId:"library/jobs/auto/Attendance-Non-Skillz-2021-06-14",id:"library/jobs/auto/Attendance-Non-Skillz-2021-06-14",title:"Attendance Non Skillz",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/Attendance-Non-Skillz-2021-06-14.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/Attendance-Non-Skillz-2021-06-14",permalink:"/adaptors/library/jobs/auto/Attendance-Non-Skillz-2021-06-14",draft:!1,tags:[],version:"current",frontMatter:{title:"Attendance Non Skillz",sidebar_label:"\u2728 Attendance Non Skillz",id:"Attendance-Non-Skillz-2021-06-14",keywords:["library","job","expression","salesforce","dataPath","dataValue","each","field","fields","lastReferenceValue","map","merge","query","relationship","upsert","Array"]},sidebar:"adaptors",previous:{title:"Create contact",permalink:"/adaptors/library/jobs/auto/Create-contact-2021-03-01"},next:{title:"\u2728 Coach Session Register",permalink:"/adaptors/library/jobs/auto/Coach-Session-Register-2021-05-03"}},l={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],d={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.yg)("h2",{id:"metadata"},"Metadata"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Name: Attendance Non Skillz"),(0,r.yg)("li",{parentName:"ul"},"Adaptor: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,r.yg)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,r.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v4.3.0"},(0,r.yg)("inlineCode",{parentName:"a"},"v4.3.0"))),(0,r.yg)("li",{parentName:"ul"},"Created about 3 years ago"),(0,r.yg)("li",{parentName:"ul"},"Updated 9 months ago"),(0,r.yg)("li",{parentName:"ul"},"Score: ",(0,r.yg)("b",null,"87")," (an ",(0,r.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.yg)("h2",{id:"key-functions"},"Key Functions"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"dataPath"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"each"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"field"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"fields"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"lastReferenceValue"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"merge"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"query"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"relationship"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"upsert"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"Array")),(0,r.yg)("h2",{id:"expression"},"Expression"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"fn(state => {\n  if (!state.data.form.attendance_list.update_participant_cases.item) {\n    console.log('No participant attendance data was provided, not upserting to Salesforce.');\n    return state;\n  } else {\n    // query(\n    //   `SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.attendance_list.update_participant_cases.item[0]['@id']}'`\n    // );\n\n    // fn(state => {\n    const records = lastReferenceValue('records')(state);\n    const eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n\n    // if (!eventName) {\n    //   console.log(\n    //     `Participant not found with CommCare_Case_ID__c: ${state.data.form.attendance_list.update_participant_cases.item[0]['@id']}`\n    //   );\n    //   return state;\n    // }\n\n    return execute(\n      fn(state => {\n        // Note: lastReferenceValue selects the first item in the references array.\n        state.data.eventName = eventName ? eventName.replace(/\\//gi, '') : null;\n\n        function getSessionValue(present) {\n          switch (present.toString().toLowerCase()) {\n            case 'yes':\n              return 'X';\n            case 'no':\n              return 'A';\n            case '':\n              return 'N';\n            default:\n              return 'U';\n          }\n        }\n\n        function getSessionId(session_text) {\n          return session_text.toString().trim().slice(0, session_text.indexOf(' ')).slice(1);\n        }\n\n        function objectToArray(object) {\n          if (!object) return [];\n          return !Array.isArray(object) ? [object] : object;\n        }\n\n        state.data.form.attendance_list.update_participant_cases.item = objectToArray(\n          state.data.form.attendance_list.update_participant_cases.item\n        );\n\n        const sessionText = dataValue('form.attendance_list.session')(state);\n        const sessionId = getSessionId(sessionText);\n\n        //   @aleksa-krolls confirm the path for the session date\n        const sessionDate = dataValue(\"form.case['@date_modified']\")(state);\n\n        state.data.form.attendance_list.update_participant_cases.item =\n          state.data.form.attendance_list.update_participant_cases.item.map(item => {\n            const sessionValue = getSessionValue(item.attendance_session);\n            return {\n              ...item,\n              dynamicFields: {\n                [`Session_${sessionId}__c`]: sessionValue,\n                [`Session_${sessionId}_Date__c`]: sessionDate,\n              },\n            };\n          });\n\n        return state;\n      }),\n\n      each(\n        merge(\n          dataPath('form.attendance_list.update_participant_cases.item[*]'),\n          fields(\n            field('intervention_name', dataValue('form.intervention_name')),\n            field('eventName', dataValue('eventName')),\n            field('caseid', dataValue('form.case.@case_id'))\n          )\n        ),\n        upsert('Attendance__c', 'CommCare_Ext_ID__c', state => ({\n          ...fields(\n            relationship('Event__r', 'CommCare_Case_ID__c', dataValue('caseid')),\n            field(\n              'CommCare_Ext_ID__c',\n              state => `${state.data['@id']}-${toUTF8(state.data.intervention_name)}`\n            ),\n            relationship('Person_Attendance__r', 'Participant_Identification_Number_PID__c', dataValue('@id'))\n          ),\n          ...state.data.dynamicFields,\n        }))\n      )\n    )(state);\n  }\n});\n\n")))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>f});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},d),{},{components:n})):a.createElement(f,o({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);