"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[62318],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var a=t(96540);const i={},s=a.createContext(i);function c(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),a.createElement(s.Provider,{value:n},e.children)}},49030:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"packages/godata-readme","title":"godata developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/godata","source":"@site/adaptors/packages/godata-readme.md","sourceDirName":"packages","slug":"/packages/godata-readme","permalink":"/adaptors/packages/godata-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"godata developer readme","id":"godata-readme","keywords":["adaptor","readme","godata"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/godata-changelog"},"next":{"title":"Functions","permalink":"/adaptors/packages/googledrive-docs"}}');var i=t(74848),s=t(28453);const c={title:"godata developer readme",id:"godata-readme",keywords:["adaptor","readme","godata"]},o="godata Adaptor developer README.md",r={},d=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Helper Functions",id:"helper-functions",level:2},{value:"post(...)",id:"post",level:3},{value:"Fetch the list of outbreaks",id:"fetch-the-list-of-outbreaks",level:2},{value:"Get a specific outbreak",id:"get-a-specific-outbreak",level:2},{value:"Insert or Update an outbreak using a unique id as a key",id:"insert-or-update-an-outbreak-using-a-unique-id-as-a-key",level:2},{value:"Fetch the list of cases",id:"fetch-the-list-of-cases",level:2},{value:"Get a specific case",id:"get-a-specific-case",level:2},{value:"Insert or Update a case using a unique id as a key",id:"insert-or-update-a-case-using-a-unique-id-as-a-key",level:2},{value:"Fetch the list of contacts",id:"fetch-the-list-of-contacts",level:2},{value:"Get a specific contact",id:"get-a-specific-contact",level:2},{value:"Insert or Update a contact using a unique id as a key",id:"insert-or-update-a-contact-using-a-unique-id-as-a-key",level:2},{value:"Fetch the list of locations",id:"fetch-the-list-of-locations",level:2},{value:"Get a specific location",id:"get-a-specific-location",level:2},{value:"Insert or Update a location using a unique id as a key",id:"insert-or-update-a-location-using-a-unique-id-as-a-key",level:2},{value:"Fetch the list of reference data",id:"fetch-the-list-of-reference-data",level:2},{value:"Get a specific reference data",id:"get-a-specific-reference-data",level:2},{value:"Insert or Update a reference data using a unique id as a key",id:"insert-or-update-a-reference-data-using-a-unique-id-as-a-key",level:2},{value:"Development",id:"development",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"godata-adaptor-developer-readmemd",children:"godata Adaptor developer README.md"})}),"\n",(0,i.jsxs)(n.p,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/godata",children:"https://github.com/OpenFn/adaptors/tree/main/packages/godata"})]}),"\n",(0,i.jsx)(n.h1,{id:"language-godata",children:"language-godata"}),"\n",(0,i.jsxs)(n.p,{children:["An OpenFn ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"adaptor"})})," for building integration jobs for use with the WHO\nGo.Data API."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.who.int/godata",children:"Go.Data"})," is an outbreak investigation tool for\nfield data collection during public health emergencies. The tool includes\nfunctionality for case investigation, contact follow-up, visualization of chains\nof transmission including secure data exchange and is designed for flexibility\nin the field, to adapt to the wide range of outbreak scenarios."]}),"\n",(0,i.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsxs)(n.p,{children:["View the ",(0,i.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/godata-docs",children:"docs site"})," for\nfull technical documentation."]}),"\n",(0,i.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,i.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,i.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/godata-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,i.jsx)(n.h2,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,i.jsx)(n.h3,{id:"post",children:"post(...)"}),"\n",(0,i.jsx)(n.h2,{id:"fetch-the-list-of-outbreaks",children:"Fetch the list of outbreaks"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to fetch the whole list of outbreaks in Go.Data."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"listOutbreaks(state => {\n  console.log(state.data);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"get-a-specific-outbreak",children:"Get a specific outbreak"}),"\n",(0,i.jsx)(n.p,{children:"This function can be used to fetch one specific outbreak. A filtering mechanism\nis used to specify a criteria to match. Mutliple outbreaks could be returned if\nmatched by the filter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"getOutbreak({ where: { name: 'Outbreak demo' } }, state => {\n  console.log(state.data);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"insert-or-update-an-outbreak-using-a-unique-id-as-a-key",children:"Insert or Update an outbreak using a unique id as a key"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to either update a record in Go.Data if matched or insert\na new one if no record matched the unique id."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"upsertOutbreak({\n  externalId: '3dec33-ede3',\n  data: {\n    name: 'string',\n    description: 'string',\n    disease: 'string',\n    countries: [\n      {\n        id: 'SENEGAL',\n      },\n    ],\n    startDate: '2020-12-17T14:54:19.498Z',\n    endDate: '2020-12-17T14:54:19.498Z',\n    longPeriodsBetweenCaseOnset: 0,\n    periodOfFollowup: 0,\n  },\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"fetch-the-list-of-cases",children:"Fetch the list of cases"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to fetch the whole list of cases for a specific outbreak\nin Go.Data."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"listCases('4c444f7-4e11-41d0-c1af-331dd15a892e', state => {\n  console.log(state);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"get-a-specific-case",children:"Get a specific case"}),"\n",(0,i.jsx)(n.p,{children:"This function can be used to fetch one specific case for an outbreak. A\nfiltering mechanism can specify a criteria to match. Mutliple cases could be\nreturned if matched by the filter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"getCase(\n  '4c444f7-4e11-41d0-c1af-331dd15a892e',\n  { 'where.relationship': { active: true }, where: { firstName: 'Luca' } },\n  state => {\n    console.log(state);\n    return state;\n  }\n);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"insert-or-update-a-case-using-a-unique-id-as-a-key",children:"Insert or Update a case using a unique id as a key"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to either update a case in Go.Data if matched or insert a\nnew one if no record matched the unique id."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"upsertCase('4dce-3eedce3-rd33', 'visualId',\n  data: state => {\n    const patient = state.data.body;\n    return {\n      firstName: patient.Patient_name.split(' ')[0],\n      lastName: patient.Patient_name.split(' ')[1],\n      visualId: patient.Case_ID,\n      'age:years': patient.Age_in_year,\n      gender: patient.Sex,\n    };\n  });\n"})}),"\n",(0,i.jsx)(n.h2,{id:"fetch-the-list-of-contacts",children:"Fetch the list of contacts"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to fetch the whole list of contacts for a specific\noutbreak in Go.Data."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"listContacts('4c444f7-4e11-41d0-c1af-331dd15a892e', state => {\n  console.log(state);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"get-a-specific-contact",children:"Get a specific contact"}),"\n",(0,i.jsx)(n.p,{children:"This function can be used to get one specific contact for an outbreak. A\nfiltering mechanism can specify a criteria to match. Mutliple contacts could be\nreturned if matched by the filter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"getContact('343d-dc3e', { where: { firstName: 'Luca' } }, state => {\n  console.log(state.data);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"insert-or-update-a-contact-using-a-unique-id-as-a-key",children:"Insert or Update a contact using a unique id as a key"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to either update a contact in Go.Data if matched or insert\na new one if no record matched the unique id."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"upsertContact('4dce-3eedce3-rd33', 'visualId', {\n  firstName: 'Luca',\n  gender: 'male',\n  'age:years': '20',\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"fetch-the-list-of-locations",children:"Fetch the list of locations"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to fetch the list of locations."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"listLocations(state => {\n  console.log(state);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"get-a-specific-location",children:"Get a specific location"}),"\n",(0,i.jsx)(n.p,{children:"This function can be used to get one specific location. A filtering mechanism\ncan specify a criteria to match. Mutliple locations could be returned if matched\nby the filter."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"getLocation({ where: { name: '30 DE MAYO' } }, state => {\n  console.log(state.data);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"insert-or-update-a-location-using-a-unique-id-as-a-key",children:"Insert or Update a location using a unique id as a key"}),"\n",(0,i.jsxs)(n.p,{children:["This function is used to either update a location if matched or insert a new. A\ncustom ",(0,i.jsx)(n.code,{children:"externalId"})," can be provided."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"upsertLocation('name', {\n  name: '30 DE DECIEMBRE',\n  synonyms: [],\n  identifiers: [],\n  active: true,\n  populationDensity: 0,\n  geoLocation: {\n    lat: -45.343244,\n    lng: -67.193873,\n  },\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"fetch-the-list-of-reference-data",children:"Fetch the list of reference data"}),"\n",(0,i.jsx)(n.p,{children:"This function is used to fetch the list of reference data."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"listReferenceData(state => {\n  console.log(state);\n  return state;\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"get-a-specific-reference-data",children:"Get a specific reference data"}),"\n",(0,i.jsx)(n.p,{children:"This function can be used to get one specific reference data. A filtering\nmechanism can specify a criteria to match."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"getReferenceData(\n  { where: { categoryId: 'LNG_REFERENCE_DATA_CATEGORY_CENTRE_NAME' } },\n  state => {\n    console.log(state.data);\n    return state;\n  }\n);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"insert-or-update-a-reference-data-using-a-unique-id-as-a-key",children:"Insert or Update a reference data using a unique id as a key"}),"\n",(0,i.jsxs)(n.p,{children:["This function is used to either update a location if matched or insert a new. A\ncustom ",(0,i.jsx)(n.code,{children:"externalId"})," can be provided."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"upsertReferenceData('id', {\n  categoryId: 'CATEGORY',\n  value: 'VALUE',\n  readOnly: false,\n  active: true,\n  id: 'ID',\n  createdAt: '2020-10-01T18:48:31.784Z',\n  createdBy: '95d31ea9',\n  updatedAt: '2020-10-01T18:48:31.784Z',\n  updatedBy: '95d31ea9',\n  createdOn: 'API',\n  deleted: false,\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsxs)(n.p,{children:["Clone the ",(0,i.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),". Follow the\n",(0,i.jsx)(n.code,{children:"Getting Started"})," guide inside to get set up."]}),"\n",(0,i.jsxs)(n.p,{children:["Run tests using ",(0,i.jsx)(n.code,{children:"pnpm run test"})," or ",(0,i.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,i.jsxs)(n.p,{children:["Build the project using ",(0,i.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To just build the docs run ",(0,i.jsx)(n.code,{children:"pnpm build docs"})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);