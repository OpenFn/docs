"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[87733],{28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var i=n(96540);const t={},s=i.createContext(t);function o(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:r},e.children)}},40925:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>_});const i=JSON.parse('{"id":"library/jobs/auto/WF4-2-Bulk-upsert-Services-2023-05-19","title":"WF4-2 Bulk upsert Services","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/WF4-2-Bulk-upsert-Services-2023-05-19.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/WF4-2-Bulk-upsert-Services-2023-05-19","permalink":"/adaptors/library/jobs/auto/WF4-2-Bulk-upsert-Services-2023-05-19","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"WF4-2 Bulk upsert Services","sidebar_label":"WF4-2 Bulk upsert Services","id":"WF4-2-Bulk-upsert-Services-2023-05-19","keywords":["library","job","expression","salesforce","bulk","join","map","query","JSON"]},"sidebar":"adaptors","previous":{"title":"\ud83d\udcdc Merge data into child array then upsert","permalink":"/adaptors/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array"},"next":{"title":"WF3-2 Bulk upsert Person Visits","permalink":"/adaptors/library/jobs/auto/WF3-2-Bulk-upsert-Person-Visits-2023-05-19"}}');var t=n(74848),s=n(28453);const o={title:"WF4-2 Bulk upsert Services",sidebar_label:"WF4-2 Bulk upsert Services",id:"WF4-2-Bulk-upsert-Services-2023-05-19",keywords:["library","job","expression","salesforce","bulk","join","map","query","JSON"]},a=void 0,l={},_=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const r={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,t.jsx)(r.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Name: WF4-2 Bulk upsert Services"}),"\n",(0,t.jsxs)(r.li,{children:["Adaptor: ",(0,t.jsx)(r.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(r.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,t.jsxs)(r.li,{children:["Adaptor Version: ",(0,t.jsx)(r.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(r.code,{children:"latest"})})]}),"\n",(0,t.jsx)(r.li,{children:"Created about 2 years ago"}),"\n",(0,t.jsx)(r.li,{children:"Updated 4 months ago"}),"\n",(0,t.jsxs)(r.li,{children:["Score: ",(0,t.jsx)("b",{children:"0"})," (an ",(0,t.jsx)(r.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"bulk"}),", ",(0,t.jsx)(r.code,{children:"join"}),", ",(0,t.jsx)(r.code,{children:"map"}),", ",(0,t.jsx)(r.code,{children:"query"}),", ",(0,t.jsx)(r.code,{children:"JSON"})]}),"\n",(0,t.jsx)(r.h2,{id:"expression",children:"Expression"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"// NOTE: We perform a query before anything else if this is a 'Case'\r\nfn(state => {\r\n  // state.type = state.data.indices.parent.case_type;\r\n  if (state.payloads.length == 0) return { ...state, services: [] };\r\n\r\n  const caseType = state.payloads\r\n    .filter(c => c.indices.parent.case_type === 'Case')\r\n    .map(c => c.indices.parent.case_id);\r\n\r\n   console.log(JSON.stringify(caseType, null, 2));\r\n\r\n  if (caseType.length > 0)\r\n    return query(\r\n      `SELECT Person__r.CommCare_ID__c FROM Service__c WHERE Service_UID__c IN ('${caseType.join(\r\n        \"','\"\r\n      )}')`\r\n    )(state).then(state => {\r\n      const { records } = state.references[0];\r\n      const ccId =\r\n        records.length == 1 ? records[0].Person__r.CommCare_ID__c : null;\r\n      return { ...state, ccId };\r\n    });\r\n\r\n  return state;\r\n});\r\n\r\n// NOTE: We construct a facilityMap and populate some conditional relationships\r\nfn(state => {\r\n  if (state.payloads.length == 0) return state;\r\n  const facilityMap = {\r\n    Lwala_Hospital: 'Lwala Hospital',\r\n    Minyenya_Dispensary: 'Minyenya Dispensary',\r\n    Ndege_Oriedo_Dispensary: 'Ndege Oriedo Dispensary',\r\n    'Rongo_Sub-District_Hospital': 'Rongo Sub-District Hospital',\r\n    Kangeso_Dispensary: 'Kangeso Dispensary',\r\n    Ngodhe_Dispensary: 'Ngodhe Dispensary',\r\n    Ngere_Dispensary: 'Ngere Dispensary',\r\n    Verna_Health_Center: 'Verna Health Center',\r\n    Kochola_Dispensary: 'Kochola Dispensary',\r\n    Ongo_Health_Center: 'Ongo Health Center',\r\n    Royal_Medical_Center: 'Royal Medical Center',\r\n    Rosewood_Facility: 'Rosewood Facility',\r\n    Other: 'Other',\r\n  };\r\n\r\n  const pregDangerMap = {\r\n    Vaginal_Bleeding: 'Vaginal Bleeding',\r\n    Water_Breaks: 'Water Breaks before Time of Delivery',\r\n    Prolonged_Labour: 'Prolonged Labour over 12 Hours',\r\n    Convulsions: 'Convulsions or Fits',\r\n    Abdominal_Pain: 'Severe Abdominal Pain before Delivery',\r\n    High_Fever: 'High Fever',\r\n    Low_Baby_Movement: 'Feeling the Baby move less or not at all',\r\n    Swelling: 'Swelling of Face and Hands',\r\n    Severe_Headache: 'Severe or Continuous Headache for more than 12 hours',\r\n    Severe_Vomiting: 'Severe or Continuous Vomiting',\r\n    none: 'None',\r\n  };\r\n\r\n  const serviceMap = {\r\n    Scheduled_PSC_Apt: 'Scheduled PSC Apt',\r\n    Adverse_Drug_Reaction_Side_Effect: 'Adverse Drug Reaction/Side Effect',\r\n    Malnutrition: 'Malnutrition',\r\n    Malaria: 'Malaria',\r\n    TB: 'TB',\r\n    Treatment_for_Other_OIs: 'Treatment for Other OIs',\r\n    ARI: 'ARI',\r\n    Anemia: 'Anemia',\r\n    Diarrhea: 'Diarrhea',\r\n    Pregnancy_Care: 'Pregnancy Care (ANC)',\r\n    Family_Planning: 'Family Planning (FP)',\r\n    Preconception_Counseling: 'Preconception Counseling',\r\n    Injury: 'Injury',\r\n    Other: 'Other',\r\n  };\r\n\r\n  const milestoneTypeMap = {\r\n    cognitive_delays_learning_difficulties:\r\n      'Cognitive Delays (Learning Difficulties)',\r\n    motor_delays: 'Motor Delays',\r\n    speech_and_language_delay: 'Speech and language Delay',\r\n    social_and_emotional: 'Social and emotional',\r\n  };\r\n\r\n  const symptomsMap = {\r\n    convulsions: 'Convulsions',\r\n    not_able_to_eatdrink: 'Not able to eat/drink',\r\n    vomits_everything: 'Vomits everything',\r\n    'chest_in-drawing': 'Chest in-drawing',\r\n    unusually_sleepyunconscious: 'Unusually sleepy/unconscious',\r\n    swelling_of_both_feet: 'Swelling of both feet',\r\n  };\r\n\r\n  const childSignMap = {\r\n    Poor_Breastfeeding: 'Poor Breastfeeding (under 6 months old child)',\r\n    not_able_to_feed_since_birth_or_stopped_feeding_well:\r\n      'Not able to feed since birth, or stopped feeding well',\r\n    not_able_to_breastfeed: 'Not able to breastfeed',\r\n    Fever: 'Fever (37.5 C or more)',\r\n    very_low_temperature: 'Very low temperature (35.4 C or less)',\r\n    shivering: 'Shivering',\r\n    Fast_Breathing: 'Fast Breathing',\r\n    Very_Sleepy: 'Very Sleepy',\r\n    Convulsions_and_Fits: 'Convulsions and Fits',\r\n    only_moves_when_stimulated_or_does_not_move_even_on_stimulation:\r\n      'Only moves when stimulated, or does not move even on stimulation',\r\n    yellow_solebaby_body_turning_yellow_especially_eyes_palms_soles:\r\n      'Yellow sole(Baby body turning yellow especially eyes, palms, soles)',\r\n    bleeding_from_the_umbilical_stump: 'Bleeding from the umbilical stump',\r\n    signs_of_local_infection_umbilicus_is_red_or_draining_pus_skin_boils_or_eye:\r\n      'Signs of local infection: umbilicus is red or draining pus, skin boils, or eyes draining pus',\r\n    weight_chart_using_color_coded_scales_if_red_or_yellowweight_below_25kg_or_:\r\n      'Weight chart using color coded scales if RED or YELLOW(Weight below 2.5kg or born less than 36 weeks of age)',\r\n    unable_to_cry: 'Unable to cry',\r\n    cyanosis: 'Cyanosis',\r\n    bulging_fontanelle: 'Bulging fontanelle',\r\n  };\r\n\r\n  const otherReferralMap = {\r\n    HIV_Testing_and_Counseling: 'HIV Testing and Counseling',\r\n    Visit_to_Clinician: 'Visit to Clinician',\r\n    Adverse_Drug_Reaction_Side_Effect: 'Adverse Drug Reaction Side Effect',\r\n    Malnutrition: 'Malnutrition',\r\n    Malaria: 'Malaria',\r\n    PMTCT: 'PMTCT',\r\n    TB: 'TB',\r\n    Treatment_for_other_OIs: 'Treatment for other OIs',\r\n    ARI: 'ARI',\r\n    Anemia: 'Anemia',\r\n    Diarrhea: 'Diarrhea',\r\n    Pregnancy_Care_ANCE: 'Pregnancy Care (ANC)',\r\n    Family_Planning_FP: 'Family Planning (FP)',\r\n    Preconception_Counseling: 'Preconception Counseling',\r\n    Injury: 'Injury',\r\n    blood_in_stool: 'Blood in Stool',\r\n    Blood_in_Stool: 'Blood in Stool',\r\n    Immunization: 'Immunization',\r\n    Routine_Health_Check_ups: 'Routine Health Check ups',\r\n    routine_health_check_ups: 'Routine Health Check ups',\r\n    Other: 'Other',\r\n    Poor_Breastfeeding: 'Poor Breastfeeding (under 6 months old child)',\r\n    not_able_to_feed_since_birth_or_stopped_feeding_well:\r\n      'Not able to feed since birth, or stopped feeding well',\r\n    not_able_to_breastfeed: 'Not able to breastfeed',\r\n    Fever: 'Fever (37.5 C or more)',\r\n    very_low_temperature: 'Very low temperature (35.4 C or less)',\r\n    shivering: 'Shivering',\r\n    Fast_Breathing: 'Fast Breathing',\r\n    Very_Sleepy: 'Very Sleepy',\r\n    Convulsions_and_Fits: 'Convulsions and Fits',\r\n    only_moves_when_stimulated_or_does_not_move_even_on_stimulation:\r\n      'Only moves when stimulated, or does not move even on stimulation',\r\n    yellow_solebaby_body_turning_yellow_especially_eyes_palms_soles:\r\n      'Yellow sole(Baby body turning yellow especially eyes, palms, soles)',\r\n    bleeding_from_the_umbilical_stump: 'Bleeding from the umbilical stump',\r\n    signs_of_local_infection_umbilicus_is_red_or_draining_pus_skin_boils_or_eye:\r\n      'Signs of local infection: umbilicus is red or draining pus, skin boils, or eyes draining pus',\r\n    weight_chart_using_color_coded_scales_if_red_or_yellowweight_below_25kg_or_:\r\n      'Weight chart using color coded scales if RED or YELLOW(Weight below 2.5kg or born less than 36 weeks of age)',\r\n    unable_to_cry: 'Unable to cry',\r\n    cyanosis: 'Cyanosis',\r\n    bulging_fontanelle: 'Bulging fontanelle',\r\n  };\r\n\r\n  const homeCareMap = {\r\n    Adherence_Counseling: 'Adherence Counseling',\r\n    Pill_Count_Monitoring: 'Pill Count Monitoring',\r\n    Nutrition_Assessment_and_Counseling: 'Nutrition Assessment and Counseling',\r\n    WASH_Counseling: 'WASH Counseling',\r\n    Prevention_Counseling: 'Prevention Counseling',\r\n    Psychosocial_Support: 'Psychosocial Support',\r\n    Provision_of_Supplies: 'Provision of Supplies',\r\n    OI_Management_Support: 'OI Management Support',\r\n  };\r\n\r\n  const ecdMap = {\r\n    physiotherapy: 'Physiotherapy',\r\n    speech_therapy: 'Speech Therapy',\r\n    nutrition_education: 'Nutrition Education',\r\n    play_therapy: 'Play Therapy',\r\n    assessment: 'Assessment',\r\n    counselling: 'Counselling',\r\n    other: 'Other',\r\n  };\r\n\r\n  const clinicalMap = {\r\n    diarrhea: 'Diarrhea',\r\n    malnutrition: 'Malnutrition',\r\n    malaria: 'Malaria',\r\n    acute_respiratory_infection: 'Acute Respiratoy Infection (ARI)',\r\n    accident_injury: 'Accident/Injury',\r\n    other: 'Other',\r\n  };\r\n\r\n  const caseType = state.payloads\r\n    .filter(c => c.indices.parent.case_type === 'Case')\r\n    .map(c => c.indices.parent.case_id);\r\n\r\n  const personType = state.payloads\r\n    .filter(c => c.indices.parent.case_type === 'Person')\r\n    .map(c => c.indices.parent.case_id);\r\n\r\n  let relationships = [];\r\n\r\n  // If it's a person, add the person relationship\r\n  if (personType.length > 0) {\r\n    personType.forEach(case_id => {\r\n      relationships.push({ 'Person__r.CommCare_ID__c': case_id });\r\n    });\r\n  }\r\n\r\n  // If it's a service, add the service rship AND a different person rship\r\n  if (caseType.length > 0) {\r\n    caseType.forEach(case_id => {\r\n      relationships.push({ 'Parent_Service__r.Service_UID__c': case_id });\r\n    });\r\n\r\n    relationships.push({ 'Person__r.CommCare_ID__c': state.ccId });\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    facilityMap,\r\n    relationships,\r\n    serviceMap,\r\n    pregDangerMap,\r\n    milestoneTypeMap,\r\n    symptomsMap,\r\n    childSignMap,\r\n    otherReferralMap,\r\n    homeCareMap,\r\n    clinicalMap,\r\n    ecdMap,\r\n  };\r\n});\r\n\r\n// NOTE: We finally upsert to the Service__c object in Salesforce\r\nfn(state => {\r\n  if (state.payloads.length == 0) return state;\r\n  const services = state.payloads\r\n    .filter(r => r.properties.owner_id !== '8e725928e3ce43d19b390dd604097069')\r\n    .map(r => {\r\n      // pregnancyDangerSigns\r\n      const pCheck = r.properties.pregnancy_danger_signs;\r\n      const pValue =\r\n        pCheck && pCheck !== ''\r\n          ? pCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.pregDangerMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const pregnancyDangerSigns = pValue ? pValue.join(';') : undefined;\r\n\r\n      // childDangerSigns\r\n      const cCheck = r.properties.Other_Danger_Signs;\r\n      const cValue =\r\n        cCheck && cCheck !== ''\r\n          ? cCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.childSignMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const childDangerSigns = cValue ? cValue.join(';') : undefined;\r\n\r\n      // delayedMilestone\r\n      const dCheck = r.properties.which_delayed_milestone;\r\n      const dValue =\r\n        dCheck && dCheck !== ''\r\n          ? dCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.milestoneTypeMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const delayedMilestone = dValue ? dValue.join(';') : undefined;\r\n\r\n      // seriousSymptoms\r\n      const sCheck = r.properties.symptoms_check_other;\r\n      const sValue =\r\n        sCheck && sCheck !== ''\r\n          ? sCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.symptomsMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const seriousSymptoms = sValue ? sValue.join(';') : undefined;\r\n\r\n      // otherReferralReason\r\n      const otCheck = r.properties.Other_Referral_Reasons;\r\n      const otValue =\r\n        otCheck && otCheck !== ''\r\n          ? otCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.otherReferralMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const otherReferralReason = otValue ? otValue.join(';') : undefined;\r\n\r\n      // homeBasedCareRendered\r\n      const homeCheck = r.properties.Home_Based_Care_Provided;\r\n      const homeValue =\r\n        homeCheck && homeCheck !== ''\r\n          ? homeCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.homeCareMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const homeBasedCareRendered = homeValue ? homeValue.join(';') : undefined;\r\n\r\n      // ecdClinicalService\r\n      const ecdCheck = r.properties.ECD_Clinical_Service;\r\n      const ecdValue =\r\n        ecdCheck && ecdCheck !== ''\r\n          ? ecdCheck\r\n              .replace(/ /gi, ';')\r\n              .split(';')\r\n              .map(value => {\r\n                return state.ecdMap[value] || value;\r\n              })\r\n          : undefined;\r\n      const ecdClinicalService = ecdValue ? ecdValue.join(';') : undefined;\r\n\r\n      return {\r\n        'Person__r.CommCare_ID__c':\r\n          r.indices.parent.case_type === 'Person'\r\n            ? r.indices.parent.case_id\r\n            : r.indices.parent.case_type === 'Case'\r\n            ? state.ccId\r\n            : undefined,\r\n        Service_UID__c: r.case_id,\r\n        CommCare_Code__c: r.case_id,\r\n        RecordTypeID: '01224000000YAuK',\r\n        'Household_CHW__r.CommCare_ID__c': r.properties.CHW_ID,\r\n        Open_Case__c: r.closed === false ? true : false,\r\n        Case_Closed_Date__c: r.properties.date_closed,\r\n        Age_Time_of_Service__c: r.properties.age,\r\n        Source__c: r.properties.Source === '1',\r\n        Clinical_facility__c: r.properties.Facility_Visited\r\n          ? state.facilityMap[r.properties.Facility_Visited]\r\n          : undefined,\r\n        Client_Received_Services_at_Facility2__c: r.properties.Facility_Visit,\r\n        Clinical_Visit_Date__c:\r\n          r.properties.Facility_Date === '' ||\r\n          r.properties.Facility_Date === undefined\r\n            ? undefined\r\n            : r.properties.Facility_Date,\r\n        CHW_Followed_Up_with_the_Client__c: r['properties.Follow-Up']!== ''\r\n            ? r['properties.Follow-Up']\r\n            : undefined,\r\n        Follow_Up_Date__c: r['properties.Follow-Up_Date'],\r\n     \r\n        Person_Complied_w_Referral_in_24_hrs__c:r.properties.referral_compliance,\r\n        Skillled_Delivery__c: r.properties.skilled_delivery,\r\n        Child_received_immunizations__c: r.properties.immunization,\r\n        Received_a_diagnosis_for_PSBI__c: r.properties.psbi_diagnosis !== ''\r\n            ? r.properties.psbi_diagnosis\r\n            : undefined, //Form: CHW.Follow-Up.PSBI.psbi_diagnosis\r\n        Received_antibiotics_per_protocol__c: r.properties.antibiotic_8days, //Form: CHW.Follow-Up.PSBI.antibiotic_8day\r\n        \r\n        Distributed_Treatment_on_Last_Visit__c:\r\n          r.properties.distribute_treatment, //Form: CHW.Follow-Up.distribute_treatment\r\n        Person_had_an_adverse_drug_reaction__c:\r\n          r.properties.adverse_drug_reaction,\r\n        Defaulted__c:\r\n          r.properties.date_of_default && r.properties.date_of_default !== ''\r\n            ? true\r\n            : false,\r\n        Date_of_Default__c: r.properties.date_of_default,\r\n        Client_s_Symptoms_Improved__c: r.properties.Client_Improved,\r\n        Case_Type__c: r.properties.Case_Type,\r\n        Follow_Up_By_Date__c:\r\n          r.properties['Follow-Up_By_Date'] &&\r\n          r.properties['Follow-Up_By_Date'] !== ''\r\n            ? r.properties['Follow-Up_By_Date']\r\n            : undefined,\r\n        Date__c: new Date(r.properties.date_opened).toISOString(),\r\n        Reason_for_Service__c: r.properties.Reason_for_Service,\r\n        Type_of_Service__c: r.properties.Type_of_Service,\r\n        Malaria_Status__c: r.properties.Malaria_Status,\r\n        Home_Treatment_Date__c: r.properties.home_treatment_date,\r\n        Malaria_Home_Test_Date__c: r.properties.malaria_test_date,\r\n        Home_ORS__c: r.properties.clinic_ors,\r\n        Home_Zinc__c: r.properties.clinic_zinc,\r\n        Height__c: r.properties.height,\r\n        Weight__c: r.properties.weight,\r\n        MUAC__c: r.properties.muac,\r\n        Nutrition_Status__c: r.properties.Nutrition_Status,\r\n        \r\n        //===== NEW MAPPINGS - JAN 14 ===========================//\r\n        Pregnancy_Danger_Signs__c: pregnancyDangerSigns,\r\n        Child_Danger_Signs__c: childDangerSigns,\r\n        Delayed_Milestone__c: delayedMilestone,\r\n        Serious_Symptoms__c: seriousSymptoms,\r\n        Other_Referral_Reasons__c: otherReferralReason,\r\n        Home_Based_Care_Rendered__c: homeBasedCareRendered,\r\n        PSBI_Visit__c:\r\n          r.properties.psbi_task && r.properties.psbi_task !== ''\r\n            ? `Day ${r.properties.psbi_task}`\r\n            : undefined,\r\n        Clinical_Services__c: r.properties.TT5_Clinical_Service\r\n          ? state.clinicalMap[r.properties.TT5_Clinical_Service]\r\n          : r.properties.TT5_Clinical_Service,\r\n        Referred_Facility__c: r.properties.referred_facility\r\n          ? state.facilityMap[r.properties.referred_facility]\r\n          : r.properties.referred_facility,\r\n        HAWI_Clinical_Services__c: r.properties.HAWI_Clinical_Service\r\n          ? state.serviceMap[r.properties.HAWI_Clinical_Service]\r\n          : r.properties.HAWI_Clinical_Service,\r\n        ECD_Clinical_Services__c: ecdClinicalService,\r\n        \r\n      };\r\n    });\r\n\r\n  return { ...state, services };\r\n});\r\n/* JSON logging of records\r\nfn(state => {\r\n  console.log('Services to upsert ::', JSON.stringify(state.services));\r\n  return state;\r\n});\r\n*/\r\n\r\nbulk(\r\n  'Service__c',\r\n  'upsert',\r\n  {\r\n    extIdField: 'Service_UID__c',\r\n    failOnError: true,\r\n    allowNoOp: true,\r\n  },\r\n  state => {\r\n    console.log('Bulk upserting service...');\r\n    return state.services;\r\n  }\r\n);\n"})})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);