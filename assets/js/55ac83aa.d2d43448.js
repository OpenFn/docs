"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[58236],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},55378:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var s=t(71164),i=t(74848),o=t(28453);const r={layout:"post",title:"Moving from Webpack to esbuild on Phoenix",authors:"stu",tags:["how-to","js","webpack","build","phoenix","ci/cd"],featured:!0},l=void 0,a={authorsImageUrls:[void 0]},d=[{value:"So what&#39;s this about esbuild",id:"so-whats-this-about-esbuild",level:2},{value:"Exploring the caveats",id:"exploring-the-caveats",level:2},{value:"What we need esbuild to provide",id:"what-we-need-esbuild-to-provide",level:2},{value:"Giving it a go",id:"giving-it-a-go",level:2},{value:"What&#39;s next?",id:"whats-next",level:2},{value:"Resources",id:"resources",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["We're very happy users of Elixir and Phoenix at OpenFn, given that we've been\nusing it continuously for about 6 years - upgrades and all. Our front-end\ntoolchain, albeit far from out of date (Webpack ",(0,i.jsx)(n.code,{children:"5.52.1"})," today) has left some\nroom for improvement."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"This is a post written on what we call 'Slow Fridays', where we explore and\nthink about stuff we're curious about. The deal is some artifact at the end of\nthe day. So while this post is not complete - I believe part two is warranted."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Phoenix 1.6 started to include esbuild by ",(0,i.jsx)(n.a,{href:"#ref1",children:"default"}),". The main reasons\ncited were the amount of support the team had to continuously give for a\ntoolchain that although necessary is not under the control of the framework\nteams control."]}),"\n",(0,i.jsx)(n.p,{children:"Back in the day, Phoenix used brunch to do front end builds - despite not being\nthe most common bundler at the time. The objective I assume was to provide\nsomething that is easy to get going with and lowers the barrier to entry for\nPhoenix. We actually switched brunch out for webpack before webpack got into\nPhoenix in order to more easily use new libraries and newer ES syntax."}),"\n",(0,i.jsxs)(n.p,{children:["It wasn't without its challenges, and still is. Webpack is wonderfully\npowerful - but it does do ",(0,i.jsx)(n.em,{children:"a lot"}),", and it's really easy to stumble onto plugins\nthat are either order dependent or mutually exclusive."]}),"\n",(0,i.jsx)(n.h2,{id:"so-whats-this-about-esbuild",children:"So what's this about esbuild"}),"\n",(0,i.jsxs)(n.p,{children:["It's a bundler/compiler for JS/TS projects that is written in Go, along with\nbeing faster by the simple fact it's natively compiled it also leverages\nconcurrency. To compare ",(0,i.jsx)(n.em,{children:"why"})," esbuild is faster than NodeJS on face value is\nunfair in my opinion. Although having similar objectives, they are wildly\ndifferent in implementation and in features."]}),"\n",(0,i.jsxs)(n.p,{children:["So ",(0,i.jsx)(n.strong,{children:"speed"})," is the big selling point. But thinking back to other bundlers, what\nmade us switch (thinking of gulp, grunt, mixing in babel, browserify etc). Those\nchanges were never about speed, at least a drop in build time was nice - a bit of\ncaching goes a long way. The changes were about being able to use the syntax and\nlibraries we wanted with as little fuss as possible."]}),"\n",(0,i.jsxs)(n.p,{children:["Webpack ",(0,i.jsx)(n.em,{children:"can"})," do almost anything. I'm not convinced esbuild can match that, and\nas an open-source maintainer I'd argue it shouldn't break its original goals to\nmatch Webpack."]}),"\n",(0,i.jsx)(n.h2,{id:"exploring-the-caveats",children:"Exploring the caveats"}),"\n",(0,i.jsxs)(n.p,{children:["I started breaking down what our current bundle setup actually does, after all\nif we were just bundling plain JS I'd probably be using rollup and terser. Going\nthrough our ",(0,i.jsx)(n.code,{children:"webpack.config.js"})," file I can see that it:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Conditionally provide sourcemaps depending on the environment."}),"\n",(0,i.jsxs)(n.li,{children:["Uses babel to parse js/jsx files",(0,i.jsx)(n.br,{}),"\n","At the same time cherry picks lodash imports\n",(0,i.jsx)("a",{href:"#lodash",children:(0,i.jsx)("sup",{children:"*"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Parse ",(0,i.jsx)(n.code,{children:"import"}),"s for ",(0,i.jsx)(n.code,{children:".css"})," files through ",(0,i.jsx)(n.code,{children:"style-loader"})," and ",(0,i.jsx)(n.code,{children:"css-loader"}),(0,i.jsx)(n.br,{}),"\n","Injecting the styles onto the dom."]}),"\n",(0,i.jsxs)(n.li,{children:["Detect ",(0,i.jsx)(n.code,{children:"require"})," statements to images, copy them to an assets folder",(0,i.jsx)(n.br,{}),"\n","and replace the statement with a url to image."]}),"\n",(0,i.jsxs)(n.li,{children:["Can watch files (excluding ",(0,i.jsx)(n.code,{children:"node_modules"}),") in development."]}),"\n",(0,i.jsxs)(n.li,{children:["Splits files that come from ",(0,i.jsx)(n.code,{children:"node_modules"})," into a ",(0,i.jsx)(n.code,{children:"vendor.js"})," bundle."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"That's a lot more than just building something, there's some implicit behaviour\nhere."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The interaction between ",(0,i.jsx)(n.code,{children:"style-loader"})," and ",(0,i.jsx)(n.code,{children:"css-loader"})," results in extra\nfunctions and behaviour being introduced, it's not producing a ",(0,i.jsx)(n.code,{children:".css"})," file.","\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"I'm personally not a big fan of apps injecting styles, but I think I get why\npeople do it. Maybe I'm old-school and like to have my stylesheets delivered\nin a few files (or even one)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["The splitting doesn't know about ",(0,i.jsx)(n.code,{children:"app.js"}),", it puts everything that resolves to\n",(0,i.jsx)(n.code,{children:"node_modules"})," in ",(0,i.jsx)(n.code,{children:"vendor.js"}),". Subtle but worth pointing out."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)("a",{name:"lodash",children:(0,i.jsx)("sup",{children:"*"})}),"\nCould probably ignore this and refactor some\nfiles and check that tree-shaking is working properly."]}),"\n",(0,i.jsx)(n.h2,{id:"what-we-need-esbuild-to-provide",children:"What we need esbuild to provide"}),"\n",(0,i.jsx)(n.p,{children:"Like I mentioned before, webpack is super versatile and it would be\nshort-sighted to get esbuild to do everything it does."}),"\n",(0,i.jsx)(n.p,{children:"So I'm approaching this with the idea that I code will need some changes, the\nless the better - I've always firmly believed the kinds of restrictions smaller\ntools provide can make things neater and more portable."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Provide source maps"}),(0,i.jsx)(n.br,{}),"\n","Supported out of the box. ",(0,i.jsx)(n.a,{href:"https://esbuild.github.io/api/#sourcemap",children:"docs"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Watching files"}),(0,i.jsx)(n.br,{}),"\n","Yup. ",(0,i.jsx)(n.a,{href:"https://esbuild.github.io/api/#watch",children:"docs"})]}),"\n",(0,i.jsxs)(n.li,{children:["\ud83c\udd97 ",(0,i.jsx)(n.strong,{children:"Build our css"})," (and vendored css)",(0,i.jsx)(n.br,{}),"\n","Compiling CSS is supported, however it doesn't (as far as I can tell) doesn't\nreplace ",(0,i.jsx)(n.code,{children:"style-loader"})," and how it injects CSS into the DOM."]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Copy image assets referenced in JS"}),(0,i.jsx)(n.br,{}),"\n","Indeed it can, using the ",(0,i.jsx)(n.code,{children:"file"})," loader.\n",(0,i.jsx)(n.a,{href:"https://esbuild.github.io/content-types/#external-file",children:"docs"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 ",(0,i.jsx)(n.strong,{children:"Can split our files"}),(0,i.jsx)(n.br,{}),"\n","I picked a confusing green checkbox to illustrate that while esbuild does\nsupport file splitting - it appears to have some caveats, primarily that it\nonly works with ",(0,i.jsx)(n.code,{children:"esm"})," output files. We don't ship ES Modules to the browser,\nbut seems like a good moment to try given the primary targets for our web\nfront end getting module support in 2019 ",(0,i.jsx)("sup",{children:(0,i.jsx)("a",{href:"#esm",children:"2"})}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"giving-it-a-go",children:"Giving it a go"}),"\n",(0,i.jsx)(n.p,{children:"I've tried to go over the process as methodically as possible, after all this\nisn't a new codebase nor am I alone on this. It's always important to understand\nwho's going to be working with this, and respect the varying skill sets and\nfocuses of our peers."}),"\n",(0,i.jsx)(n.p,{children:"So we know what we want, but can any of this work? Let's give it a go with the\nsimplest of steps:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'./node_modules/.bin/esbuild js/app.js --bundle --outfile=out.js                                    \n > js/app.js:58:2: error: Unexpected "<"\n    58 \u2502   <React.StrictMode>\n       \u2575   ^\n\n1 error\n'})}),"\n",(0,i.jsx)(n.p,{children:"Bang! Right, that one makes sense to me, it doesn't know what JSX is yet. I'm\ngonna take a wild guess and say it won't know about the CSS or our referenced\nimages."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'./node_modules/.bin/esbuild js/app.js \\\n        --loader:.js=jsx \\\n        --loader:.png=file \\\n        --loader:.jpg=file \\\n        --loader:.jpeg=file \\\n        --bundle \\\n        --outdir=out\n > js/marketing/ProductsList.js:53:40: error: Unexpected ":"\n    53 \u2502     const displayList = products.filter(::this.includesText);\n       \u2575                                         ^\n\n > js/marketing/Banner.js:13:4: warning: Duplicate key "background" in object literal\n    13 \u2502     background: `-webkit-linear-gradient(to left, ${theme.palette.banner.right}, ${theme.palette.banner.left})`,\n       \u2575     ~~~~~~~~~~\n...\n'})}),"\n",(0,i.jsx)(n.p,{children:"Nice! Two things worth mentioning here:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["We're using some non-standard ES syntax here: ",(0,i.jsx)(n.code,{children:"::"}),", let's replace that with\nthe equivalent ",(0,i.jsx)(n.code,{children:"includesText.bind(this)"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Some duplicate keys in our theme objects, looks like a warning but worth\ncleaning up."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"./node_modules/.bin/esbuild js/app.js \\\n        --loader:.js=jsx \\\n        --loader:.png=file \\\n        --loader:.jpg=file \\\n        --loader:.jpeg=file \\\n        --bundle \\\n        --outdir=out\n\n  out/app.js                               8.0mb \u26a0\ufe0f\n  out/commcare-dhis2-JKJLM3MQ.png        471.0kb\n  ...\n  out/app.css                             85.1kb\n  ...and 145 more output files...\n\n\u26a1 Done in 651ms\n"})}),"\n",(0,i.jsx)(n.p,{children:"Jeepers! 651ms! That's nuts."}),"\n",(0,i.jsx)(n.p,{children:"We can see it's copied our images and css into the build folder. Note that we're\nnot doing any bundle splitting right now and from the looks of it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"... \\ \n>   --minify\n\n  out/app.js                               3.4mb \u26a0\ufe0f\n  ...\n\u26a1 Done in 611ms\n"})}),"\n",(0,i.jsx)(n.p,{children:"That's better, wow. It's kinda difficult to not be amazed. For context, a\nminified and split production build takes about 34s with webpack and that's on my\ni7 desktop machine, and 197s (3+ mins) on CI/CD."}),"\n",(0,i.jsx)(n.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,i.jsx)(n.p,{children:"So our 'can we actually do this' seems to have gone pretty well so far. I'm\nreally excited about what this will give us in the end."}),"\n",(0,i.jsx)(n.p,{children:"But a shell command doth not a replacement for webpack make. We still need to:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Get Phoenix to use esbuild and watch our files as we work."}),"\n",(0,i.jsxs)(n.li,{children:["Ensure that our html templates serve the correct files in dev & production.",(0,i.jsx)(n.br,{}),"\n","Including our CSS that is no longer injected into the DOM."]}),"\n",(0,i.jsx)(n.li,{children:"Split at least our vendored modules into their own bundle."}),"\n",(0,i.jsx)(n.li,{children:"Make sure sourcemaps generate correctly for when we upload them to Sentry."}),"\n",(0,i.jsx)(n.li,{children:"Have some kind of cache-busting naming scheme for production builds."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://fly.io/blog/phoenix-moves-to-esbuild-for-assets/",children:"FYI: Phoenix drops webpack and npm for esbuild"})," ",(0,i.jsx)("a",{name:"ref1",children:(0,i.jsx)("sup",{children:"1"})})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://caniuse.com/es6-module",children:"JavaScript modules via script tag"})," ",(0,i.jsx)("a",{name:"esm",children:(0,i.jsx)("sup",{children:"2"})})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},71164:e=>{e.exports=JSON.parse('{"permalink":"/articles/2021/10/15/webpack-to-esbuild-part1","editUrl":"https://github.com/openfn/docs/edit/main/articles/2021-10-15-webpack-to-esbuild-part1.md","source":"@site/articles/2021-10-15-webpack-to-esbuild-part1.md","title":"Moving from Webpack to esbuild on Phoenix","description":"We\'re very happy users of Elixir and Phoenix at OpenFn, given that we\'ve been","date":"2021-10-15T00:00:00.000Z","tags":[{"inline":true,"label":"how-to","permalink":"/articles/tags/how-to"},{"inline":true,"label":"js","permalink":"/articles/tags/js"},{"inline":true,"label":"webpack","permalink":"/articles/tags/webpack"},{"inline":true,"label":"build","permalink":"/articles/tags/build"},{"inline":true,"label":"phoenix","permalink":"/articles/tags/phoenix"},{"inline":true,"label":"ci/cd","permalink":"/articles/tags/ci-cd"}],"readingTime":6.63,"hasTruncateMarker":true,"authors":[{"name":"Stuart Corbishley","socials":{"github":"https://github.com/stuartc"},"imageURL":"https://avatars.githubusercontent.com/stuartc","key":"stu","page":null}],"frontMatter":{"layout":"post","title":"Moving from Webpack to esbuild on Phoenix","authors":"stu","tags":["how-to","js","webpack","build","phoenix","ci/cd"],"featured":true},"unlisted":false,"prevItem":{"title":"Testing a React app, the blurred line between Unit, integration and E2E","permalink":"/articles/2021/10/22/testing-react-app-with-jest-hound"},"nextItem":{"title":"Improving Multistage Docker Builds using Buildx","permalink":"/articles/2021/10/08/improving-multistage-docker-builds-using-buildx"}}')}}]);