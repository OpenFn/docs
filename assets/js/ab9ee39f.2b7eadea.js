"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[30837],{46082:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>p});var r=a(58168),n=(a(96540),a(15680));const l={title:"odoo@1.0.4",id:"odoo-docs",keywords:["adaptor","odoo","create","deleteRecord","read","update"]},o=void 0,d={unversionedId:"packages/odoo-docs",id:"packages/odoo-docs",title:"odoo@1.0.4",description:"create(model, data, options)",source:"@site/adaptors/packages/odoo-docs.md",sourceDirName:"packages",slug:"/packages/odoo-docs",permalink:"/adaptors/packages/odoo-docs",draft:!1,tags:[],version:"current",frontMatter:{title:"odoo@1.0.4",id:"odoo-docs",keywords:["adaptor","odoo","create","deleteRecord","read","update"]},sidebar:"adaptors",previous:{title:"Odoo Adaptor",permalink:"/adaptors/odoo"},next:{title:"Config for odoo",permalink:"/adaptors/packages/odoo-configuration-schema"}},g={},p=[{value:"Functions",id:"functions",level:2},{value:"create",id:"create",level:3},{value:"deleteRecord",id:"deleterecord",level:3},{value:"read",id:"read",level:3},{value:"update",id:"update",level:3},{value:"Interfaces",id:"interfaces",level:2},{value:"CreateOptions",id:"createoptions",level:3},{value:"OdooState",id:"odoostate",level:3}],y={toc:p},i="wrapper";function u(e){let{components:t,...a}=e;return(0,n.yg)(i,(0,r.A)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("dl",null,(0,n.yg)("dt",null,(0,n.yg)("a",{href:"#create"},"create(model, data, options)")),(0,n.yg)("dt",null,(0,n.yg)("a",{href:"#deleterecord"},"deleteRecord(model, recordId)")),(0,n.yg)("dt",null,(0,n.yg)("a",{href:"#read"},"read(model, recordId, fields)")),(0,n.yg)("dt",null,(0,n.yg)("a",{href:"#update"},"update(model, recordId, data)"))),(0,n.yg)("h2",{id:"functions"},"Functions"),(0,n.yg)("h3",{id:"create"},"create"),(0,n.yg)("p",null,(0,n.yg)("code",null,"create(model, data, options) \u21d2 Operation")),(0,n.yg)("p",null,"Create a record in Odoo.\nYou can pass an external ID to the options object to create a record with a specific ID.\nYou can also pass a downloadNewRecord option to download the whole created resource in the response."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Param"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"model"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"string")),(0,n.yg)("td",{parentName:"tr",align:null},'The specific record model i.e. "res.partner"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"object")),(0,n.yg)("td",{parentName:"tr",align:null},"The data to be created in JSON.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"options"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("a",{parentName:"td",href:"#createoptions"},(0,n.yg)("code",null,"CreateOptions"))),(0,n.yg)("td",{parentName:"tr",align:null},"Options to send to the request.")))),(0,n.yg)("p",null,"This operation writes the following keys to state:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"State Key"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},"The response body (as JSON)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"response"),(0,n.yg)("td",{parentName:"tr",align:null},"The HTTP response from the Odoo server (excluding the body)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"references"),(0,n.yg)("td",{parentName:"tr",align:null},"An array of all previous data objects used in the Job")))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Example:"),"  Create a partner record with an external Id "),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"create('res.partner', { name: 'Kool Keith' }, { externalId: 23 });\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Example:"),"  Create a partner record and download the whole record in the response "),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"create('res.partner', { name: 'Kool Keith' }, { downloadNewRecord: true });\n")),(0,n.yg)("hr",null),(0,n.yg)("h3",{id:"deleterecord"},"deleteRecord"),(0,n.yg)("p",null,(0,n.yg)("code",null,"deleteRecord(model, recordId) \u21d2 Operation")),(0,n.yg)("p",null,"Delete a record from Odoo"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Param"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"model"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"string")),(0,n.yg)("td",{parentName:"tr",align:null},'The specific record model i.e. "res.partner"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"recordId"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"number")),(0,n.yg)("td",{parentName:"tr",align:null},"The specific recordId to be deleted.")))),(0,n.yg)("p",null,"This operation writes the following keys to state:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"State Key"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},"The response body (as JSON)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"response"),(0,n.yg)("td",{parentName:"tr",align:null},"The HTTP response from the Odoo server (excluding the body)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"references"),(0,n.yg)("td",{parentName:"tr",align:null},"An array of all previous data objects used in the Job")))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Example")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},'deleteRecord("res.partner", 54 );\n')),(0,n.yg)("hr",null),(0,n.yg)("h3",{id:"read"},"read"),(0,n.yg)("p",null,(0,n.yg)("code",null,"read(model, recordId, fields) \u21d2 Operation")),(0,n.yg)("p",null,"Get a record from Odoo. Returns all fields unless a field list is provided as a third argument"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Param"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"model"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"string")),(0,n.yg)("td",{parentName:"tr",align:null},'The specific record model from i.e. "res.partner"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"recordId"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"number")),(0,n.yg)("td",{parentName:"tr",align:null},"An array of record IDs to read.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"fields"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"Array.","<","string",">")),(0,n.yg)("td",{parentName:"tr",align:null},"An optional array of field strings to read from the record.")))),(0,n.yg)("p",null,"This operation writes the following keys to state:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"State Key"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},"The response body (as JSON)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"response"),(0,n.yg)("td",{parentName:"tr",align:null},"The HTTP response from the Odoo server (excluding the body)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"references"),(0,n.yg)("td",{parentName:"tr",align:null},"An array of all previous data objects used in the Job")))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Example:")," Download records with select fields"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"read(\"res.partner\", [1] , ['name']);\n")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Example:")," Download a single record with all fields"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},'read("res.partner", $.recordIds);\n')),(0,n.yg)("hr",null),(0,n.yg)("h3",{id:"update"},"update"),(0,n.yg)("p",null,(0,n.yg)("code",null,"update(model, recordId, data) \u21d2 Operation")),(0,n.yg)("p",null,"Update a record in Odoo"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Param"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"model"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"string")),(0,n.yg)("td",{parentName:"tr",align:null},'The specific record model i.e. "res.partner"')),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"recordId"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"number")),(0,n.yg)("td",{parentName:"tr",align:null},"The specific recordId to be updated.")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"object")),(0,n.yg)("td",{parentName:"tr",align:null},"The data to be updated in JSON.")))),(0,n.yg)("p",null,"This operation writes the following keys to state:"),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"State Key"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},"The response body (as JSON)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"response"),(0,n.yg)("td",{parentName:"tr",align:null},"The HTTP response from the Odoo server (excluding the body)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"references"),(0,n.yg)("td",{parentName:"tr",align:null},"An array of all previous data objects used in the Job")))),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Example")),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"update(\"res.partner\", 54 , {name: 'Jane Doe'});\n")),(0,n.yg)("hr",null),(0,n.yg)("h2",{id:"interfaces"},"Interfaces"),(0,n.yg)("h3",{id:"createoptions"},"CreateOptions"),(0,n.yg)("p",null,"Options object"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Type"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"externalId"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"number")),(0,n.yg)("td",{parentName:"tr",align:null},"An optional id to be used in the request")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"downloadNewRecord"),(0,n.yg)("td",{parentName:"tr",align:null},(0,n.yg)("code",null,"boolean")),(0,n.yg)("td",{parentName:"tr",align:null},"An option defaulted to ",(0,n.yg)("inlineCode",{parentName:"td"},"false")," incase a user intends to receive the whole created resource in the response. The collective response will be written in ",(0,n.yg)("inlineCode",{parentName:"td"},"state.data"),".")))),(0,n.yg)("hr",null),(0,n.yg)("h3",{id:"odoostate"},"OdooState"),(0,n.yg)("p",null,"State object"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Name"),(0,n.yg)("th",{parentName:"tr",align:null},"Description"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"data"),(0,n.yg)("td",{parentName:"tr",align:null},"The response body (as JSON)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"response"),(0,n.yg)("td",{parentName:"tr",align:null},"The HTTP response from the Odoo server (excluding the body)")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"references"),(0,n.yg)("td",{parentName:"tr",align:null},"An array of all previous data objects used in the Job")))),(0,n.yg)("hr",null))}u.isMDXComponent=!0},15680:(e,t,a)=>{a.d(t,{xA:()=>y,yg:()=>m});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var g=r.createContext({}),p=function(e){var t=r.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},y=function(e){var t=p(e.components);return r.createElement(g.Provider,{value:t},e.children)},i="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,g=e.parentName,y=d(e,["components","mdxType","originalType","parentName"]),i=p(a),s=n,m=i["".concat(g,".").concat(s)]||i[s]||u[s]||l;return a?r.createElement(m,o(o({ref:t},y),{},{components:a})):r.createElement(m,o({ref:t},y))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=s;var d={};for(var g in t)hasOwnProperty.call(t,g)&&(d[g]=t[g]);d.originalType=e,d[i]="string"==typeof e?e:n,o[1]=d;for(var p=2;p<l;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);