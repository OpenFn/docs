"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78093],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var a=n(96540);const s={},i=a.createContext(s);function o(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:t},e.children)}},79888:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"library/jobs/auto/satusehat-create-medication","title":"Create a Medication Record","description":"\ud83d\udcdc This job is an official example from OpenFn.","source":"@site/adaptors/library/jobs/auto/satusehat-create-medication.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/satusehat-create-medication","permalink":"/adaptors/library/jobs/auto/satusehat-create-medication","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Create a Medication Record","sidebar_label":"\ud83d\udcdc Create a Medication Record","id":"satusehat-create-medication","keywords":["library","job","expression","satusehat","map","post"]},"sidebar":"adaptors","previous":{"title":"\ud83d\udcdc Create an Observation","permalink":"/adaptors/library/jobs/auto/satusehat-create-observations"},"next":{"title":"Changelog","permalink":"/adaptors/packages/satusehat-changelog"}}');var s=n(74848),i=n(28453);const o={title:"Create a Medication Record",sidebar_label:"\ud83d\udcdc Create a Medication Record",id:"satusehat-create-medication",keywords:["library","job","expression","satusehat","map","post"]},r=void 0,c={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["\ud83d\udcdc ",(0,s.jsx)("em",{children:"This job is an official example from OpenFn."})]}),"\n",(0,s.jsx)(t.h2,{id:"metadata",children:"Metadata"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Name: Create a Medication Record"}),"\n",(0,s.jsxs)(t.li,{children:["Adaptor: ",(0,s.jsx)(t.a,{href:"https://www.github.com/openfn/language-satusehat",children:(0,s.jsx)(t.code,{children:"@openfn/language-satusehat"})})]}),"\n",(0,s.jsxs)(t.li,{children:["Adaptor Version: ",(0,s.jsx)(t.a,{href:"https://www.github.com/openfn/language-satusehat",children:(0,s.jsx)(t.code,{children:"latest"})})]}),"\n",(0,s.jsx)(t.li,{children:"Created date unknown"}),"\n",(0,s.jsx)(t.li,{children:"Updated date unknown"}),"\n",(0,s.jsxs)(t.li,{children:["Score: ",(0,s.jsx)("b",{children:"100"})," (an ",(0,s.jsx)(t.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"map"}),", ",(0,s.jsx)(t.code,{children:"post"})]}),"\n",(0,s.jsx)(t.h2,{id:"expression",children:"Expression"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// Create medication in Satusehat based on an incoming Commcare visit\n\nfn(state => {\n  // state.visit is a Commcare Visit record\n  const properties = state.visit.properties;\n  const medicineKeys = Object.keys(properties).filter(\n    key =>\n      key.startsWith('prescription_') &&\n      !key.includes('_amount') &&\n      !key.includes('_instruction') &&\n      !key.includes('_dose')\n  );\n\n  const medicationId = util.uuid();\n\n  // Map medication data for each relevant key\n  state.medication = medicineKeys.map(item => {\n    return {\n      resourceType: 'Medication',\n      id: state => medicationId,\n      meta: {\n        profile: [\n          'https://fhir.kemkes.go.id/r4/StructureDefinition/Medication',\n        ],\n      },\n      identifier: [\n        {\n          system: `http://sys-ids.kemkes.go.id/medication/${state.visit.satusehatId}`,\n          use: 'usual',\n          value: item.fields['Nama'],\n        },\n      ],\n      code: {\n        coding: [\n          {\n            system: 'http://sys-ids.kemkes.go.id/kfa',\n            code: item.fields['kfa_codes'],\n            display: item.fields['Nama'],\n          },\n        ],\n      },\n      status: 'active',\n      extension: [\n        {\n          url: 'https://fhir.kemkes.go.id/r4/StructureDefinition/MedicationType',\n          valueCodeableConcept: {\n            coding: [\n              {\n                system:\n                  'http://terminology.kemkes.go.id/CodeSystem/medication-type',\n                code: 'NC',\n                display: 'Non-compound',\n              },\n            ],\n          },\n        },\n      ],\n    };\n  });\n\n  return state;\n});\n\n// Post our medication resources to Satusehat\npost('Medication', $.medication);\n\nfn(state => {\n  //  Store the newly created resources, created by the server, into state for the next step\n  state.medication = state.data;\n  return state;\n});\n\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);