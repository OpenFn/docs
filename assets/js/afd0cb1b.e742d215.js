"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[70092],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var a=r(96540);const t={},i=a.createContext(t);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(i.Provider,{value:n},e.children)}},74552:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"library/jobs/auto/Q3-2022-Create-Distribution-Referral-in-SF-2020-06-19","title":"Q3 2022 Create Distribution & Referral in SF","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Q3-2022-Create-Distribution-Referral-in-SF-2020-06-19.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Q3-2022-Create-Distribution-Referral-in-SF-2020-06-19","permalink":"/adaptors/library/jobs/auto/Q3-2022-Create-Distribution-Referral-in-SF-2020-06-19","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Q3 2022 Create Distribution & Referral in SF","sidebar_label":"Q3 2022 Create Distribution & Referral in SF","id":"Q3-2022-Create-Distribution-Referral-in-SF-2020-06-19","keywords":["library","job","expression","salesforce","dataValue","field","fields","join","map","relationship","upsert"]},"sidebar":"adaptors","previous":{"title":"Q4 2022 Upsert Supervision - Accompaniment","permalink":"/adaptors/library/jobs/auto/Q4-2022-Upsert-Supervision-Accompaniment-2022-08-22"},"next":{"title":"Upsert Team or Group Name","permalink":"/adaptors/library/jobs/auto/Upsert-Team-or-Group-Name-2021-04-28"}}');var t=r(74848),i=r(28453);const o={title:"Q3 2022 Create Distribution & Referral in SF",sidebar_label:"Q3 2022 Create Distribution & Referral in SF",id:"Q3-2022-Create-Distribution-Referral-in-SF-2020-06-19",keywords:["library","job","expression","salesforce","dataValue","field","fields","join","map","relationship","upsert"]},s=void 0,l={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,t.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Name: Q3 2022 Create Distribution & Referral in SF"}),"\n",(0,t.jsxs)(n.li,{children:["Adaptor: ",(0,t.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(n.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,t.jsxs)(n.li,{children:["Adaptor Version: ",(0,t.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(n.code,{children:"latest"})})]}),"\n",(0,t.jsx)(n.li,{children:"Created about 5 years ago"}),"\n",(0,t.jsx)(n.li,{children:"Updated 8 months ago"}),"\n",(0,t.jsxs)(n.li,{children:["Score: ",(0,t.jsx)("b",{children:"0"})," (an ",(0,t.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"dataValue"}),", ",(0,t.jsx)(n.code,{children:"field"}),", ",(0,t.jsx)(n.code,{children:"fields"}),", ",(0,t.jsx)(n.code,{children:"join"}),", ",(0,t.jsx)(n.code,{children:"map"}),", ",(0,t.jsx)(n.code,{children:"relationship"}),", ",(0,t.jsx)(n.code,{children:"upsert"})]}),"\n",(0,t.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"//Job to integrate CommCare 'Distribution & Referrals' form\nupsert(\n  'Family_Planning_community_Distribution__c',\n  'Commcare_Case_ID__c',\n  fields(\n    field('Commcare_Case_ID__c', dataValue('id')),\n    relationship('RecordType', 'Name', 'FP Community Distribution & Referrals'),\n    field('Distribute_Date__c', dataValue('form.date')),\n    field('Client_Name__c', dataValue('form.name')),\n    field('Client_Gender__c', dataValue('form.gender')),\n    field('Client_Age__c', dataValue('form.age')),\n    field('Client_currently_on_FP__c', dataValue('form.current_use')),\n    field('Referral_Date__c', dataValue('form.Referral_Date')),\n    field('Referral_Method__c', state => {\n      var method = dataValue('form.referral_method')(state);\n      var newMethod = method\n        ? method\n            .split(/_/g)\n            .map(\n              word =>\n                `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\n            )\n            .join(' ')\n        : '';\n      return newMethod;\n    }),\n    field('Implant_Type__c', state => {\n      var type = dataValue('form.implant_type')(state);\n      var newType = '';\n      if (type) {\n        if (type === 'implanon') {\n          newType = '3-year Implanon';\n        } else {\n          newType = type === 'jadelle' ? '5-year Jadelle' : null;\n        }\n      }\n      return newType;\n    }),\n    field('Male_Condoms__c', dataValue('form.male_condoms_count')),\n    field('Female_Condoms__c', dataValue('form.female_condoms_count')),\n    field('POP__c', dataValue('form.POP_count')),\n    field('COC__c', dataValue('form.COC_count')),\n    field('Emergency_Pills__c', dataValue('form.emergency_pills_count')),\n    field(\n      'Pregnancy_test_positive__c',\n      dataValue('form.positive_pregnancy_tests')\n    ),\n    field('Pregnancy_referrals__c', dataValue('form.pregnancy_referrals')),\n    field(\n      'Contraception_referrals__c',\n      dataValue('form.family_planning_referrals')\n    )\n  )\n);\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);