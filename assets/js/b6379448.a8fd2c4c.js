"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[68670],{30698:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(58168),o=(n(96540),n(15680));const r={title:"Key Concepts"},i=void 0,s={unversionedId:"get-started/terminology",id:"get-started/terminology",title:"Key Concepts",description:"All across the OpenFn Integration Toolkit and this documentation site you'll",source:"@site/docs/get-started/terminology.md",sourceDirName:"get-started",slug:"/get-started/terminology",permalink:"/documentation/get-started/terminology",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/get-started/terminology.md",tags:[],version:"current",frontMatter:{title:"Key Concepts"},sidebar:"docs",previous:{title:"Try out v2\u26a1",permalink:"/documentation/get-started/try-out"},next:{title:"Glossary",permalink:"/documentation/get-started/glossary"}},l={},p=[{value:"Project",id:"project",level:2},{value:"Workflow",id:"workflow",level:2},{value:"Adaptor",id:"adaptor",level:3},{value:"Credential",id:"credential",level:3},{value:"Trigger",id:"trigger",level:2},{value:"Work Order",id:"work-order",level:2},{value:"Run",id:"run",level:2},{value:"Logs",id:"logs",level:3},{value:"History",id:"history",level:2},{value:"Inspector",id:"inspector",level:2},{value:"Input",id:"input",level:3},{value:"Output",id:"output",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...r}=e;return(0,o.yg)(c,(0,a.A)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"All across the OpenFn Integration Toolkit and this documentation site you'll\nfind some OpenFn-specific terminology that's important to understand. This page\nis your reference guide\u2014a glossary of the most important ",(0,o.yg)("em",{parentName:"p"},"OpenFn-specific")," words\nand what they mean."),(0,o.yg)("admonition",{title:"Something missing?",type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"If you've come across a word, phrase, or concept that you think is missing from\nthis page, open an issue on ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/docs"},"OpenFn/docs"),",\nsuggest an edit to\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/docs/blob/main/docs/get-started/terminology.md"},"this page"),",\nor ask on the ",(0,o.yg)("a",{parentName:"p",href:"https://community.openfn.org"},"Community"))),(0,o.yg)("p",null,"Please note that if you're looking for a glossary for generic terms used in\ndata-integration (rather than this ",(0,o.yg)("em",{parentName:"p"},"OpenFn-specific")," stuff) head over to the\n",(0,o.yg)("a",{parentName:"p",href:"/documentation/get-started/glossary"},"Glossary for Integration")," page in the\nDesign section. Otherwise, read on!"),(0,o.yg)("h2",{id:"project"},"Project"),(0,o.yg)("p",null,'A Project is an administrative grouping in OpenFn like a "workspace".'),(0,o.yg)("p",null,"On the platform (OpenFn/lightning), Projects define who can access your OpenFn\nworkflow configuration & history. Projects have an owner and one or more\nCollaborators."),(0,o.yg)("p",null,"In local deployment and development, Project also corresponds to a\n",(0,o.yg)("a",{parentName:"p",href:"/documentation/deploy/portability-versions#v2"},(0,o.yg)("inlineCode",{parentName:"a"},"project.yaml"))," file, which\ndefines a project' configuration."),(0,o.yg)("p",null,"In either case, a Project contains Workflows, Triggers, Credentials, and\neverything you need to automate and integrate with OpenFn."),(0,o.yg)("h2",{id:"workflow"},"Workflow"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Workflows are the ",(0,o.yg)("strong",{parentName:"p"},'"what to do"')," part of automation!")),(0,o.yg)("p",null,"A Workflow is a collection of a Trigger, Steps, Paths, and custom logic\nconnected together to automate a specific business process or task. A Workflow\nis configured via the Canvas in the web app, or locally (via code)."),(0,o.yg)("p",null,"OpenFn automation centers around ",(0,o.yg)("a",{parentName:"p",href:"/documentation/build/workflows"},"Workflows"),",\nwhich may have one or multiple Steps. Workflows can be run in real-time (based\non an event -e.g., new patient registration), on a scheduled basis (e.g., every\nday at 8am), or manually on-demand."),(0,o.yg)("p",null,"Think of workflow as a set of instructions you might give a staff member (e.g.,\nplease create a new Patient record in OpenMRS when a form containing a newly\nregistered client is received from CommCare, export data to DHIS2 every week on\nFriday 11pm, send SMS with payment confirmation number when payment confirmation\nmessage is received etc.)."),(0,o.yg)("p",null,"Common Workflows automate:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Reporting for enhanced/faster program monitoring (especially mobile-to-MIS\nreporting)"),(0,o.yg)("li",{parentName:"ul"},"Rote data ETL (extract, transform, load) and data cleaning steps"),(0,o.yg)("li",{parentName:"ul"},"Alerts (SMS, email)"),(0,o.yg)("li",{parentName:"ul"},"Referrals between partner systems"),(0,o.yg)("li",{parentName:"ul"},"Task assignments or approvals"),(0,o.yg)("li",{parentName:"ul"},"Grievance or case reporting"),(0,o.yg)("li",{parentName:"ul"},"Financial tansactions or payments")),(0,o.yg)("admonition",{title:"Workflows are reusable",type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Workflows are fully configurable and reusable. They can also be chained together\nto automate multi-step processes and two-way data syncs to keep data consistent\nbetween multiple applications (using multi-app Saga patterns).")),(0,o.yg)("h3",{id:"adaptor"},"Adaptor"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Adaptors are the ",(0,o.yg)("strong",{parentName:"p"},'"where to do it"')," part of automation!")),(0,o.yg)("p",null,"OpenFn ",(0,o.yg)("a",{parentName:"p",href:"/adaptors"},"Adaptors")," are open-source modules that provide your Workflows\nwith the features they need to communicate with a particular system's API. Some\nexamples are ",(0,o.yg)("a",{parentName:"p",href:"/adaptors/dhis2"},"dhis"),", ",(0,o.yg)("a",{parentName:"p",href:"/adaptors/postgresql"},(0,o.yg)("inlineCode",{parentName:"a"},"postgresql")),", and\n",(0,o.yg)("a",{parentName:"p",href:"/adaptors/packages/http-docs"},(0,o.yg)("inlineCode",{parentName:"a"},"http"))," etc. There are more than 70 active\nadaptors at the moment, and anyone is free to build or enhance them. See\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"GitHub/Adaptors")," for the source code."),(0,o.yg)("h3",{id:"credential"},"Credential"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Credentials are the ",(0,o.yg)("strong",{parentName:"p"},'"how to log in"')," part of automation!")),(0,o.yg)("p",null,"A Credential is used to authenticate with a destination app (e.g., Database\nusername, password & login URL) so that a Workflow Step can run. Via OpenFn's\nsecurity model, Credentials are separated from the Workflows themselves to\nensure that stored usernames and passwords (which are all encrypted) do not get\nleaked or accessed by the wrong people."),(0,o.yg)("h2",{id:"trigger"},"Trigger"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Triggers are the ",(0,o.yg)("strong",{parentName:"p"},'"when to do it"')," part of automation!")),(0,o.yg)("p",null,"A ",(0,o.yg)("a",{parentName:"p",href:"/documentation/build/triggers"},"Trigger")," determines ",(0,o.yg)("strong",{parentName:"p"},"how and when")," Workflows\nshould execute automatically (e.g., real-time or schedule-based). When\nactivated, Triggers create a new\n",(0,o.yg)("a",{parentName:"p",href:"/documentation/get-started/terminology#work-order"},"Work Order"),' and run (or\n"execute") the Workflow.'),(0,o.yg)("p",null,'A "Webhook Event" Trigger may be configured if you want your Workflow to execute\nin real-time when an event in an external app occurs (e.g., new form submitted,\nnew notification received).'),(0,o.yg)("p",null,'A "Cron" Trigger may be configured if you want your Workflow to execute\naccording to a specific schedule (e.g., daily at 8am, the 1st Monday of every\nmonth).'),(0,o.yg)("h2",{id:"work-order"},"Work Order"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Work Orders capture ",(0,o.yg)("strong",{parentName:"p"},'"when & what triggered"')," the automation, and help us\nmonitor if and when the Workflow is successfully completed.")),(0,o.yg)("p",null,"A Work Order is a request to execute a Workflow with a given input (e.g, a new\nform submission or patient record that needs to be processed)."),(0,o.yg)("p",null,"A Work Order is created every time a Workflow's Trigger is activated, or\nmanually by an Admin user."),(0,o.yg)("p",null,'For a Work Order to be completed successfully, the Work Order should reach an\nending Step succesfully (without errors) - this ensures that the processing has\nbeen completed. Multiple Workflow "Runs" may be required for a given Work Order\nto be considered succesful.'),(0,o.yg)("p",null,'Work Orders enable users to closely monitor whether unique inputs (e.g.,\n"patient record 123") are successfully processed by a given workflow, for a\n"case-management" auditing experience.'),(0,o.yg)("p",null,"Imagine that a Workflow is configured to create a new patient in OpenMRS\nwhenever a new case is opened in CommCare. Over the next week, if 5 cases are\nopened in CommCare, you\u2019ll see 5 different Work Orders for this one Workflow. If\n4 Work Orders are successful and one has failed, you\u2019ll see 4 new patients in\nOpenMRS, and your system administrator will have been notified that one of those\npatients couldn\u2019t be created (or whatever more robust error-handling you\u2019ve set\nup will take place.)"),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Work Order",src:n(77124).A,width:"1516",height:"454"})),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"There\u2019s usually a 1-to-1 mapping between Work Orders and the real-world things\nyou\u2019re working with. I might create a Workflow that gets all updated event data\nfrom DHIS2 for the last 2 weeks and publishes it to a public map using CartoDB.\nThis Workflow will be triggered at specified time intervals, every 2 weeks in\nthis case, and after a month, we\u2019ll only see 2 Work Orders in OpenFn (that\u2019s one\nevery two weeks). Each Work Order will have success or failed status with\nrelated Runs that capture the details of each transaction and how many event\nrecords may have been processed.")),(0,o.yg)("h2",{id:"run"},"Run"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"Runs capture ",(0,o.yg)("strong",{parentName:"p"},'"what happened"')," in the automation!")),(0,o.yg)("p",null,"A Run is an individual execution attempt to complete a Work Order. Multiple\nWorkflow Runs may exist to fulfill one Work Order (because the first Run might\nfail, so it needs to be retried to successfully process)."),(0,o.yg)("p",null,"Runs have start times, end times, logs, and status codes that indicate when they\ntook place, what they did, and whether or not they succeeded."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"OpenFn Workflow Canvas",src:n(42492).A,width:"1472",height:"802"})),(0,o.yg)("p",null,"Imagine that a Workflow is configured to create a new patient in OpenMRS\nwhenever a new case is opened in CommCare. Today if 1 patient is created, then:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"1 Work Order will be created in OpenFn. This will trigger a Run to execute to\ncreate the patient in OpenMRS."),(0,o.yg)("li",{parentName:"ul"},'If that Run fails due to an error (e.g., OpenMRS user password is incorrect,\nor patient is missing required information), then the "Status" of that Run and\nrelated Work Order will show as ',(0,o.yg)("inlineCode",{parentName:"li"},"failed"),"."),(0,o.yg)("li",{parentName:"ul"},'OpenFn users can correct the error and then choose to "rerun" that failed Run.\nThis will create a 2nd Run related to the original Work Order. If it\nsuccessed, then the "Status" of the 2nd Run and Work Order will show as\n"success".')),(0,o.yg)("h3",{id:"logs"},"Logs"),(0,o.yg)("p",null,"Logs are the records generated by the workflow execution engine to capture the\nactivities performed when running a Workflow or specific Step."),(0,o.yg)("p",null,"OpenFn developers can control what appears in Logs by editing ",(0,o.yg)("inlineCode",{parentName:"p"},"console.log(...)"),"\nstatements in the Workflow job expressions of individual Steps."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Logs",src:n(43706).A,width:"878",height:"564"})),(0,o.yg)("h2",{id:"history"},"History"),(0,o.yg)("p",null,"On the platform, the History page provides a list of all of the Work Orders and\nRuns that have been processed in a Project."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"History",src:n(79372).A,width:"2856",height:"1442"})),(0,o.yg)("h2",{id:"inspector"},"Inspector"),(0,o.yg)("p",null,"On the platform, the Inspector interface allows users to edit, test, and run\nworkflows."),(0,o.yg)("p",null,"The Inspector has 3 key interfaces: ",(0,o.yg)("inlineCode",{parentName:"p"},"Input"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"Editor"),", & ",(0,o.yg)("inlineCode",{parentName:"p"},"Output"),"."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Inspector",src:n(91583).A,width:"1578",height:"848"})),(0,o.yg)("h3",{id:"input"},"Input"),(0,o.yg)("p",null,"An Input is the data (",(0,o.yg)("inlineCode",{parentName:"p"},"json"),") that is used as the starting Input for a Workflow\nStep to utilise when it's run. Every Run will have an Input (initial state) and\nOutput (final state)."),(0,o.yg)("p",null,"Inputs may be created automatically by a webhook event (e.g., a message\nforwarded or JSON payload posted to OpenFn) or another Workflow Step, or\nmanually by an OpenFn user."),(0,o.yg)("p",null,"Example Input from a form submission from a mobile data collection app (e.g.,\nKobo, ODK, CommCare):"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "form": {\n      "@name": "Register New Patient",\n      "case": {\n        "@case_id": "a9bX12c",\n        "@date_modified": "2021-01-21T07:08:19.431000Z",\n        "@user_id": "aaa",\n        "@xmlns": "http://commcarehq.org/case/transaction/v2",\n        "create": {\n          "case_name": "John Doe",\n          "age": 16,\n          "case_type": "patient",\n          "owner_id": "alan.worker"\n        }\n      }\n    }\n  }\n}\n')),(0,o.yg)("h3",{id:"output"},"Output"),(0,o.yg)("p",null,"An Output is the final data (",(0,o.yg)("inlineCode",{parentName:"p"},"json"),") that is outputted by a workflow Step,\naccording to the business logic defined in the Step's job expression. Outputs\nare either passed to the next Step in the workflow and/or to the connected\ndestination app."),(0,o.yg)("p",null,"Example Output if that form submission example (see above section) was mapped to\na connected case management app:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "patient": {\n      "full_name": "John Doe",\n      "age_at_enrollment": 16,\n      "type": "new",\n      "source": "mobile-app"\n    }\n  }\n}\n')))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var a=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),g=o,m=c["".concat(l,".").concat(g)]||c[g]||u[g]||r;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},79372:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/case-referral-history-10617e7207e08eb9739294ed3e534549.png"},91583:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/inspector_interfaces-0d5d0a6e50dc055608aea5ac294c58fd.png"},43706:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/logs_run-baff68a30d3cd2768e8eb463e56d92f6.png"},42492:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/run_view_logs-3bb951806a776c0492e0650e2b7b6510.png"},77124:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/work_order_shot-e01a5f9578308d59315afe21622c277c.png"}}]);