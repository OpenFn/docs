"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[17363],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}},80466:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"packages/http-readme","title":"http developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/http","source":"@site/adaptors/packages/http-readme.md","sourceDirName":"packages","slug":"/packages/http-readme","permalink":"/adaptors/packages/http-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"http developer readme","id":"http-readme","keywords":["adaptor","readme","http"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/http-changelog"},"next":{"title":"Overview","permalink":"/adaptors/hubtel"}}');var s=t(74848),r=t(28453);const o={title:"http developer readme",id:"http-readme",keywords:["adaptor","readme","http"]},i="http Adaptor developer README.md",d={},l=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Get data",id:"get-data",level:3},{value:"Post existing data",id:"post-existing-data",level:3},{value:"Update existing data with PUT or PATCH",id:"update-existing-data-with-put-or-patch",level:3},{value:"Delete data",id:"delete-data",level:3},{value:"Parse XML",id:"parse-xml",level:3},{value:"Parse CSV",id:"parse-csv",level:3},{value:"Sample parse local CSV file",id:"sample-parse-local-csv-file",level:3},{value:"Development",id:"development",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"http-adaptor-developer-readmemd",children:"http Adaptor developer README.md"})}),"\n",(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/http",children:"https://github.com/OpenFn/adaptors/tree/main/packages/http"})]}),"\n",(0,s.jsx)(n.h1,{id:"language-http",children:"Language HTTP"}),"\n",(0,s.jsx)(n.p,{children:"Language Pack for building expressions and operations to make HTTP calls."}),"\n",(0,s.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,s.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,s.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/http-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,s.jsx)(n.h3,{id:"get-data",children:"Get data"}),"\n",(0,s.jsx)(n.p,{children:"This helper function allows the use of a get method to fetch data. You can\nspecify a query string for filter."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"get(\n  '/myendpoint',\n  {\n    query: { foo: 'bar', a: 1 },\n    headers: { 'content-type': 'application/json' },\n    authentication: { username: 'taylor', password: 'somethingsecret' },\n  },\n  state => {\n    return state;\n  }\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"post-existing-data",children:"Post existing data"}),"\n",(0,s.jsx)(n.p,{children:"Send some data to an existing endpoint."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"post('/endpoint', {\n  body: state => {\n    return {\n      field_1: 'some_data',\n      field_2: 'some_more_data',\n      field_id: dataValue('Some.Json.Object.Id')(state),\n    };\n  },\n  headers: {\n    Authorization: 'AUTH_KEY',\n    'Content-Type': 'application/json',\n  },\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"update-existing-data-with-put-or-patch",children:"Update existing data with PUT or PATCH"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"put(\n  '/myendpoint',\n  {\n    body: { firstname: 'taylor', lastname: 'downs' },\n    headers: { 'content-type': 'application/json' },\n    authentication: { username: 'user', password: 'pass' },\n  },\n  state => {\n    return state;\n  }\n);\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"patch(\n  '/myendpoint',\n  {\n    body: { firstname: 'taylor', lastname: 'downs' },\n    headers: { 'content-type': 'application/json' },\n    authentication: { username: 'user', password: 'pass' },\n  },\n  state => {\n    return state;\n  }\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"delete-data",children:"Delete data"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"del(\n  '/myendpoint',\n  {\n    query: { id: 'someId' },\n    headers: { 'content-type': 'application/json' },\n    authentication: { username: 'user', password: 'pass' },\n  },\n  state => {\n    return state;\n  }\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"parse-xml",children:"Parse XML"}),"\n",(0,s.jsx)(n.p,{children:"This function allows you to parse some xml data. A callback function can be use\nto store in a table."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"parseXML(body, function ($) {\n  return $('table[class=your_table]').parsetable(true, true, true);\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"parse-csv",children:"Parse CSV"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"parseCSV('someData.csv', {\n  quoteChar: '\"',\n  header: false,\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"sample-parse-local-csv-file",children:"Sample parse local CSV file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"parseCSV('PatientsJan2009.csv', {\n  quoteChar: '\"',\n  header: false,\n  columns: true,\n  skip_empty_lines: true,\n  trim: true,\n  bom: true,\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsxs)(n.p,{children:["Clone the repo, run ",(0,s.jsx)(n.code,{children:"pnpm install"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Run tests using ",(0,s.jsx)(n.code,{children:"pnpm run test"})," or ",(0,s.jsx)(n.code,{children:"pnpm run test:watch"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To build the docs for this repo, run ",(0,s.jsx)(n.code,{children:"pnpm build:docs"}),"."]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);