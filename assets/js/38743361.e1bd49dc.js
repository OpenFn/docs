"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[37510],{28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>r});var t=o(96540);const s={},l=t.createContext(s);function c(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(l.Provider,{value:n},e.children)}},93864:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"packages/collections-readme","title":"collections developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/collections","source":"@site/adaptors/packages/collections-readme.md","sourceDirName":"packages","slug":"/packages/collections-readme","permalink":"/adaptors/packages/collections-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"collections developer readme","id":"collections-readme","keywords":["adaptor","readme","collections"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/collections-changelog"},"next":{"title":"Overview","permalink":"/adaptors/commcare"}}');var s=o(74848),l=o(28453);const c={title:"collections developer readme",id:"collections-readme",keywords:["adaptor","readme","collections"]},r="collections Adaptor developer README.md",i={},a=[{value:"Usage",id:"usage",level:2},{value:"Documentation",id:"documentation",level:2},{value:"CLI",id:"cli",level:2},{value:"For a single job",id:"for-a-single-job",level:3},{value:"For a workflow",id:"for-a-workflow",level:3},{value:"Deployments",id:"deployments",level:2},{value:"Development",id:"development",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"collections-adaptor-developer-readmemd",children:"collections Adaptor developer README.md"})}),"\n",(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/collections",children:"https://github.com/OpenFn/adaptors/tree/main/packages/collections"})]}),"\n",(0,s.jsxs)(n.h1,{id:"language-collections-",children:["language-collections ",(0,s.jsx)("img",{src:"./assets/square.png",width:"30",height:"30"})]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.em,{children:"adaptor"})})," for using the OpenFn Collections API."]}),"\n",(0,s.jsx)(n.p,{children:"The Collections adaptor is not designed to be used alone, but in conjunction\nwith other adaptors. As a result, it's a bit different to other adaptors."}),"\n",(0,s.jsx)(n.p,{children:"The Collections API is a key/value store, which can act as a high performance\ncache, buffer or storage solution. All values are strings (but can contain\nJSON)."}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.p,{children:["All collections functions are exposed through the ",(0,s.jsx)(n.code,{children:"collections"})," namespace:"]}),"\n",(0,s.jsxs)(n.p,{children:["To iterate over all values with ",(0,s.jsx)(n.code,{children:"2024"})," somewhere in the key"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"collections.each($.collectionName, '*2024*', (state, value, key) => {\n  console.log(value)\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,s.jsxs)(n.p,{children:["View the ",(0,s.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/collections-docs",children:"docs site"}),"\nfor full technical documentation."]}),"\n",(0,s.jsx)(n.h2,{id:"cli",children:"CLI"}),"\n",(0,s.jsx)(n.p,{children:"Collections can be used from the CLI since v1.8.7, but you will need to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set the job to use two adaptors"}),"\n",(0,s.jsx)(n.li,{children:"Pass a Personal Access Token"}),"\n",(0,s.jsx)(n.li,{children:"Set the Collections endpoint"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can get a Personal Access Token from any v2 deployment."}),"\n",(0,s.jsx)(n.h3,{id:"for-a-single-job",children:"For a single job"}),"\n",(0,s.jsx)(n.p,{children:"You can pass multiple adaptors from the CLI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"openfn job.js -a collections -a http -s state.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"You'll need to set configuration on the state.json:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'{\n  "configuration": {\n    "collections_endpoint": "http://localhost:4000/collections",\n    "collections_token": "...paste the token from the app..."\n  }\n}\n\n'})}),"\n",(0,s.jsx)(n.h3,{id:"for-a-workflow",children:"For a workflow"}),"\n",(0,s.jsxs)(n.p,{children:["If you're using ",(0,s.jsx)(n.code,{children:"workflow.json"}),", set the token and endpoint on\n",(0,s.jsx)(n.code,{children:"workflow.credentials"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "workflow": {\n    "steps": [ ... ],\n    "credentials": {\n      "collections_endpoint": "http://localhost:4000/collections",\n      "collections_token": "...paste the token from the app..."\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"And make sure that any steps which use collections have multiple adaptors set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "workflow": {\n    "steps": [\n      {\n        "expression": "...",\n        "adaptors": ["@openfn/language-http", "@openfn/language-collections"]\n      }\n    ]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Note that steps cannot generally use multiple adaptors. Collections are special\nin this regard."}),"\n",(0,s.jsx)(n.h2,{id:"deployments",children:"Deployments"}),"\n",(0,s.jsx)(n.p,{children:"Collections must be configured for your platform instance (v2 only)."}),"\n",(0,s.jsxs)(n.p,{children:["Set the ",(0,s.jsx)(n.code,{children:"WORKER_COLLECTIONS_URL"})," env var on the Worker instance to enable\ncollections for that worker. The URL should point to\n",(0,s.jsx)(n.code,{children:"https://<lightning>/collections"})]}),"\n",(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsxs)(n.p,{children:["Clone the ",(0,s.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),'. Follow the\n"Getting Started" guide inside to get set up.']}),"\n",(0,s.jsxs)(n.p,{children:["Run tests using ",(0,s.jsx)(n.code,{children:"pnpm run test"})," or ",(0,s.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,s.jsxs)(n.p,{children:["Build the project using ",(0,s.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To build ",(0,s.jsx)(n.em,{children:"only"})," the docs run ",(0,s.jsx)(n.code,{children:"pnpm build docs"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);