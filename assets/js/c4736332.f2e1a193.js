"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[20438],{76095:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(58168),r=(n(96540),n(15680));const o={title:"Create a condition Record",sidebar_label:"\ud83d\udcdc Create a condition Record",id:"satusehat-create-condition",keywords:["library","job","expression","satusehat","map","post"]},i=void 0,s={unversionedId:"library/jobs/auto/satusehat-create-condition",id:"library/jobs/auto/satusehat-create-condition",title:"Create a condition Record",description:"\ud83d\udcdc This job is an official example from OpenFn.",source:"@site/adaptors/library/jobs/auto/satusehat-create-condition.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/satusehat-create-condition",permalink:"/adaptors/library/jobs/auto/satusehat-create-condition",draft:!1,tags:[],version:"current",frontMatter:{title:"Create a condition Record",sidebar_label:"\ud83d\udcdc Create a condition Record",id:"satusehat-create-condition",keywords:["library","job","expression","satusehat","map","post"]},sidebar:"adaptors",previous:{title:"Config for satusehat",permalink:"/adaptors/packages/satusehat-configuration-schema"},next:{title:"\ud83d\udcdc Create an Encounter Record",permalink:"/adaptors/library/jobs/auto/satusehat-create-encounter"}},c={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"\ud83d\udcdc ",(0,r.yg)("em",null,"This job is an official example from OpenFn.")),(0,r.yg)("h2",{id:"metadata"},"Metadata"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Name: Create a condition Record"),(0,r.yg)("li",{parentName:"ul"},"Adaptor: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-satusehat"},(0,r.yg)("inlineCode",{parentName:"a"},"@openfn/language-satusehat"))),(0,r.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-satusehat"},(0,r.yg)("inlineCode",{parentName:"a"},"latest"))),(0,r.yg)("li",{parentName:"ul"},"Created date unknown"),(0,r.yg)("li",{parentName:"ul"},"Updated date unknown"),(0,r.yg)("li",{parentName:"ul"},"Score: ",(0,r.yg)("b",null,"100")," (an ",(0,r.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.yg)("h2",{id:"key-functions"},"Key Functions"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"post")),(0,r.yg)("h2",{id:"expression"},"Expression"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// Map diagnosis objects from commcare into Condition resources\n\nfn(state => {\n  state.conditions = state.visit.diagnosis.map(diagnosis => {\n    const diagnosisName = diagnosis.fields.name;\n    const code = diagnosis.fields['icd_10_code'];\n\n    return {\n      resourceType: 'Condition',\n      clinicalStatus: {\n        coding: [\n          {\n            system: 'http://terminology.hl7.org/CodeSystem/condition-clinical',\n            code: 'active',\n            display: 'Active',\n          },\n        ],\n      },\n      verificationStatus: {\n        coding: [\n          {\n            system:\n              'http://terminology.hl7.org/CodeSystem/condition-ver-status',\n            code: 'confirmed',\n            display: 'Confirmed',\n          },\n        ],\n      },\n      category: [\n        {\n          coding: [\n            {\n              system:\n                'http://terminology.hl7.org/CodeSystem/condition-category',\n              code: 'encounter-diagnosis',\n              display: 'Encounter Diagnosis',\n            },\n          ],\n        },\n      ],\n      subject: {\n        reference: `Patient/${state.patient.ihs_number}`,\n        display: state.patient.full_name,\n      },\n      encounter: {\n        reference: `Encounter/${state.encounterId}`,\n        display:\n          state.patient.full_name +\n          \"'s \" +\n          state.visit.properties.visit_type +\n          ' on ' +\n          state.visit.properties.visit_date,\n      },\n      code: {\n        coding: [\n          {\n            system: 'http://hl7.org/fhir/sid/icd-10',\n            code: code,\n            display: diagnosisName,\n          },\n        ],\n      },\n      bodySite: [\n        {\n          coding: [\n            {\n              system: 'http://snomed.info/sct',\n              code: '74262004',\n              display: 'Oral cavity structure',\n            },\n          ],\n        },\n      ],\n      recorder: {\n        reference: state.encounter.resource.participant[0].individual.reference,\n      },\n      onsetDateTime: state.visit.visit_date,\n      recordedDate: state.visit.visit_date,\n    };\n  });\n  return state;\n});\n\n// Post our condition resources to Satusehat\npost('Condition', $.conditions);\n\nfn(state => {\n  //  Store the newly created resources, created by the server, into state for the next step\n  state.conditions = state.data;\n  return state;\n});\n\n")))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),y=r,m=p["".concat(c,".").concat(y)]||p[y]||u[y]||o;return n?a.createElement(m,i(i({ref:t},d),{},{components:n})):a.createElement(m,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=y;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);