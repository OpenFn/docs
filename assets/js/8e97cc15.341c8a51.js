"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[31586],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var s=t(96540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}},73910:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"packages/telerivet-readme","title":"telerivet developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/telerivet","source":"@site/adaptors/packages/telerivet-readme.md","sourceDirName":"packages","slug":"/packages/telerivet-readme","permalink":"/adaptors/packages/telerivet-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"telerivet developer readme","id":"telerivet-readme","keywords":["adaptor","readme","telerivet"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/telerivet-changelog"},"next":{"title":"Overview","permalink":"/adaptors/twilio"}}');var r=t(74848),a=t(28453);const i={title:"telerivet developer readme",id:"telerivet-readme",keywords:["adaptor","readme","telerivet"]},d="telerivet Adaptor developer README.md",o={},l=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Send message",id:"send-message",level:2},{value:"Current <code>send</code> expression:",id:"current-send-expression",level:4},{value:"sendBulk messages - WIP",id:"sendbulk-messages---wip",level:2},{value:"Current <code>sendBulk</code> expression:",id:"current-sendbulk-expression",level:4},{value:"Development",id:"development",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"telerivet-adaptor-developer-readmemd",children:"telerivet Adaptor developer README.md"})}),"\n",(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/telerivet",children:"https://github.com/OpenFn/adaptors/tree/main/packages/telerivet"})]}),"\n",(0,r.jsx)(n.h1,{id:"language-telerivet",children:"Language Telerivet"}),"\n",(0,r.jsxs)(n.p,{children:["Language Pack for sending messages using the\n",(0,r.jsx)(n.a,{href:"https://telerivet.com/api/rest/curl",children:"telerivet API"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,r.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,r.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/telerivet-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,r.jsx)(n.h2,{id:"send-message",children:"Send message"}),"\n",(0,r.jsxs)(n.h4,{id:"current-send-expression",children:["Current ",(0,r.jsx)(n.code,{children:"send"})," expression:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"send(\n  fields(\n    field('to_number', dataValue('recipient_number')),\n    field('content', dataValue('recipient_text')),\n    // Lots of optional parameters...\n    field('message_type', 'sms'),\n    field('route_id', dataValue('some_route'))\n  )\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"sendbulk-messages---wip",children:"sendBulk messages - WIP"}),"\n",(0,r.jsxs)(n.h4,{id:"current-sendbulk-expression",children:["Current ",(0,r.jsx)(n.code,{children:"sendBulk"})," expression:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'send(fields(\n  field("content", dataValue("recipient_text")),\n  field("to_numbers", [\n        "+14155550123",\n        "+14255550234",\n        "+16505550345"\n    ]\n  // Lots of optional parameters...\n  field("message_type", "sms"),\n  field("route_id", dataValue("some_route"))\n))\n'})}),"\n",(0,r.jsx)(n.p,{children:'Note that "recipient_text" may be a concatenation like this:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"field('content', function (state) {\n  return dataValue('salutation')(state).concat(\n    '. ',\n    dataValue('last_name')(state),\n    ', )'\n  );\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,r.jsxs)(n.p,{children:["Clone the ",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),". Follow the\n",(0,r.jsx)(n.code,{children:"Getting Started"})," guide inside to get set up."]}),"\n",(0,r.jsxs)(n.p,{children:["Run tests using ",(0,r.jsx)(n.code,{children:"pnpm run test"})," or ",(0,r.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,r.jsxs)(n.p,{children:["Build the project using ",(0,r.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To just build the docs run ",(0,r.jsx)(n.code,{children:"pnpm build docs"})]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);