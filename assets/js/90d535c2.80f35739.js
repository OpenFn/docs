"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[53434],{29814:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(58168),a=(t(96540),t(15680));const o={title:"openhim developer readme",id:"openhim-readme",keywords:["adaptor","readme","openhim"]},i="openhim Adaptor developer README.md",p={unversionedId:"packages/openhim-readme",id:"packages/openhim-readme",title:"openhim developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/openhim",source:"@site/adaptors/packages/openhim-readme.md",sourceDirName:"packages",slug:"/packages/openhim-readme",permalink:"/adaptors/packages/openhim-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"openhim developer readme",id:"openhim-readme",keywords:["adaptor","readme","openhim"]},sidebar:"adaptors",previous:{title:"openhim changelog",permalink:"/adaptors/packages/openhim-changelog"},next:{title:"openimis@2.0.1",permalink:"/adaptors/packages/openimis-docs"}},l={},s=[{value:"HL7 FHIR Standard",id:"hl7-fhir-standard",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Development",id:"development",level:2}],d={toc:s},m="wrapper";function c(e){let{components:n,...t}=e;return(0,a.yg)(m,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"openhim-adaptor-developer-readmemd"},"openhim Adaptor developer README.md"),(0,a.yg)("p",null,"Source: ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/openhim"},"https://github.com/OpenFn/adaptors/tree/main/packages/openhim")),(0,a.yg)("h1",{id:"language-openhim"},"Language OpenHIM"),(0,a.yg)("p",null,"Language Pack for building expressions and operations for working with the\nopenhim API."),(0,a.yg)("h2",{id:"hl7-fhir-standard"},(0,a.yg)("a",{parentName:"h2",href:"https://www.hl7.org/fhir/patient-example.json.html"},"HL7 FHIR Standard")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-json"},'{\n  "resourceType": "Patient",\n  "id": "example",\n  "text": {\n    "status": "generated",\n    "div": "<div>\\n      \\n      <table>\\n        \\n        <tbody>\\n          \\n          <tr>\\n            \\n            <td>Name</td>\\n            \\n            <td>Peter James \\n              <b>Chalmers</b> (&quot;Jim&quot;)\\n            </td>\\n          \\n          </tr>\\n          \\n          <tr>\\n            \\n            <td>Address</td>\\n            \\n            <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n          \\n          </tr>\\n          \\n          <tr>\\n            \\n            <td>Contacts</td>\\n            \\n            <td>Home: unknown. Work: (03) 5555 6473</td>\\n          \\n          </tr>\\n          \\n          <tr>\\n            \\n            <td>Id</td>\\n            \\n            <td>MRN: 12345 (Acme Healthcare)</td>\\n          \\n          </tr>\\n        \\n        </tbody>\\n      \\n      </table>    \\n    \\n    </div>"\n  },\n  "identifier": [\n    {\n      "fhir_comments": ["   MRN assigned by ACME healthcare on 6-May 2001   "],\n      "use": "usual",\n      "type": {\n        "coding": [\n          {\n            "system": "http://hl7.org/fhir/v2/0203",\n            "code": "MR"\n          }\n        ]\n      },\n      "system": "urn:oid:1.2.36.146.595.217.0.1",\n      "value": "12345",\n      "period": {\n        "start": "2001-05-06"\n      },\n      "assigner": {\n        "display": "Acme Healthcare"\n      }\n    }\n  ],\n  "active": true,\n  "name": [\n    {\n      "fhir_comments": ["   Peter James Chalmers, but called \\"Jim\\"   "],\n      "use": "official",\n      "family": ["Chalmers"],\n      "given": ["Peter", "James"]\n    },\n    {\n      "use": "usual",\n      "given": ["Jim"]\n    }\n  ],\n  "telecom": [\n    {\n      "fhir_comments": ["   home communication details aren\'t known   "],\n      "use": "home"\n    },\n    {\n      "system": "phone",\n      "value": "(03) 5555 6473",\n      "use": "work"\n    }\n  ],\n  "gender": "male",\n  "_gender": {\n    "fhir_comments": ["   use FHIR code system for male / female   "]\n  },\n  "birthDate": "1974-12-25",\n  "_birthDate": {\n    "extension": [\n      {\n        "url": "http://hl7.org/fhir/StructureDefinition/patient-birthTime",\n        "valueDateTime": "1974-12-25T14:35:45-05:00"\n      }\n    ]\n  },\n  "deceasedBoolean": false,\n  "address": [\n    {\n      "use": "home",\n      "type": "both",\n      "line": ["534 Erewhon St"],\n      "city": "PleasantVille",\n      "district": "Rainbow",\n      "state": "Vic",\n      "postalCode": "3999",\n      "period": {\n        "start": "1974-12-25"\n      }\n    }\n  ],\n  "contact": [\n    {\n      "relationship": [\n        {\n          "coding": [\n            {\n              "system": "http://hl7.org/fhir/patient-contact-relationship",\n              "code": "partner"\n            }\n          ]\n        }\n      ],\n      "name": {\n        "family": ["du", "March\xc3\xa9"],\n        "_family": [\n          {\n            "extension": [\n              {\n                "fhir_comments": [\n                  "   the \\"du\\" part is a family name prefix (VV in iso 21090)   "\n                ],\n                "url": "http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier",\n                "valueCode": "VV"\n              }\n            ]\n          },\n          null\n        ],\n        "given": ["B\xc3\xa9n\xc3\xa9dicte"]\n      },\n      "telecom": [\n        {\n          "system": "phone",\n          "value": "+33 (237) 998327"\n        }\n      ],\n      "gender": "female",\n      "period": {\n        "start": "2012",\n        "_start": {\n          "fhir_comments": ["   The contact relationship started in 2012   "]\n        }\n      }\n    }\n  ],\n  "managingOrganization": {\n    "reference": "Organization/1"\n  }\n}\n')),(0,a.yg)("h3",{id:"configuration"},"Configuration"),(0,a.yg)("p",null,"View all the required and optional properties for ",(0,a.yg)("inlineCode",{parentName:"p"},"state.configuration")," in the\nofficial\n",(0,a.yg)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/openhim-configuration-schema/"},"configuration-schema"),"\ndefinition."),(0,a.yg)("h2",{id:"development"},"Development"),(0,a.yg)("p",null,"Clone the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,a.yg)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,a.yg)("p",null,"Run tests using ",(0,a.yg)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,a.yg)("p",null,"Build the project using ",(0,a.yg)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,a.yg)("p",null,"To just build the docs run ",(0,a.yg)("inlineCode",{parentName:"p"},"pnpm build docs")))}c.isMDXComponent=!0},15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>h});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=s(t),u=a,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||o;return t?r.createElement(h,i(i({ref:n},d),{},{components:t})):r.createElement(h,i({ref:n},d))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[m]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);