"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[43318],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var o=t(96540);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}},77532:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"packages/openfn-readme","title":"openfn developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/openfn","source":"@site/adaptors/packages/openfn-readme.md","sourceDirName":"packages","slug":"/packages/openfn-readme","permalink":"/adaptors/packages/openfn-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"openfn developer readme","id":"openfn-readme","keywords":["adaptor","readme","openfn"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/openfn-changelog"},"next":{"title":"Overview","permalink":"/adaptors/openhim"}}');var r=t(74848),a=t(28453);const s={title:"openfn developer readme",id:"openfn-readme",keywords:["adaptor","readme","openfn"]},d="openfn Adaptor developer README.md",i={},p=[{value:"Documentation",id:"documentation",level:2},{value:"request",id:"request",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Development",id:"development",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"openfn-adaptor-developer-readmemd",children:"openfn Adaptor developer README.md"})}),"\n",(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/openfn",children:"https://github.com/OpenFn/adaptors/tree/main/packages/openfn"})]}),"\n",(0,r.jsx)(n.h1,{id:"language-openfn",children:"Language OpenFn"}),"\n",(0,r.jsx)(n.p,{children:"Adaptor for building expressions and operations to interact with the OpenFn v1\nAPI."}),"\n",(0,r.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,r.jsx)(n.h2,{id:"request",children:"request"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"request({\n  method: 'get',\n  path: 'jobs',\n  params: {\n    project_id: 490,\n  },\n});\nrequest(\n  {\n    method: 'post',\n    path: 'jobs',\n    data: {\n      trigger_id: 1,\n      expression: 'steps()',\n    },\n  },\n  state => {\n    console.log('cool callback!');\n    return state;\n  }\n);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,r.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,r.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/openfn-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,r.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,r.jsxs)(n.p,{children:["Clone the ",(0,r.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),". Follow the\n",(0,r.jsx)(n.code,{children:"Getting Started"})," guide inside to get set up."]}),"\n",(0,r.jsxs)(n.p,{children:["Run tests using ",(0,r.jsx)(n.code,{children:"pnpm run test"})," or ",(0,r.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,r.jsxs)(n.p,{children:["Build the project using ",(0,r.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["To just build the docs run ",(0,r.jsx)(n.code,{children:"pnpm build docs"})]})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);