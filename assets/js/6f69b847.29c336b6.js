"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[45197],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(96540);const a={},o=i.createContext(a);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},85527:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var i=t(95632),a=t(74848),o=t(28453);const r={layout:"post",title:"Forms and Cases: CommCare and event-based integration",authors:"taylor",tags:["how-to","tips"],featured:!0},s=void 0,c={authorsImageUrls:[void 0]},d=[{value:"Most people use &quot;Data Forwarding&quot; in CommCare",id:"most-people-use-data-forwarding-in-commcare",level:2},{value:"Working with the data that comes from CommCare",id:"working-with-the-data-that-comes-from-commcare",level:2},{value:"The instructions for our worker",id:"the-instructions-for-our-worker",level:2},{value:"Translating this into an OpenFn project",id:"translating-this-into-an-openfn-project",level:2},{value:"Create a Salesforce credential",id:"create-a-salesforce-credential",level:3},{value:"Create a message-filter trigger",id:"create-a-message-filter-trigger",level:3},{value:"Create the job",id:"create-the-job",level:3},{value:"What&#39;s next",id:"whats-next",level:2},{value:"A final thought",id:"a-final-thought",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This is a quick one, but I just got off an exciting call with an organization\nthat's going to set up some jobs to move data into Salesforce from CommCare and\nrealized that despite this being one of our more common integration\nrequirements, we haven't done a 'tips' article for this type of project. Until\nnow."}),"\n",(0,a.jsx)(n.p,{children:"So here goes. While this is by no means an exhaustive project planning template,\nhere are a few things to keep in mind if you're planning to implement a CommCare\nto Salesforce integration on your own."}),"\n",(0,a.jsx)(n.h2,{id:"most-people-use-data-forwarding-in-commcare",children:'Most people use "Data Forwarding" in CommCare'}),"\n",(0,a.jsxs)(n.p,{children:['First, most people make use of CommCare\'s "Data Forwarding" feature to send form\nsubmissions and changes in cases (creation, update, closure, etc.) to OpenFn in\nreal-time. You can read about that\n',(0,a.jsx)(n.a,{href:"/adaptors/commcare#webhook-forward-cases-andor-forms-from-commcare-to-openfn-using-rest-service",children:"here"}),"\nbut the key consideration at this planning stage is ",(0,a.jsx)(n.em,{children:"when"})," you'll be performing\noperations\u2014",(0,a.jsx)(n.code,{children:"create(...)"}),", ",(0,a.jsx)(n.code,{children:"update(...)"}),", ",(0,a.jsx)(n.code,{children:"upsert(...)"}),", ",(0,a.jsx)(n.code,{children:"query(...)"}),",\n",(0,a.jsx)(n.code,{children:"(bulk(...)"}),", etc.\u2014in Salesforce and what data you'll have access to."]}),"\n",(0,a.jsx)(n.p,{children:"Each time a form submission comes into CommCare, we'll get a copy of that\nsubmission at OpenFn and can use that data to create or modify some records in\nSalesforce."}),"\n",(0,a.jsxs)(n.p,{children:['Likewise, each time a case gets updated (or created or closed) we\'ll get a copy\nof the case with all the case "properties" and we can use that data to ',(0,a.jsx)(n.em,{children:"do some\nstuff"})," in Salesforce."]}),"\n",(0,a.jsxs)(n.p,{children:['If you are using "Form Forwarding", the ',(0,a.jsx)(n.code,{children:"trigger"})," you'd create in OpenFn might\nlook like this ",(0,a.jsx)(n.code,{children:'{"form":{"@name":"ART Adherence Self-Reporting Tool"}}'})," and it\nwould trigger your ",(0,a.jsx)(n.code,{children:"job"}),' any time an "ART Adherence Self-Reporting Tool"\nsubmission arrived from CommCare, giving that job access to all of the data\ninside that submission.']}),"\n",(0,a.jsx)(n.h2,{id:"working-with-the-data-that-comes-from-commcare",children:"Working with the data that comes from CommCare"}),"\n",(0,a.jsx)(n.p,{children:"Assuming you're using making use of case management, the data that arrives from\nCommCare will look something like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "__query_params": {\n    "app_id": "some-long-id"\n  },\n  "app_id": "some-long-id",\n  "archived": false,\n  "attachments": {\n    "1621866020043.jpg": {\n      "content_type": "image/jpeg",\n      "length": 16423,\n      "url": "https://www.commcarehq.org/a/your-project/api/form/attachment/some-uuid/1621866020043.jpg"\n    },\n    "form.xml": {\n      "content_type": "text/xml",\n      "length": 2727,\n      "url": "https://www.commcarehq.org/a/your-project/api/form/attachment/some-uuid/form.xml"\n    }\n  },\n  "build_id": "0ec83881cd0e420dad5c24ed3a5452fe",\n  "domain": "your-project",\n  "edited_by_user_id": null,\n  "edited_on": null,\n  "form": {\n    "#type": "data",\n    "@name": "ART Adherence Self-Reporting Tool",\n    "@uiVersion": "1",\n    "@version": "2783",\n    "@xmlns": "http://openrosa.org/formdesigner/59E1207B-969F-402D-9EEE-675504036F78",\n    "administrative": {\n      "coach_verification": "check_here",\n      "visit_notes": "",\n      "vist_notes_to_save": ""\n    },\n    "case": {\n      "@case_id": "1ec51ee9-5aef-4bd2-b7eb-7599856251bc",\n      "@date_modified": "2021-05-24T14:20:28.693000Z",\n      "@user_id": "332e893dcd1b413686621bd80aae0cd3",\n      "@xmlns": "http://commcarehq.org/case/transaction/v2",\n      "update": {\n        "consent_received": "yes",\n        "home_visit_notes": ""\n      }\n    },\n    "meta": {\n      "@xmlns": "http://openrosa.org/jr/xforms",\n      "appVersion": "CommCare Android, version \\"2.51.2\\"(463994). App v2798. CommCare Version 2.51.2. Build 463994, built on: 2021-03-17",\n      "app_build_version": 2798,\n      "commcare_version": "2.51.2",\n      "deviceID": "commcare_a39f55a5-c744-4e33-8e01-d17e7698894f",\n      "drift": "0",\n      "geo_point": null,\n      "instanceID": "130c68c5-7d17-4086-8a85-27d7d7da2216",\n      "timeEnd": "2021-05-24T14:20:28.693000Z",\n      "timeStart": "2021-05-24T14:18:46.856000Z",\n      "userID": "332e893dcd1b413686621bd80aae0cd3",\n      "username": "some-chw"\n    },\n    "participant_information": {\n      "participant_id": "007",\n      "name": "taylor downs",\n      "gender": "male",\n      "guardian_information": {\n        "guardians_name": "Fake Data",\n        "guardians_phone_number": "8675309",\n        "guardians_signature": "1621866020043.jpg",\n        "relationship_to_participant": "father"\n      },\n      "current_medications": [\n        { "name": "generic-1", "active": true },\n        { "name": "fakelyn-notrealiol", "active": false },\n        { "name": "sasstra-zenica", "active": false },\n        { "name": "ibuprofen", "active": true }\n      ]\n    },\n    "tested_for_hiv_status_tested_for_hiv": "OK",\n    "visit_information": {\n      "consent_given": "yes",\n      "date_consent_given": "2021-05-23",\n      "visit_date": "2021-05-23"\n    }\n  },\n  "id": "130c68c5-7d17-4086-8a85-27d7d7da2216",\n  "indexed_on": "2021-05-24T14:20:39.045971",\n  "initial_processing_complete": true,\n  "is_phone_submission": true,\n  "metadata": {\n    "appVersion": "CommCare Android, version \\"2.51.2\\"(463994). App v2798. CommCare Version 2.51.2. Build 463994, built on: 2021-03-17",\n    "app_build_version": 2798,\n    "commcare_version": "2.51.2",\n    "deviceID": "commcare_a39f55a5-c744-4e33-8e01-d17e7698894f",\n    "drift": "0",\n    "geo_point": null,\n    "instanceID": "130c68c5-7d17-4086-8a85-27d7d7da2216",\n    "location": null,\n    "timeEnd": "2021-05-24T14:20:28.693000Z",\n    "timeStart": "2021-05-24T14:18:46.856000Z",\n    "userID": "332e893dcd1b413686621bd80aae0cd3",\n    "username": "some-chw"\n  },\n  "problem": null,\n  "received_on": "2021-05-24T14:20:37.976363Z",\n  "resource_uri": "",\n  "server_modified_on": "2021-05-24T14:20:38.111789Z",\n  "type": "data",\n  "uiversion": "1",\n  "version": "2783"\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This is a big blob of ",(0,a.jsx)(n.code,{children:"JSON"}),'\u2014the body of the message that\'s received at OpenFn\nwhen this particular form ("ART Adherence Self-Reporting Tool") is submitted in\nCommCare\u2014will be handed off to the job to start processing. The question is,\nwhat should we do?']}),"\n",(0,a.jsx)(n.p,{children:"When setting up for a self-service implementation on OpenFn, the most important\nthing you can do at this moment is carefully enumerate the data entry process\nthat you'd like a real human to follow. You can translate it to a job script\nlater."}),"\n",(0,a.jsx)(n.p,{children:"You'll need to write this up for your own case, but in this fictional example,\nhere's the data entry process."}),"\n",(0,a.jsx)(n.h2,{id:"the-instructions-for-our-worker",children:"The instructions for our worker"}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsx)(n.p,{children:'Right from the start, notice that we\'re being incredibly explicit with these\ninstructions! We\'re using the "API Name" (instead of just the "label", which\nmight be ambiguous) of every field we want filled out in Salesforce and we\'re\nusing the specific "path" to the data we want this person to enter from\nCommCare.'}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Why are we being so specific?"})," Because eventually, a computer will need to\ninterpret this\u2014and they're ",(0,a.jsx)(n.em,{children:"terrible"})," with ambiguity!"]})]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Every time a messaged is received with\n",(0,a.jsx)(n.code,{children:'{"form":{"@name":"ART Adherence Self-Reporting Tool"}}'})," in the body (this is\nour trigger)"]}),"\n",(0,a.jsxs)(n.li,{children:["Log into Salesforce and create a new participant with the ",(0,a.jsx)(n.code,{children:"participant_id"}),"\nyou find in the ",(0,a.jsx)(n.code,{children:"form.participant_information"})," section as their\n",(0,a.jsx)(n.code,{children:"Participant_Code__c"}),". (If one already exists in Salesforce with that code,\nthen update the existing record instead.)"]}),"\n",(0,a.jsxs)(n.li,{children:["Fill out the following fields in Salesforce based on the CommCare data in\nthis message:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Name__c"})," with the data from ",(0,a.jsx)(n.code,{children:"form.participant_information.name"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Sex__c"})," with the data from ",(0,a.jsx)(n.code,{children:"form.participant_information.gender"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"CommCare_Case_ID__c"})," with the data from ",(0,a.jsx)(n.code,{children:"form.case.@case_id"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["After you've created (or updated) this participant in Salesforce, create a\nrecord of the visit with the ",(0,a.jsx)(n.code,{children:"instanceID"})," from the ",(0,a.jsx)(n.code,{children:"metadata"})," section as the\nunique identifier ",(0,a.jsx)(n.code,{children:"Visit_Code__c"}),". (Again, if there's already a visit with\nthat ID please update the existing record.)"]}),"\n",(0,a.jsxs)(n.li,{children:['Fill out the following fields for the visit with data from CommCare"',"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Date__c"})," with ",(0,a.jsx)(n.code,{children:"form.visit_information.visit_date"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Consented__c"})," with ",(0,a.jsx)(n.code,{children:"form.visit_information.consent_given"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Always set ",(0,a.jsx)(n.code,{children:"Test_Status__c"})," to ",(0,a.jsx)(n.code,{children:"true"}),", regardless of what's in the message\nfrom CommCare."]}),"\n",(0,a.jsxs)(n.li,{children:["And relate this record with the ",(0,a.jsx)(n.code,{children:"Community_Health_Worker"})," by their username\nin ",(0,a.jsx)(n.code,{children:"form.metadata.username"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Finally, add a record for each medication listed in the\n",(0,a.jsx)(n.code,{children:"form.participant_information.current_medications"})," array\u2014matching on a unique\nID formed by a combination of the medication ",(0,a.jsx)(n.code,{children:"name"})," and the ",(0,a.jsx)(n.code,{children:"participant_id"}),"\nso that we can update existing medication records if they're present."]}),"\n",(0,a.jsxs)(n.li,{children:["Fill out the following fields for the medication:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Generic_Name__c"})," with ",(0,a.jsx)(n.code,{children:"name"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Status__c"})," with ",(0,a.jsx)(n.code,{children:"active"})]}),"\n",(0,a.jsxs)(n.li,{children:["And relate this record with the participant you created or updated in step\n2 via the ",(0,a.jsx)(n.code,{children:"participant_id"})," field."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Phew... that's the task. It's just a fictional example and things could be much\nmore straightforward, or much more complicated than this, but it's important to\nremember that if you can get to this level of ",(0,a.jsx)(n.strong,{children:"precision and granularity"})," in\nyour data entry process, a tool like OpenFn can automate this for you in a\nflash."]}),"\n",(0,a.jsx)(n.h2,{id:"translating-this-into-an-openfn-project",children:"Translating this into an OpenFn project"}),"\n",(0,a.jsx)(n.p,{children:'If you\'re streaming data in from CommCare and you\'ve got your Salesforce system\nall set up so that this data entry person can complete the above steps (are all\nthe objects and fields created? are the right fields marked as "unique" and set\nto be used as an "external id" in the Salesforce administration section? have\nyou turned on data forwarding in CommCare?) then it\'s time to turn them into an\nOpenFn project!'}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["A quick plug: ",(0,a.jsxs)(n.strong,{children:["Did you know that there's an\n",(0,a.jsx)(n.a,{href:"https://community.openfn.org",children:"OpenFn community forum"})]}),' where you can post\nstuff like the "steps" above and get help from other OpenFn users and staff\nconverting these steps into a real, working, OpenFn job?']}),(0,a.jsxs)(n.p,{children:["Well, you do know! Check it out at\n",(0,a.jsx)(n.a,{href:"https://community.openfn.org",children:"community.openfn.org"})]})]}),"\n",(0,a.jsx)(n.h3,{id:"create-a-salesforce-credential",children:"Create a Salesforce credential"}),"\n",(0,a.jsx)(n.p,{children:"We don't need a CommCare credential, since they'll send data to us. Create a\nSalesforce credential that will allow the OpenFn worker to log into your\nSalesforce system."}),"\n",(0,a.jsxs)(n.p,{children:["Read more about credentials ",(0,a.jsx)(n.a,{href:"/documentation/build/credentials",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"create-a-message-filter-trigger",children:"Create a message-filter trigger"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Select ",(0,a.jsx)(n.code,{children:"Message Filter"})," for the ",(0,a.jsx)(n.code,{children:"type"})]}),"\n",(0,a.jsxs)(n.li,{children:["Enter ",(0,a.jsx)(n.code,{children:'{"form":{"@name":"ART Adherence Self-Reporting Tool"}}'})," for the\n",(0,a.jsx)(n.code,{children:"inclusion criteria"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Read more about triggers ",(0,a.jsx)(n.a,{href:"/documentation/build/triggers",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"create-the-job",children:"Create the job"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Give it a name"}),"\n",(0,a.jsx)(n.li,{children:"Select the trigger you just created"}),"\n",(0,a.jsxs)(n.li,{children:["Select the ",(0,a.jsx)(n.code,{children:"salesforce"})," adaptor"]}),"\n",(0,a.jsx)(n.li,{children:"Select the credential you just created"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:'And convert the instructions above to "operations" by using the inline help\nprovided by the Salesforce adaptor:'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// Use upsert to create or update a participant based on their participant code.\nupsert(\n  'Participant__c',\n  'Participant_Code__c',\n  fields(\n    field(\n      'Participant_Code__c',\n      dataValue('form.participant_information.participant_id')\n    ),\n    field('Name__c', dataValue('form.participant_information.name')),\n    field('Sex__c', dataValue('form.participant_information.gender')),\n    field('CommCare_Case_ID__c', dataValue('form.case[@case_id]'))\n  )\n);\n\n// Then upsert a visit using the visit code.\nupsert(\n  'Visit__c',\n  'Visit_Code__c',\n  fields(\n    field('Visit_Code__c', dataValue('metadata.instanceID')),\n    field('Date__c', dataValue('form.visit_information.visit_date')),\n    field('Consented__c', dataValue('form.visit_information.consent_given')),\n    // Always set status to true\n    field('Test_Status__c', true),\n    // And related this visit to the participant we just created by their \"code\"\n    relationship(\n      'Participant__r',\n      'Participant_Code__c',\n      dataValue('form.participant_information.participant_id')\n    )\n  )\n);\n\n// And finally for EACH mediation listed, create a medication record with a status\neach(\n  merge(\n    dataPath('form.participant_information.current_medications[*]'),\n    fields(\n      field('pID', dataValue('form.participant_information.participant_id'))\n    )\n  ),\n  upsert(\n    'Medication_Tx__c',\n    'Medication_Tx_ID__c',\n    fields(\n      field(Medication_Tx_ID__c, state => {\n        // Here, inside the medications array we've \"scoped\" state so that\n        // state.data, for each item in the array, looks like this:\n        // { pID: 007, name: \"sasstra-zenica\", active: false }\n\n        // We will concatenate the participant ID with the medication name.\n        return state.data.pID + state.data.name;\n      }),\n      field('Generic_Name__c', dataValue('name')),\n      field('Status__c', dataValue('status')),\n      relationship('Participant__r', 'Participant_Code__c', dataValue('pID'))\n    )\n  )\n);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now, every time this job runs (which is every time a CommCare form is submitted)\nyour OpenFn worker will upsert a ",(0,a.jsx)(n.code,{children:"Participant"}),", upsert a ",(0,a.jsx)(n.code,{children:"Visit"}),", and upsert a\nwhole list of ",(0,a.jsx)(n.code,{children:"Medications"})," in Salesforce."]}),"\n",(0,a.jsx)(n.h2,{id:"whats-next",children:"What's next"}),"\n",(0,a.jsxs)(n.p,{children:['Well, in our little example you\'d turn the job "on" (setting it to on the\ninbound messages from CommCare) and let it run. Whenever there was a failure\n(maybe your Salesforce admin added a new required field on the\ncustom',(0,a.jsx)(n.code,{children:"Medication"})," object) you'd get an email and you'd have to come back to\nOpenFn to update your job, including that new field."]}),"\n",(0,a.jsxs)(n.p,{children:["If you're in the process of designing your CommCare and Salesforce systems at\nthe moment, this back-and-forth will be pretty common. Keep in mind that you\nwant as much simplicity as possible in those end-user systems because... well\nbecause ",(0,a.jsx)(n.em,{children:"humans"})," have the interact with them every day!"]}),"\n",(0,a.jsx)(n.p,{children:"So long as your processes are well defined, OpenFn can handle a bit of\ncomplexity (data cleaning, transformation, complex logical flows, etc.) but you\nshould never make sacrifices to the user experience in CommCare and\nSalesforce\u2014that's a quick way to lose adoption."}),"\n",(0,a.jsxs)(n.p,{children:["So, ideally, you've designed your workflows in CommCare and Salesforce to make\nyour users happy and get them the information they need to do their jobs well\nand ",(0,a.jsx)(n.em,{children:"then"})," you come back to OpenFn and spell out our data entry instructions\nlike we've done above."]}),"\n",(0,a.jsx)(n.h2,{id:"a-final-thought",children:"A final thought"}),"\n",(0,a.jsx)(n.p,{children:"The two most important resources you've got at your disposal if you're setting\nthis all up on your own are:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"this site (docs.openfn.org), and"}),"\n",(0,a.jsxs)(n.li,{children:["the ",(0,a.jsx)(n.a,{href:"https://community.openfn.org",children:"forum"})," (community.openfn.org)"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Read through the\n",(0,a.jsx)(n.a,{href:"/documentation/tutorials/tutorial",children:'"What is an integration"'}),",\n",(0,a.jsx)(n.a,{href:"/documentation/get-started/terminology",children:'"OpenFn Concepts"'}),", and\n",(0,a.jsx)(n.a,{href:"/documentation/build/workflows",children:'"Build"'})," sections if you're a thorough,\nbackground-first kind of learner. If you crave snippets and sample job code,\nhead directly to the ",(0,a.jsx)(n.a,{href:"/adaptors/library",children:"Job Library"})," to see how other OpenFn\nusers are creating their jobs."]}),"\n",(0,a.jsx)(n.p,{children:"Either way, keep the community posted on your progress in the forum\u2014you'll find\nlots of helpful folks willing to lend you a hand in your integration journey."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},95632:e=>{e.exports=JSON.parse('{"permalink":"/articles/2021/05/24/commcare-events","editUrl":"https://github.com/openfn/docs/edit/main/articles/2021-05-24-commcare-events.md","source":"@site/articles/2021-05-24-commcare-events.md","title":"Forms and Cases: CommCare and event-based integration","description":"This is a quick one, but I just got off an exciting call with an organization","date":"2021-05-24T00:00:00.000Z","tags":[{"inline":true,"label":"how-to","permalink":"/articles/tags/how-to"},{"inline":true,"label":"tips","permalink":"/articles/tags/tips"}],"readingTime":9.52,"hasTruncateMarker":true,"authors":[{"name":"Taylor Downs","title":"Founder & CEO","page":{"permalink":"/articles/authors/taylor"},"email":"taylor@openfn.org","socials":{"x":"https://x.com/taylordowns2000","github":"https://github.com/taylordowns2000"},"imageURL":"https://avatars.githubusercontent.com/taylordowns2000","key":"taylor"}],"frontMatter":{"layout":"post","title":"Forms and Cases: CommCare and event-based integration","authors":"taylor","tags":["how-to","tips"],"featured":true},"unlisted":false,"prevItem":{"title":"Wrapping my head around jobs","permalink":"/articles/2021/07/05/wrapping-my-head-around-jobs"},"nextItem":{"title":"Sync Like You Mean It: Thinking Through System \u201cSyncing\u201d Protocols","permalink":"/articles/2021/02/17/syncing-options"}}')}}]);