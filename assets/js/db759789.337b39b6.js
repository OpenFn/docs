"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[14712],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var i=o(96540);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},40662:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"jobs/limits","title":"Limits","description":"Both microservice and OpenFn.org (the iPaaS) have some pre-configured limits to","source":"@site/versioned_docs/version-legacy/jobs/limits.md","sourceDirName":"jobs","slug":"/jobs/limits","permalink":"/documentation/legacy/jobs/limits","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/versioned_docs/version-legacy/jobs/limits.md","tags":[],"version":"legacy","frontMatter":{"title":"Limits"},"sidebar":"docs","previous":{"title":"Exit Codes & Errors","permalink":"/documentation/legacy/jobs/errors"},"next":{"title":"Release Notes","permalink":"/documentation/legacy/release-notes"}}');var t=o(74848),s=o(28453);const r={title:"Limits"},a=void 0,l={},d=[{value:"NodeVM memory limits",id:"nodevm-memory-limits",level:2},{value:"Increase memory limit for an individual execution",id:"increase-memory-limit-for-an-individual-execution",level:3},{value:"Increase memory limit for all jobs on that machine",id:"increase-memory-limit-for-all-jobs-on-that-machine",level:3},{value:"Request body limit on inboxes",id:"request-body-limit-on-inboxes",level:2},{value:"Job state limits",id:"job-state-limits",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Both microservice and OpenFn.org (the iPaaS) have some pre-configured limits to\nensure smooth operation. Read below for a detailed explanation of those defaults\nand how to adjust the limits."}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.p,{children:"If you don't feel like reading much, here's the tl;dr:"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Don't send more than ",(0,t.jsx)(n.code,{children:"8MB"})," to the ",(0,t.jsx)(n.code,{children:"/inbox"})," API in a single request."]}),"\n",(0,t.jsxs)(n.li,{children:["Make sure your ",(0,t.jsx)(n.code,{children:"expression.js"})," and your ",(0,t.jsx)(n.code,{children:"state.json"})," don't total more than\n",(0,t.jsx)(n.code,{children:"10MB"})," when you ",(0,t.jsx)(n.em,{children:"start"})," or ",(0,t.jsx)(n.em,{children:"finish"})," a run."]}),"\n",(0,t.jsxs)(n.li,{children:["Keep memory usage below ",(0,t.jsx)(n.code,{children:"512MB"})," ",(0,t.jsx)(n.em,{children:"during"})," the run."]}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"nodevm-memory-limits",children:"NodeVM memory limits"}),"\n",(0,t.jsxs)(n.p,{children:["The default memory limit for a Node process is ",(0,t.jsx)(n.code,{children:"512MB"})," and unless you've\ncustomized it for use on core or have agreed to a high-memory plan on\nOpenFn.org, job runs will be killed by Node (",(0,t.jsx)(n.code,{children:"JavaScript heap out of memory"}),")\nwhen they reach that threshold."]}),"\n",(0,t.jsx)(n.h3,{id:"increase-memory-limit-for-an-individual-execution",children:"Increase memory limit for an individual execution"}),"\n",(0,t.jsxs)(n.p,{children:["For a ",(0,t.jsx)(n.code,{children:"1GB"})," limit for an individual job, use:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"node --max-old-space-size=1024 core execute ...arguments\n"})}),"\n",(0,t.jsx)(n.h3,{id:"increase-memory-limit-for-all-jobs-on-that-machine",children:"Increase memory limit for all jobs on that machine"}),"\n",(0,t.jsxs)(n.p,{children:["For a ",(0,t.jsx)(n.code,{children:"4GB"})," limit for all jobs, set an environment variable with:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"export NODE_OPTIONS=--max_old_space_size=4096\n"})}),"\n",(0,t.jsx)(n.h2,{id:"request-body-limit-on-inboxes",children:"Request body limit on inboxes"}),"\n",(0,t.jsxs)(n.p,{children:["The maximum size of the JSON body accepted on the ",(0,t.jsx)(n.code,{children:"/inbox/your-uuid"})," endpoint is\n",(0,t.jsx)(n.code,{children:"8MB"}),". Note that payloads should be kept below this limit in order to ensure\nthat ",(0,t.jsx)(n.a,{href:"#job-state-limits",children:"Job state limits"})," are not hit when a subsequent job run\nis executed."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If you're using OpenFn for bulk data processing/periodic batch jobs, you can\neither reconfigure these limits on your microservice deployment or contact\n",(0,t.jsx)(n.a,{href:"mailto:enterprise@openfn.org",children:"enterprise@openfn.org"})," to have special provisions made for your OpenFn.org\nproject."]})}),"\n",(0,t.jsx)(n.h2,{id:"job-state-limits",children:"Job state limits"}),"\n",(0,t.jsxs)(n.p,{children:["When a job is to be sent for processing the total size of all job artifacts\n(your job ",(0,t.jsx)(n.code,{children:"expression"})," and the initial ",(0,t.jsx)(n.code,{children:"state"}),") cannot exceed ",(0,t.jsx)(n.code,{children:"10MB"}),". In other\nwords, your code (",(0,t.jsx)(n.code,{children:"expression.js"}),") plus your data and configuration\n(",(0,t.jsx)(n.code,{children:"state.json"}),") cannot exceed ",(0,t.jsx)(n.code,{children:"10MB"})," in total."]}),"\n",(0,t.jsxs)(n.p,{children:["Similarly, when state is saved to cloud storage/disk ",(0,t.jsx)(n.em,{children:"after"})," execution there is\na ",(0,t.jsx)(n.code,{children:"10MB"})," limit to the size of a job's final ",(0,t.jsx)(n.code,{children:"state"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["If you're dealing with large amounts of data you've got to (a) keep your total\nmemory use below ",(0,t.jsx)(n.code,{children:"512MB"})," during execution and (b) clean up state so that\nwhatever you're passing to the next job, whether via FLOW or via saved state for\na CRON job, remains below ",(0,t.jsx)(n.code,{children:"10MB"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Sometimes, this necessitates streaming data from A -> B in the same job. Other\ntimes it will necessitate storing data as local variables and then posting data\nto your inbox in chunks before cleaning up state."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);