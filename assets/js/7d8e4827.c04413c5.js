"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[64534],{42388:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(58168),a=(r(96540),r(15680));const o={title:"testing developer readme",id:"testing-readme",keywords:["adaptor","readme","testing"]},i="testing Adaptor developer README.md",p={unversionedId:"packages/testing-readme",id:"packages/testing-readme",title:"testing developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/testing",source:"@site/adaptors/packages/testing-readme.md",sourceDirName:"packages",slug:"/packages/testing-readme",permalink:"/adaptors/packages/testing-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"testing developer readme",id:"testing-readme",keywords:["adaptor","readme","testing"]},sidebar:"adaptors",previous:{title:"testing changelog",permalink:"/adaptors/packages/testing-changelog"},next:{title:"twilio@0.5.1",permalink:"/adaptors/packages/twilio-docs"}},s={},c=[],l={toc:c},d="wrapper";function g(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,n.A)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"testing-adaptor-developer-readmemd"},"testing Adaptor developer README.md"),(0,a.yg)("p",null,"Source: ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/testing"},"https://github.com/OpenFn/adaptors/tree/main/packages/testing")),(0,a.yg)("h1",{id:"language-testing"},"language-testing"),(0,a.yg)("p",null,"This is a test adaptor for OpenFn."),(0,a.yg)("p",null,"It is used to test automation and deployment in the adaptors monorepo."),(0,a.yg)("p",null,"It is not intended for public use."))}g.isMDXComponent=!0},15680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>m});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,m=d["".concat(s,".").concat(u)]||d[u]||g[u]||o;return r?n.createElement(m,i(i({ref:t},l),{},{components:r})):n.createElement(m,i({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"}}]);