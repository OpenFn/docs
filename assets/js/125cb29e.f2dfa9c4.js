"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[2928],{28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>i});var s=a(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}},82516:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"library/jobs/auto/Asana-test-2024-07-29","title":"Asana-test","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Asana-test-2024-07-29.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Asana-test-2024-07-29","permalink":"/adaptors/library/jobs/auto/Asana-test-2024-07-29","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Asana-test","sidebar_label":"Asana-test","id":"Asana-test-2024-07-29","keywords":["library","job","expression","asana"]},"sidebar":"adaptors","previous":{"title":"Configuration","permalink":"/adaptors/packages/asana-configuration-schema"},"next":{"title":"Changelog","permalink":"/adaptors/packages/asana-changelog"}}');var t=a(74848),r=a(28453);const o={title:"Asana-test",sidebar_label:"Asana-test",id:"Asana-test-2024-07-29",keywords:["library","job","expression","asana"]},i=void 0,l={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,t.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Name: Asana-test"}),"\n",(0,t.jsxs)(n.li,{children:["Adaptor: ",(0,t.jsx)(n.a,{href:"https://www.github.com/openfn/language-asana",children:(0,t.jsx)(n.code,{children:"@openfn/language-asana"})})]}),"\n",(0,t.jsxs)(n.li,{children:["Adaptor Version: ",(0,t.jsx)(n.a,{href:"https://www.github.com/openfn/language-asana/releases/tag/v2.1.7",children:(0,t.jsx)(n.code,{children:"v2.1.7"})})]}),"\n",(0,t.jsx)(n.li,{children:"Created 12 months ago"}),"\n",(0,t.jsx)(n.li,{children:"Updated 12 months ago"}),"\n",(0,t.jsxs)(n.li,{children:["Score: ",(0,t.jsx)("b",{children:"0"})," (an ",(0,t.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,t.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'/* eslint-disable no-undef */\n// Your job goes here.\ngetTasks("11989019982662", {\n   opt_fields: "name",\n   });\nfn(state => {\n  console.log({ state });\n  return state;\n});\n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);