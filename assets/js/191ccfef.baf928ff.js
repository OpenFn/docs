"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[74067],{6788:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"mysql","title":"MySQL Adaptor","description":"About MySQL","source":"@site/adaptors/mysql.md","sourceDirName":".","slug":"/mysql","permalink":"/adaptors/mysql","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"MySQL Adaptor"},"sidebar":"adaptors","previous":{"title":"README.md","permalink":"/adaptors/packages/mtn-momo-readme"},"next":{"title":"Functions","permalink":"/adaptors/packages/mysql-docs"}}');var o=t(74848),s=t(28453);const i={title:"MySQL Adaptor"},r=void 0,c={},d=[{value:"About MySQL",id:"about-mysql",level:2},{value:"Integration Options",id:"integration-options",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Helpful Links",id:"helpful-links",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"about-mysql",children:"About MySQL"}),"\n",(0,o.jsx)(n.p,{children:"MySQL is a free and open-source relational database management system. It can be accessed and manipulated using SQL to extract or load data."}),"\n",(0,o.jsx)(n.h2,{id:"integration-options",children:"Integration Options"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"mysql"})," adaptor provides direct database connections for accessing data and executing SQL and standard database operations. See ",(0,o.jsx)(n.a,{href:"/adaptors/packages/mysql-docs",children:"functions"})," for more on how to use this adaptor."]}),"\n",(0,o.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,o.jsxs)(n.p,{children:["See the ",(0,o.jsx)(n.a,{href:"https://dev.mysql.com/doc/",children:"MySQL docs"})," for the latest on supported authentication methods. When integrating with a MySQL database via OpenFn, you authenticate via SSH using authorized database credentials. See this adaptor's ",(0,o.jsx)(n.a,{href:"/adaptors/packages/mysql-configuration-schema",children:"configuration docs"})," for more on the required authentication parameters."]}),"\n",(0,o.jsxs)(n.p,{children:["See platform docs on ",(0,o.jsx)(n.a,{href:"/documentation/manage-projects/manage-credentials",children:"managing credentials"})," for how to configure a credential in OpenFn. If working locally or if using a Raw JSON credential type, then your configuration will look something like this:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'{\n  "host": "some-host-url.compute-1.amazonaws.com",\n  "database": "demo-db",\n  "user": "admin-demo",\n  "password": "@super(!)Secretpass"\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"helpful-links",children:"Helpful Links"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://dev.mysql.com/doc/",children:"MySQL documentation"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var a=t(96540);const o={},s=a.createContext(o);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);