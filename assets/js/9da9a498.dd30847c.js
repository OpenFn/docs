"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[76206],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},70249:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"library/jobs/auto/WF3-2-Bulk-upsert-Person-Visits-2023-05-19","title":"WF3-2 Bulk upsert Person Visits","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/WF3-2-Bulk-upsert-Person-Visits-2023-05-19.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/WF3-2-Bulk-upsert-Person-Visits-2023-05-19","permalink":"/adaptors/library/jobs/auto/WF3-2-Bulk-upsert-Person-Visits-2023-05-19","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"WF3-2 Bulk upsert Person Visits","sidebar_label":"WF3-2 Bulk upsert Person Visits","id":"WF3-2-Bulk-upsert-Person-Visits-2023-05-19","keywords":["library","job","expression","salesforce","bulk","dataValue","join","map","query","JSON"]},"sidebar":"adaptors","previous":{"title":"WF4-2 Bulk upsert Services","permalink":"/adaptors/library/jobs/auto/WF4-2-Bulk-upsert-Services-2023-05-19"},"next":{"title":"WF2-2 Bulk upsert Persons","permalink":"/adaptors/library/jobs/auto/WF2-2-Bulk-upsert-Persons-2023-05-19"}}');var i=t(74848),s=t(28453);const o={title:"WF3-2 Bulk upsert Person Visits",sidebar_label:"WF3-2 Bulk upsert Person Visits",id:"WF3-2-Bulk-upsert-Person-Visits-2023-05-19",keywords:["library","job","expression","salesforce","bulk","dataValue","join","map","query","JSON"]},a=void 0,_={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,i.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Name: WF3-2 Bulk upsert Person Visits"}),"\n",(0,i.jsxs)(n.li,{children:["Adaptor: ",(0,i.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,i.jsx)(n.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,i.jsxs)(n.li,{children:["Adaptor Version: ",(0,i.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,i.jsx)(n.code,{children:"latest"})})]}),"\n",(0,i.jsx)(n.li,{children:"Created over 2 years ago"}),"\n",(0,i.jsx)(n.li,{children:"Updated 7 months ago"}),"\n",(0,i.jsxs)(n.li,{children:["Score: ",(0,i.jsx)("b",{children:"0"})," (an ",(0,i.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"bulk"}),", ",(0,i.jsx)(n.code,{children:"dataValue"}),", ",(0,i.jsx)(n.code,{children:"join"}),", ",(0,i.jsx)(n.code,{children:"map"}),", ",(0,i.jsx)(n.code,{children:"query"}),", ",(0,i.jsx)(n.code,{children:"JSON"})]}),"\n",(0,i.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"fn(state => {\n  if (state.payloads.length == 0) return { ...state, personVisits: [] };\n\n  const owner_ids = state.payloads.map(data => data.properties.owner_id);\n  const uniq_owner_ids = [...new Set(owner_ids)];\n\n  return { ...state, uniq_owner_ids };\n});\n\nfn(state => {\n  if (state.payloads.length == 0) return state;\n  return query(\n    `SELECT CommCare_User_ID__c, Id village, Parent_Geographic_Area__c area, Parent_Geographic_Area__r.Name name, Parent_Geographic_Area__r.Parent_Geographic_Area__c catchment FROM Location__c WHERE CommCare_User_ID__c IN ('${state.uniq_owner_ids.join(\n      \"','\"\n    )}') GROUP BY Id, CommCare_User_ID__c, Parent_Geographic_Area__c, Parent_Geographic_Area__r.Name, Parent_Geographic_Area__r.Parent_Geographic_Area__c`\n  )(state);\n});\n\nfn(state => {\n  if (state.payloads.length == 0) return state;\n  const [reference] = state.references;\n\n  \n // console.log(JSON.stringify(reference, null, 2));\n  const records = reference.records;\n  const fetchReference = (owner_id, arg) => {\n    const result =\n      records && records.length > 0\n        ? records.filter(record => record.CommCare_User_ID__c === owner_id)\n        : 0;\n\n    return result.length > 0 ? result[0][arg] : undefined;\n  };\n  const cleanChoice = choice => {\n    if (choice) {\n      return choice.charAt(0).toUpperCase() + choice.slice(1).replace('_', ' ');\n    } else {\n      return '';\n    }\n  };\n\n  const handleMultiSelect = multiField => {\n    return multiField\n      ? multiField\n          .replace(/ /gi, ';')\n          .toLowerCase()\n          .split(';')\n          .map(value => {\n            return (\n              value.charAt(0).toUpperCase() + value.slice(1).replace('_', ' ')\n            );\n          })\n          .join(';')\n      : '';\n  };\n\n  const handleMultiSelectOriginal = multiField => {\n    return multiField\n      ? multiField\n          .replace(/ /gi, ';')\n          .toLowerCase()\n          .split(';')\n          .map(value => {\n            return value;\n          })\n          .join(';')\n      : '';\n  };\n\n  const pregDangerMap = {\n    Vaginal_Bleeding: 'Vaginal Bleeding',\n    Water_Breaks: 'Water Breaks before Time of Delivery',\n    Prolonged_Labour: 'Prolonged Labour over 12 Hours',\n    Convulsions: 'Convulsions or Fits',\n    Abdominal_Pain: 'Severe Abdominal Pain before Delivery',\n    High_Fever: 'High Fever',\n    Low_Baby_Movement: 'Feeling the Baby move less or not at all',\n    Swelling: 'Swelling of Face and Hands',\n    Severe_Headache: 'Severe or Continuous Headache for more than 12 hours',\n    Severe_Vomiting: 'Severe or Continuous Vomiting',\n    none: 'None',\n  };\n\n  const counselMap = {\n    anc_visits: 'ANC Visits',\n    early_initiation_of_anc_less_than_3_months:\n      'Early initiation of ANC (less than 3 months)',\n    completing_recomended_anc_visits: 'Completing recomended ANC visits',\n    danger_signs: 'Danger signs',\n    skilled_birth: 'Skilled birth',\n    immunization: 'Immunization',\n    individual_birth_plan: 'Individual Birth Plan',\n    emergency_preparedness: 'Emergency preparedness',\n    childcare_and_affection: 'Childcare and affection',\n    nutrition_counseling: 'Nutrition counseling',\n    growth_monitoring: 'Growth monitoring',\n    exclusive_breastfeeding: 'Exclusive breastfeeding',\n    complementary_feeding: 'Complementary feeding',\n    sleeping_under_llitn: 'Sleeping under LLITN',\n    knowing_hiv_status: 'Knowing HIV status',\n    indoor_pollution: 'Indoor pollution',\n    personal_hygiene: 'Personal Hygiene',\n    safe_drinking_water: 'Safe drinking water',\n    safe_disposal_of_human_waste: 'Safe disposal of human waste',\n  };\n\n  const serviceMap = {\n    Scheduled_PSC_Apt: 'Scheduled PSC Apt',\n    Adverse_Drug_Reaction_Side_Effect: 'Adverse Drug Reaction/Side Effect',\n    Malnutrition: 'Malnutrition',\n    Malaria: 'Malaria',\n    TB: 'TB',\n    Treatment_for_Other_OIs: 'Treatment for other Ols',\n    ARI: 'ARI',\n    Anemia: 'Anemia',\n    Diarrhea: 'Diarrhea',\n    Pregnancy_Care: 'Pregnancy Care (ANC)',\n    Family_Planning: 'Family Planning (FP)',\n    Preconception_Counseling: 'Preconception Counseling',\n    Injury: 'Injury',\n    Other: 'Other',\n  };\n\n  const reasonMap = {\n    lack_of_access_to_fp_information: 'Lack of access to FP information',\n    no_access_to_fp_services_hospitals:\n      'Lack of hospitals or places where FP services can be accessed',\n    not_willing_to_use_fp_due_to_negative_effects_myths_and_misconceptions:\n      'Myths and misconceptions',\n    barriers_at_service_delivery_points: 'Barriers at service delivery points',\n    pregnant: 'The client is pregnant',\n    intentions_of_getting_pregnant: 'Intentions of getting pregnant',\n    not_sexually_active: 'The client is not sexually active',\n    other_barriers_culture_male_partners_parents_etc:\n      'Other barriers (culture, male partners, parents, etc)',\n  };\n\n  const milestoneTypeMap = {\n    cognitive_delays_learning_difficulties:\n      'Cognitive Delays Learning Difficulties',\n    motor_delays: 'Motor Delays',\n    speech_and_language_delay: 'Delay Speech and Language Delay',\n    social_and_emotional: 'Social and emotional',\n  };\n\n  const milestoneMap = {\n    movement: 'Movement',\n    hearing: 'Hearing',\n    communication: 'Communication',\n    seeing: 'Seeing',\n    cognitive_delays: 'Cognitive Delays',\n    play: 'Play',\n  };\n  const nutritionMap = {\n    severe: 'Severely Malnourished',\n    moderate: 'Moderately Malnourished',\n    normal: 'Normal',\n  };\n\n  const fpMethodMap = {\n    male_condoms: 'Male condoms',\n    female_condoms: 'Female condoms',\n    pop: 'POP',\n    coc: 'COC',\n    emergency_pills: 'Emergency pills',\n    none: 'None',\n    //HMN -12/01/2023-\n    //adding normalization for the family_planning_method to Family_Planning_Method__c\n    iucd: 'IUCD',\n    condoms: 'Condoms',\n    depo: 'Depo',\n    implant: 'Implant',\n    injection: 'Injection',\n    pills: 'Pills',\n    traditional: 'Traditional',\n  };\n\n  const symptomsMap = {\n    convulsions: 'Convulsions',\n    not_able_to_eatdrink: 'Not able to drink or feed at all',\n    vomits_everything: 'Vomits everything',\n    'chest_in-drawing': 'Chest in - drawing',\n    unusually_sleepyunconscious: 'Unusually sleepy or unconscious',\n    swelling_of_both_feet: 'Swelling of both feet',\n    none: 'None',\n  };\n\n  const supervisorMap = {\n    community_health_nurse: 'Community_health_nurse',\n    chw_supervisor: 'CHW_supervisor',\n    chewschas: 'Chewschas',\n    other: 'Other',\n    none: 'None',\n  };\n\n  const treatmentDistributionMap = {\n    ors_205gltr_sachets: 'ORS (20.5h/ltr): Sachets',\n    acts_6s: 'ACTs (6s)',\n    acts_12s: 'ACTs (12s)',\n    acts_18s: 'ACTs (18s)',\n    acts_24s: 'ACTs (24s)',\n    albendazole_abz_tabs: 'Albendazole (ABZ): Tabs',\n    paracetamol_tabs: 'Tetracycline Eye Ointment (TEO): 1%:tube',\n    tetracycline_eye_ointment_teo_1_tube:\n      'Tetracycline Eye Ointment (TEO): 1%:tube',\n    amoxycillin: 'Amoxycillin (125mg/5mls: Bottle',\n    none: 'None',\n  };\n\n  const childDangerSignsMap = {\n    none: 'None',\n    Poor_Breastfeeding: 'Poor Breastfeeding',\n    not_able_to_feed_since_birth_or_stopped_feeding_well:\n      'Not able to feed since birth, or stopped feeding well',\n    not_able_to_breastfeed: 'Not able to breastfeed',\n    Fever: 'Fever',\n    very_low_temperature: 'Very low temperature (35.4 C or less)',\n    shivering: 'Shivering',\n    Fast_Breathing: 'Fast Breathing',\n    Very_Sleepy: 'Very Sleepy',\n    Convulsions_and_Fits: 'Convulsions and Fits',\n    only_moves_when_stimulated_or_does_not_move_even_on_stimulation:\n      'Only moves when stimulated, or does not move even on stimulation',\n    yellow_solebaby_body_turning_yellow_especially_eyes_palms_soles:\n      'Yellow sole(Baby body turning yellow especially eyes, palms,soles)',\n    bleeding_from_the_umbilical_stump: 'Bleeding from the umbilical stump',\n    signs_of_local_infection_umbilicus_is_red_or_draining_pus_skin_boils_or_eye:\n      'Signs of local infection: umbilicus is red or draining pus, skin boils, or eyes draining pus',\n    weight_chart_using_color_coded_scales_if_red_or_yellowweight_below_25kg_or_:\n      'Weight chart using color coded scales if RED or YELLOW(Weight below 2.5kg or born less than 36 weeks of age)',\n    unable_to_cry: 'Unable to cry',\n    cyanosis: 'Cyanosis',\n    bulging_fontanelle: 'Bulging fontanelle',\n  };\n\n  return {\n    ...state,\n    counselMap,\n    serviceMap,\n    reasonMap,\n    milestoneTypeMap,\n    milestoneMap,\n    nutritionMap,\n    pregDangerMap,\n    fpMethodMap,\n    symptomsMap,\n    supervisorMap,\n    treatmentDistributionMap,\n    childDangerSignsMap,\n    fetchReference,\n    cleanChoice,\n    handleMultiSelect,\n    handleMultiSelectOriginal,\n  };\n});\n\nfn(state => {\n  if (state.payloads.length == 0) return state;\n  const {\n    counselMap,\n    serviceMap,\n    reasonMap,\n    milestoneTypeMap,\n    milestoneMap,\n    nutritionMap,\n    pregDangerMap,\n    fpMethodMap,\n    symptomsMap,\n    supervisorMap,\n    treatmentDistributionMap,\n    childDangerSignsMap,\n    fetchReference,\n    cleanChoice,\n    handleMultiSelect,\n    handleMultiSelectOriginal,\n  } = state;\n\n  const personVisits = state.payloads\n    //HMN 30/06/2023 Allow test user to post\n    /*\n    .filter(\n      p =>\n        p.properties.username !== 'test.2021' &&\n        p.properties.test_user !== 'Yes'\n    )*/\n    .map(p => {\n      // commCareVisitID\n      const commCareCase_id = p.case_id;\n      const dateVisit = p.properties.date_opened;\n      const commCareVisitID = commCareCase_id + '_' + dateVisit;\n\n      // personsSymptoms\n      const psCheck = p.properties.symptoms_check_other;\n      const psValue =\n        psCheck && psCheck !== ''\n          ? psCheck\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return symptomsMap[value] || value;\n              })\n          : undefined;\n      const personsSymptoms = psValue ? psValue.join(';') : undefined;\n\n      // familyPlanningMethod\n      const fpmStatus = p.properties.family_planning_method;\n      const fpmValue =\n        fpmStatus && fpmStatus !== ''\n          ? fpmStatus\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return fpMethodMap[value] || value;\n              })\n          : undefined;\n      const familyPlanningMethod = fpmValue ? fpmValue.join(';') : undefined;\n\n      // fpMethodDistributed\n      const fpmdStatus = p.properties.FP_commodity;\n      const fpmdValue =\n        fpmdStatus && fpmdStatus !== ''\n          ? fpmdStatus\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return fpMethodMap[value] || value;\n              })\n          : undefined;\n      const fpMethodDistributed = fpmdValue ? fpmdValue.join(';') : undefined;\n\n      // reasonForNotTakingFPMethod\n      const rfntStatus = p.properties.No_FPmethod_reason;\n      const rfntValue =\n        rfntStatus && rfntStatus !== ''\n          ? rfntStatus\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return reasonMap[value] || value;\n              })\n          : undefined;\n      const reasonForNotTakingFPMethod = rfntValue\n        ? rfntValue.join(';')\n        : undefined;\n\n      // clientCounselledOnC\n      const ccocChoices =\n        p.properties.counsel_topic || p.properties.counsel_topic;\n      const ccocVhoiceGroups = ccocChoices ? ccocChoices.split(' ') : null;\n      const clientCounselledOnC = ccocVhoiceGroups\n        ? ccocVhoiceGroups\n            .map(cg => {\n              return counselMap[cg];\n            })\n            .join(';')\n        : ccocVhoiceGroups;\n\n      // treatmentDistributionC\n      //const tdcStatus = p.form.treatment_and_tracking.distribution.distributed_treatments;\n      const tdcStatus = p.properties.distributed_treatments;\n      const tdcValue =\n        tdcStatus && tdcStatus !== ''\n          ? tdcStatus\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return treatmentDistributionMap[value] || value;\n              })\n          : undefined;\n      const treatmentDistributionC = tdcValue ? tdcValue.join(';') : undefined;\n\n      // chronicIllnesC\n      const ciChoice =\n        p.properties.please_specify_which_chronic_illness_the_person_has;\n      const ciChoice2 = handleMultiSelect(ciChoice);\n      const chronicIllnesC = ciChoice2 ? ciChoice2.replace(/_/g, ' ') : '';\n\n      // supervisorVisit\n      const svCheck = p.properties.supervisor_visit;\n      const svValue =\n        svCheck && svCheck !== ''\n          ? svCheck\n              .replace(/ /gi, ';')\n              .split(';')\n              .map(value => {\n                return supervisorMap[value] || value;\n              })\n          : undefined;\n      const supervisorVisit = svValue ? svValue.join(';') : undefined;\n      const recordType = p.properties.RecordType;\n\n      return {\n        CommCare_ID__c: p.case_id, //'visit' case_id\n        'Person__r.CommCare_ID__c':\n          p.indices.parent.case_id || p.properties.parent_id,\n        CommCare_Visit_ID__c: commCareVisitID,\n        Date__c: p.properties.Date,\n        Birth_Status__c: p.properties.child_status,\n        Catchment__c: fetchReference(p.properties.owner_id, 'catchment'),\n        //HMN Accommodating Record Type in Visit\n        'RecordType.Name': recordType === 'Unborn' || recordType === 'Child' \n          ? 'Child Visit' \n          :recordType === 'Youth'\n          ? 'Youth Visit'\n          :recordType === 'Male Adult'\n          ? 'Adult Male Visit'\n          : recordType === 'Female Adult'\n          ? 'Adult Female Visit'\n          :undefined,\n        Use_mosquito_net__c: cleanChoice(p.properties.sleep_under_net),\n        Individual_birth_plan_counselling__c:\n          p.properties.individual_birth_plan,\n        Reason_for_not_taking_a_pregnancy_test__c: p.properties.No_Preg_Test\n          ? p.properties.No_Preg_Test.toString().replace(/_/g, ' ')\n          : undefined,\n        Pregnancy_danger_signs__c: p.properties.No_Preg_Test\n          ? pregDangerMap[p.properties.No_Preg_Test]\n          : undefined,\n        Child_Danger_Signs__c: p.properties.Other_Danger_Signs\n          ? childDangerSignsMap[p.properties.Other_Danger_Signs]\n          : undefined,\n        Current_Malaria_Status__c: cleanChoice(\n          p.properties.malaria_test_results\n        ),\n        Malaria_Home_Test__c: p.properties.malaria_test_date,\n        Malaria_Home_Treatment__c: p.properties.malaria_test_date,\n        Persons_symptoms__c: personsSymptoms,\n        Active_in_Support_Group__c: p.properties.Active_in_Support_Group,\n        HAWI_Defaulter__c: p.properties.default === 'Yes' ? true : false,\n        Date_of_Default__c: p.properties.date_of_default,\n        Persons_temperature__c: p.properties.temperature,\n        Days_since_illness_start__c: p.properties.duration_of_sickness,\n        Newborn_visited_48_hours_of_delivery__c:\n          p.properties.newborn_visited_48_hours_of_delivery,\n        Newborn_visited_by_a_CHW_within_6_days__c:\n          p.properties.visit_6_days_from_delivery,\n        Current_Malaria_Status__c: p.properties.malaria_test_results,\n        Malaria_test__c: cleanChoice(p.properties.malaria_test),\n        Fever__c: cleanChoice(p.properties.symptoms_check_fever),\n        Cough__c: cleanChoice(p.properties.symptoms_check_cough),\n        Diarrhoea__c: cleanChoice(p.properties.symptoms_check_diarrhea),\n        TB_patients_therapy_observed__c: p.properties.observed_tb_therapy,\n        Injuries_or_wounds__c: p.properties.wounds_or_injuries,\n        Currently_on_ART_s__c: p.properties.ART,\n        // ART_Regimen__c: () => {\n        // const choice = dataValue(\n        //  'properties.ARVs;\n        // return cleanChoice(choice);\n        // },\n        Immediate_Breastfeeding__c: p.properties.Breastfeeding_Delivery,\n        Exclusive_Breastfeeding__c: p.properties.Exclusive_Breastfeeding,\n        Counselled_on_Exclusive_Breastfeeding__c: p.properties.counseling,\n        LMP__c: p.properties.when_was_your_lmp,\n        Family_Planning__c: cleanChoice(p.properties.family_planning),\n        Family_Planning_Method__c: p.properties.family_planning_method,\n        Family_Planning_Method__c: familyPlanningMethod,\n        FP_Method_Distributed__c: fpMethodDistributed,\n        Reasons_for_not_taking_FP_method__c: reasonForNotTakingFPMethod,\n        Pregnant__c: p.properties.Pregnant === 'Yes' ? true : false,\n        Counselled_on_FP_Methods__c: cleanChoice(\n          p.properties.CounselledFP_methods\n        ),\n        Client_counselled_on__c: clientCounselledOnC,\n        Client_provided_with_FP__c: cleanChoice(\n          p.properties[\n            'was_the_woman_15-49yrs_provided_with_family_planning_commodities_by_chv'\n          ]\n        ),\n        Newborn_visited_48_hours_of_delivery__c:\n          p.properties.newborn_visited_48_hours_of_delivery,\n        Mother_visit_counselling__c: cleanChoice(\n          p.properties.did_you_consel_the_mother_on1\n        ),\n        mother_visited_48_hours_of_the_delivery__c:\n          p.properties.visit_mother_48,\n        Newborn_visit_counselling__c: cleanChoice(\n          p.properties.did_you_consel_the_mother_on2\n        ),\n        Know_HIV_status__c: cleanChoice(p.properties.known_hiv_status),\n        HIV_Status__c: p.properties.hiv_status,\n        Treatment_Distribution__c: treatmentDistributionC,\n        // QUESTION: Field name not found : Current_Weight__c\n        // Current_Weight__c: p.properties.Current_Weight,\n        Current_Height__c: p.properties.current_height,\n        Current_MUAC__c: p.properties.MUAC,\n        Food_groups_3_times_a_day__c: p.properties.food_groups,\n        Nutrition_Case_Managed__c: p.properties.nutrition_case_managed,\n        Nutrition_Danger_Signs__c: handleMultiSelectOriginal(\n          p.properties.nutrition_danger_signs\n        ),\n        Why_was_nutrition_case_not_managed__c:\n          p.properties.nutrition_case_not_managed_why,\n        Community_Nutrition_Treatment__c:\n          p.properties.nutrition_treatment_severe,\n        Community_Nutrition_Treatment__c:\n          p.properties.nutrition_treatment_moderate,\n        Why_was_nutrition_treatment_not_given__c:\n          p.properties.nutrition_treatment_not_given,\n        Current_Nutrition_Status__c: p.properties.Nutrition_Status\n          ? nutritionMap[p.properties.Nutrition_Status]\n          : undefined,\n        Default_on_TB_treatment__c: cleanChoice(\n          p.properties.default_tb_treatment\n        ),\n        Received_pregnancy_test__c: cleanChoice(\n          p.properties.did_you_adminsiter_a_pregnancy_test\n        ),\n        Pregnancy_test_result__c: cleanChoice(\n          p.properties.pregnancy_test_result\n        ),\n        Chronic_illness__c: chronicIllnesC,\n        Childs_breath_per_minute__c: p.properties.breaths_per_minuite,\n        Child_chest_in_drawing__c: p.properties.Child_chest_in_drawing_c,\n        Caregiver_counseled_on_delayed_milestone__c:\n          p.properties.did_you_counsel_the_caregiver_on_delayed_milestones,\n        Delayed_Milestone__c:\n          p.properties.does_the_child_has_a_delayed_milestone,\n        Child_has_2_or_more_play_items__c:\n          p.properties.does_the_child_has_2_or_more_play_items_at_home,\n        Child_has_3_more_picture_books__c:\n          p.properties.does_the_child_has_3_or_more_picture_books,\n        Delayed_Milestones_Counselled_On__c: p.properties\n          .which_delayed_milestone_area_did_you_counsel_the_caregiver_on\n          ? milestoneMap[\n              p.properties\n                .which_delayed_milestone_area_did_you_counsel_the_caregiver_on\n            ]\n          : undefined,\n        Delayed_Milestone_Type__c: p.properties.which_delayed_milestone\n          ? milestoneMap[p.properties.which_delayed_milestone]\n          : undefined,\n        Caretaker_trained_in_muac__c: p.properties.mother_trained_muac,\n        Caretaker_screened_for_muac_this__c:\n          p.properties.mother_screened_child_muac,\n        Caretaker_muac_findings__c:\n          p.properties.mother_screened_child_muac_result,\n        Caretaker_action_after_muac_screening__c:\n          p.properties.mother_screened_muac_action,\n        of_Caretaker_MUAC_screenings__c: p.properties.mother_nb_screening,\n        Pulse_Oximeter__c: p.properties.pulse_oximeter_available,\n        Heart_Rate_Pulse_Oximeter__c: p.properties.heart_rate_pulse_oximeter,\n        Oxygen_Concentration_Pulse_Oximeter__c:\n          p.properties.oxygen_concentration,\n        Can_child_drink__c: p.properties.can_child_drink,\n        Antibiotic_provided_for_fast_breathing__c:\n          p.properties.antibiotic_fast_breathing,\n        Antibiotic_provided_for_chest_indrawing__c:\n          p.properties.antibiotic_chest_indrawing,\n        Supervisor_Visit__c: supervisorVisit,\n        //HMN commented this one due to error \"Error: InvalidBatch : Field name not found : Visit_Closed_Date__c\"\n        //Visit_Closed_Date__c: p.properties.date_closed,\n        //29/06/2023 Added Malaria Vaccine mapping \n        malaria_vaccine_received__c:\n          p.properties.malaria_vaccine_received,\n        rts_s_1_date__c:\n          p.properties.rts_s_1_date,\n        rts_s_2_date__c:\n          p.properties.rts_s_2_date, \n        rts_s_3_date__c:\n          p.properties.rts_s_3_date, \n        rts_s_4_date__c:\n          p.properties.rts_s_4_date, \n          \n          //HMN 29/06/2023\n      };\n    });\n\n  personVisits.forEach(person => {\n    Object.entries(person).forEach(([key, value]) => {\n      if (value === '' || value === null) person[key] = undefined;\n    });\n  });\n\n  // JSON logging of records\n  //HMN debugger 19/10/2023\n //  console.log(JSON.stringify(personVisits, null, 2));\n\n  return { ...state, personVisits };\n});\n\nbulk(\n  'Person_visit__c',\n  'upsert',\n  {\n    extIdField: 'CommCare_ID__c',\n    failOnError: true,\n    allowNoOp: true,\n  },\n  state => {\n    console.log('Bulk upserting person visit...');\n    return state.personVisits;\n  }\n);\n\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);