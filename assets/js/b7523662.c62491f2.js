"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[32976],{16656:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"build/workflows-api","title":"Workflows API","description":"The Workflows API allows you to programmatically create and modify Workflows.","source":"@site/docs/build/workflows-api.md","sourceDirName":"build","slug":"/build/workflows-api","permalink":"/documentation/build/workflows-api","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/docs/build/workflows-api.md","tags":[],"version":"current","frontMatter":{"title":"Workflows API","sidebar_label":"Workflows API"},"sidebar":"docs","previous":{"title":"Workflow Snapshots","permalink":"/documentation/workflow-snapshots"},"next":{"title":"History & Search","permalink":"/documentation/monitor-history/activity-history"}}');var r=o(74848),s=o(28453);const i={title:"Workflows API",sidebar_label:"Workflows API"},a=void 0,d={},l=[{value:"Authentication",id:"authentication",level:2},{value:"REST API",id:"rest-api",level:2},{value:"Workflow Structure",id:"workflow-structure",level:2},{value:"HTTP Adaptor Examples",id:"http-adaptor-examples",level:2}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The Workflows API allows you to programmatically create and modify Workflows."}),"\n",(0,r.jsxs)(n.p,{children:["You can use the Workflows API with the ",(0,r.jsx)(n.code,{children:"http"})," adaptor or curl."]}),"\n",(0,r.jsx)(n.admonition,{title:"Version Compatibility",type:"info",children:(0,r.jsx)(n.p,{children:"The Workflows API was introduced in version 2.10.10, January 2025"})}),"\n",(0,r.jsx)(n.h2,{id:"authentication",children:"Authentication"}),"\n",(0,r.jsx)(n.p,{children:"All requests must be Authenticated."}),"\n",(0,r.jsx)(n.p,{children:"Authentication uses the Authorization header with a Personal Access Token (PAT)\nfrom the app."}),"\n",(0,r.jsxs)(n.p,{children:["If you're using the http adaptor, set the ",(0,r.jsx)(n.code,{children:"access_token"})," on the credential to\nyour PAT."]}),"\n",(0,r.jsx)(n.p,{children:"If you are using curl, add the bearer token (in the example below the token\nwill be expanded from an env var):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'curl -H "Authorization: Bearer $OPENFN_PAT" https://app.openfn.org/api/projects/<project-id>/workflows\n'})}),"\n",(0,r.jsx)(n.h2,{id:"rest-api",children:"REST API"}),"\n",(0,r.jsx)(n.p,{children:"The Workflow API has the following RESTful structure:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /api/projects/:projectId/workflows"})," - get a list of workflows for a\nproject. Returns an array of Workflows."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"GET /api/projects/:projectId/workflows/:workflowId"})," - get a single workflow\nby id. Returns a single Workflow."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PUT /api/projects/:projectId/workflows"})," - create a new Workflow. Include\nworkflow JSON in the body. Returns the updated Workflow JSON."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PUT /api/projects/:projectId/workflows/:workflowId"})," - update a Workflow. This\nwill replace the existing workflow with the JSON in the body. Returns the\nupdated Workflow JSON."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"PATCH /api/projects/:projectId/workflows/:workflowId"})," - partially update a\nWorkflow. The existing workflow will be updated with the JSON in the body."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"workflow-structure",children:"Workflow Structure"}),"\n",(0,r.jsx)(n.p,{children:"A Workflow has the following structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n  "name": "My Workflow",\n  "id": "a414cb3b-e387-4c4f-b8de-70d51f1160da",\n  "project_id": "79efba60-072a-4d4f-8d6c-22dfd3852176",\n  "edges": [\n    {\n      "id": "759fe475-ed23-4914-8a6d-155968bc0aa1"\n      "condition_type": "always",\n      "enabled": true,\n      "source_job_id": null,\n      "source_trigger_id": "c79ce46c-ab0f-4f5b-bf2d-fed52aef2a41",\n      "target_job_id": "26304a1e-267b-4bc9-940f-171db1905885",\n    }\n  ],\n  "jobs": [\n    {\n      "id": "26304a1e-267b-4bc9-940f-171db1905885",\n      "body": "/* job code goes here */",\n      "name": "my-job",\n      "adaptor": "@openfn/language-common@latest",\n    }\n  ],\n  "triggers": [\n    {\n      "id": "c79ce46c-ab0f-4f5b-bf2d-fed52aef2a41",\n      "comment": null,\n      "custom_path": null,\n      "cron_expression": null,\n      "type": "webhook",\n      "enabled": true\n    }\n  ],\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"When creating a new Workflow, the server will generate UUIDs for the workflow\nand all steps and edges. You can use any id string you like in the creation of\nnew nodes and edges - so long as id usage is consistent."}),"\n",(0,r.jsxs)(n.p,{children:["When matching a PUT or PATCH request, new steps and edges MUST be assigned\nUUIDs. If using the ",(0,r.jsx)(n.code,{children:"http"})," adaptor, you can use ",(0,r.jsx)(n.code,{children:"util.uuid()"})," for this (see the\nexample below)."]}),"\n",(0,r.jsx)(n.p,{children:"You MUST ensure that any steps and triggers referenced by an edge are defined\nwithin the same workflow."}),"\n",(0,r.jsx)(n.h2,{id:"http-adaptor-examples",children:"HTTP Adaptor Examples"}),"\n",(0,r.jsxs)(n.p,{children:["You will need to create a credential with ",(0,r.jsx)(n.code,{children:"access_token"})," set to your Personal\nAccess Token (PAT) and ",(0,r.jsx)(n.code,{children:"baseUrl"})," set to your OpenFn instance (ie,\n",(0,r.jsx)(n.code,{children:'"https://app.openfn.org"'}),")"]}),"\n",(0,r.jsx)(n.p,{children:"Create new Workflow:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"post(`/api/projects/${$.projectId}/workflows`, {\n  body: {\n    name: 'My Workflow',\n    edges: [\n      {\n        source_trigger_id: 'trigger-1',\n        target_job_id: 'job-1',\n        condition_type: 'always',\n      },\n    ],\n    jobs: [\n      {\n        id: 'job-1',\n        name: 'My Job',\n        body: '/* job code goes here */',\n        adaptor: '@openfn/language-common@latest',\n      },\n    ],\n    triggers: [\n      {\n        id: 'trigger-1',\n        type: 'webhook',\n        enabled: true,\n      },\n    ],\n  },\n  headers: { 'content-type': 'application/json' },\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The resulting workflow with updated UUIDs and metadata will be written to\n",(0,r.jsx)(n.code,{children:"state.data.workflow"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Add a new step and edge to an existing Workflow:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"fn(state => {\n  const jobId = util.uuid();\n  state.diff = {\n    edges: [\n      {\n        id: util.uuid(),\n        source_job_id: 'c79ce46c-ab0f-4f5b-bf2d-fed52aef2a41',\n        target_job_id: jobId,\n        condition_type: 'always',\n      },\n    ],\n    jobs: [\n      {\n        id: jobId,\n        body: '/* job code goes here */',\n        adaptor: '@openfn/language-common@latest',\n      },\n    ],\n  };\n  return state;\n});\npatch(`/api/projects/${$.projectId}/workflows/${$.workflowId}`, {\n  body: $.diff,\n  headers: { 'content-type': 'application/json' },\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The resulting workflow will be written to ",(0,r.jsx)(n.code,{children:"state.data.workflow"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);