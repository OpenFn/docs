"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[85186],{37553:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>y});var a=n(58168),r=(n(96540),n(15680));const o={title:"02b/ Initiate Payments",sidebar_label:"02b/ Initiate Payments",id:"02b-Initiate-Payments-2019-11-19",keywords:["library","job","expression","http","alterState","dataPath","each","map","post"]},i=void 0,s={unversionedId:"library/jobs/auto/02b-Initiate-Payments-2019-11-19",id:"library/jobs/auto/02b-Initiate-Payments-2019-11-19",title:"02b/ Initiate Payments",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/02b-Initiate-Payments-2019-11-19.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/02b-Initiate-Payments-2019-11-19",permalink:"/adaptors/library/jobs/auto/02b-Initiate-Payments-2019-11-19",draft:!1,tags:[],version:"current",frontMatter:{title:"02b/ Initiate Payments",sidebar_label:"02b/ Initiate Payments",id:"02b-Initiate-Payments-2019-11-19",keywords:["library","job","expression","http","alterState","dataPath","each","map","post"]},sidebar:"adaptors",previous:{title:"Failed Payment Notification",permalink:"/adaptors/library/jobs/auto/Failed-Payment-Notification-2021-04-23"},next:{title:"01c/ Create person_position record",permalink:"/adaptors/library/jobs/auto/01c-Create-person_position-record-2019-12-13"}},p={},y=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],l={toc:y},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.yg)("h2",{id:"metadata"},"Metadata"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Name: 02b/ Initiate Payments"),(0,r.yg)("li",{parentName:"ul"},"Adaptor: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-http"},(0,r.yg)("inlineCode",{parentName:"a"},"@openfn/language-http"))),(0,r.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-http"},(0,r.yg)("inlineCode",{parentName:"a"},"latest"))),(0,r.yg)("li",{parentName:"ul"},"Created about 5 years ago"),(0,r.yg)("li",{parentName:"ul"},"Updated almost 5 years ago"),(0,r.yg)("li",{parentName:"ul"},"Score: ",(0,r.yg)("b",null,"0")," (an ",(0,r.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.yg)("h2",{id:"key-functions"},"Key Functions"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"alterState"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"dataPath"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"each"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"post")),(0,r.yg)("h2",{id:"expression"},"Expression"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"// @trigger 'when 2a succeeds'\n// @credential 'ihris-mifos-combined'\n// @adaptor 'http'\n// -----------------------------------------------------------------------------\n\n// Hang 'payees' on state so that operations which replace \"response\" don't\n// overwrite these data. QUESTION: Why pluck body[0] instead of body[*]? What\n// happens if there are multiple payees? Is that first item in the body array an\n// array itself?\nalterState(state => {\n  state.data = { payees: state.response.body[0] };\n  state.saved_config = state.configuration;\n  return state;\n});\n\n// ===========================================================================\n// Make payment requests in Mifos with the reponse, either in bulk or by\n// iterating through the array of registrants and making a separate request\n// for each one ==============================================================\neach(\n  dataPath('payees[*]'),\n  post(\n    `${state.configuration.mifosUrl}/channel/transactions`,\n    {\n      authentication: state.configuration.mifosAuth,\n      headers: {\n        'content-type': 'application/json',\n        'X-Tenant-Identifier': 'tn07',\n      },\n      // Can we send an array of payments to make in a single request?\n      // body: state.data.registrants.map(r => {\n      //   console.log(`Initiating payment for ${r.name}.`);\n      //   return {\n      //     payer: { msisdn: state.configuration.mifosAcct },\n      //     payee: { msisdn: r.phone },\n      //     amount: r.amount,\n      //   };\n      // }),\n      body: state => {\n        return {\n          payer: {\n            partyIdInfo: {\n              partyIdType: 'MSISDN',\n              partyIdentifier: '27710203999',\n            },\n          },\n          payee: {\n            partyIdInfo: {\n              partyIdType: 'MSISDN',\n              partyIdentifier: state.data.msisdn,\n            },\n          },\n          amountType: 'SEND',\n          transactionType: {\n            scenario: 'PAYMENT',\n            initiator: 'PAYER',\n            initiatorType: 'CONSUMER',\n          },\n          amount: {\n            currency: 'USD',\n            amount: state.data.salary / 52,\n          },\n        };\n      },\n    },\n    state => {\n      const today = new Date();\n      const currPayee = state.references[0];\n      state.data.person_payment = {\n        'form[person_payments][0][0][fields][id]': 'person_payments|0',\n        'form[person_payments][0][0][fields][parent]':\n          'person|' + currPayee.person_id,\n        'form[person_payments][0][0][fields][date][day]': today.getDate(),\n        'form[person_payments][0][0][fields][date][month]':\n          today.getMonth() + 1,\n        'form[person_payments][0][0][fields][date][year]': today.getFullYear(),\n        'form[person_payments][0][0][fields][amount]': currPayee.salary / 52,\n        'form[person_payments][0][0][fields][transactionId]':\n          state.data.body.transactionId,\n        'form[person_payments][0][0][fields][status]':\n          state.data.body.transactionId ? 'initiated' : 'failed',\n      };\n      // =====================================================================\n      // Create \"initiated\" payments in iHRIS with their mifos external IDs ==\n      post(\n        `${state.saved_config.ihrisUrl}/manage/person_payments`,\n        {\n          authentication: state.configuration.ihrisAuth,\n          formData: state => {\n            state.data.person_payment.submit_type = 'confirm';\n            console.log('PaymentData: ' + state.data.person_payment);\n            return state.data.person_payment;\n          },\n        },\n        post(`${state.saved_config.ihrisUrl}/manage/person_payments`, {\n          authentication: state.configuration.ihrisAuth,\n          formData: state => {\n            state.references[1].person_payment.submit_type = 'save';\n            return state.references[1].person_payment;\n          },\n          options: {\n            successCodes: [302],\n          },\n        })\n      )(state);\n    }\n  )\n);\n\n")))}c.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>u});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),y=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=y(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=y(n),m=r,u=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?a.createElement(u,i(i({ref:t},l),{},{components:n})):a.createElement(u,i({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var y=2;y<o;y++)i[y]=n[y];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);