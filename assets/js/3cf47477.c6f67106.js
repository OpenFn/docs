"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[32840],{73178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var a=n(58168),r=(n(96540),n(15680));const s={title:"Upsert Attendance Skillz Plus Club",sidebar_label:"Upsert Attendance Skillz Plus Club",id:"Upsert-Attendance-Skillz-Plus-Club-2021-05-24",keywords:["library","job","expression","salesforce","dataValue","each","field","fields","lastReferenceValue","map","query","relationship","upsert","Array"]},i=void 0,o={unversionedId:"library/jobs/auto/Upsert-Attendance-Skillz-Plus-Club-2021-05-24",id:"library/jobs/auto/Upsert-Attendance-Skillz-Plus-Club-2021-05-24",title:"Upsert Attendance Skillz Plus Club",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/Upsert-Attendance-Skillz-Plus-Club-2021-05-24.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/Upsert-Attendance-Skillz-Plus-Club-2021-05-24",permalink:"/adaptors/library/jobs/auto/Upsert-Attendance-Skillz-Plus-Club-2021-05-24",draft:!1,tags:[],version:"current",frontMatter:{title:"Upsert Attendance Skillz Plus Club",sidebar_label:"Upsert Attendance Skillz Plus Club",id:"Upsert-Attendance-Skillz-Plus-Club-2021-05-24",keywords:["library","job","expression","salesforce","dataValue","each","field","fields","lastReferenceValue","map","query","relationship","upsert","Array"]},sidebar:"adaptors",previous:{title:"Upsert Coach Support Visit CSV",permalink:"/adaptors/library/jobs/auto/Upsert-Coach-Support-Visit-CSV-2021-04-28"},next:{title:"Upsert ART Adherence Self-Reporting Tool",permalink:"/adaptors/library/jobs/auto/Upsert-ART-Adherence-Self-Reporting-Tool-2021-04-30"}},c={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],_={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},_,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,r.yg)("h2",{id:"metadata"},"Metadata"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Name: Upsert Attendance Skillz Plus Club"),(0,r.yg)("li",{parentName:"ul"},"Adaptor: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,r.yg)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,r.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,r.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4"},(0,r.yg)("inlineCode",{parentName:"a"},"v2.7.4"))),(0,r.yg)("li",{parentName:"ul"},"Created over 3 years ago"),(0,r.yg)("li",{parentName:"ul"},"Updated 23 days ago"),(0,r.yg)("li",{parentName:"ul"},"Score: ",(0,r.yg)("b",null,"0")," (an ",(0,r.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,r.yg)("h2",{id:"key-functions"},"Key Functions"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"each"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"field"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"fields"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"lastReferenceValue"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"query"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"relationship"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"upsert"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"Array")),(0,r.yg)("h2",{id:"expression"},"Expression"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"query(\n  `SELECT Participant_Identification_Number_PID__c from Person__c where Participant_Identification_Number_PID__c  = '${state.data.form.attendance_list.update_participant_cases.item[0]['@id']}'`\n);\n\nfn(state => {\n  const PID = lastReferenceValue('records[0].Participant_Identification_Number_PID__c')(state);\n\n  if (!PID) {\n    console.log(\n      `Participant not found with Participant_Identification_Number_PID__c: ${state.data.form.attendance_list.update_participant_cases.item[0]['@id']}`\n    );\n    return state;\n  }\n  return execute(\n    // Set state.references to event record\n    query(\n      `SELECT Id, Name, CommCare_Ext_ID__c FROM Event__c WHERE CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n    ),\n    // Organise data and keep it safe\n    fn(state => {\n      function objectToArray(object) {\n        if (!object) return [];\n        return !Array.isArray(object) ? [object] : object;\n      }\n\n      const eventName = lastReferenceValue('records[0].CommCare_Ext_ID__c')(state);\n      state.data.eventName = eventName;\n\n      state.data.form.attendance_list.update_participant_cases.item = objectToArray(\n        state.data.form.attendance_list.update_participant_cases.item\n      );\n\n      state.data.form.attendance_list.update_participant_cases.item =\n        state.data.form.attendance_list.update_participant_cases.item.map(item => ({\n          ...item,\n          CommCare_Ext_ID__c: `${item['@id']}-${eventName}`,\n          event_case_id: state.data.form.case['@case_id'],\n        }));\n\n      //  Keep our data safe\n      state.items = state.data.form.attendance_list.update_participant_cases.item;\n\n      // Reset references\n      state.references = [];\n\n      return state;\n    }),\n    // Set state.references to an array of attendance records for each participant\n    beta.each(\n      '$.items[*]',\n      query(\n        state => `SELECT CommCare_Ext_ID__c, Session_1__c, Session_2__c, Session_3__c, Session_4__c, Session_5__c, Session_6__c, Session_7__c, Session_8__c, Session_9__c, Session_10__c, Session_11__c, Session_12__c, Session_13__c, Session_14__c, Session_15__c, Session_16__c, Session_17__c, Session_18__c, Session_19__c, Session_20__c, Session_21__c, Session_22__c, Session_23__c,Session_24__c, Session_25__c, Session_26__c, Session_27__c, Session_28__c\n         FROM Attendance__c\n         WHERE CommCare_Ext_ID__c = '${state.data.CommCare_Ext_ID__c}'\n         `\n      )\n    ),\n    // Calculate dynamic fields\n    fn(state => {\n      state.items = state.items.map(item => {\n        const record = state.references.find(rec =>\n          rec.records[0] ? rec.records[0].CommCare_Ext_ID__c === item.CommCare_Ext_ID__c : true\n        ).records[0];\n\n        function getSessionValue(present) {\n          if (!present) return 'U';\n          switch (present.toString().toLowerCase()) {\n            case 'yes':\n              return 'X';\n            case 'no':\n              return 'A';\n            case '':\n              return 'N';\n            default:\n              return 'U';\n          }\n        }\n\n        function getSessionFieldName(record) {\n          if (!record || Object.keys(record).length === 0) {\n            return 'Session_1__c';\n          }\n\n          const fieldName = Object.entries(record)\n            .filter(rec => rec[1] === null && rec[0] !== 'CommCare_Ext_ID__c')\n            .sort(function (a, b) {\n              return a[0].split('_')[1] - b[0].split('_')[1];\n            })[0][0];\n\n          return fieldName;\n        }\n\n        const sessionValue = getSessionValue(item.attendance_session);\n        const sessionDate = item.date;\n        const sessionFieldName = getSessionFieldName(record);\n        const sessionDateFieldName = `Session_${sessionFieldName.split('_')[1]}_Date__c`;\n\n        return {\n          ...item,\n          dynamicFields: {\n            [sessionFieldName]: sessionValue,\n            [sessionDateFieldName]: sessionDate,\n          },\n        };\n      });\n\n      //  Reset state.references\n      state.references = [];\n\n      return state;\n    }),\n\n    // Upsert\n    beta.each(\n      '$.items[*]',\n      upsert('Attendance__c', 'CommCare_Ext_ID__c', state => ({\n        ...fields(\n          field('CommCare_Ext_ID__c', dataValue('CommCare_Ext_ID__c')),\n          relationship('Person_Attendance__r', 'Participant_Identification_Number_PID__c', dataValue('@id')),\n          relationship('Event__r', 'CommCare_Case_ID__c', dataValue('event_case_id'))\n        ),\n        ...state.data.dynamicFields,\n      }))\n    )\n  )(state);\n});\n\n")))}d.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>_,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},_=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,_=o(e,["components","mdxType","originalType","parentName"]),p=l(n),u=r,m=p["".concat(c,".").concat(u)]||p[u]||d[u]||s;return n?a.createElement(m,i(i({ref:t},_),{},{components:n})):a.createElement(m,i({ref:t},_))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var l=2;l<s;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);