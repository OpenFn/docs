"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[7408],{36693:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>_,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(58168),a=(n(96540),n(15680));const s={title:"Upsert Risk and Vulnerability Assessment - Service Referral",sidebar_label:"\u2728 Upsert Risk and Vulnerability Assessment - Service Referral",id:"Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","relationship","upsertIf","Array"]},_=void 0,i={unversionedId:"library/jobs/auto/Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25",id:"library/jobs/auto/Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25",title:"Upsert Risk and Vulnerability Assessment - Service Referral",description:"This job was provided by an OpenFn.org user via the job library API.",source:"@site/adaptors/library/jobs/auto/Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25.md",sourceDirName:"library/jobs/auto",slug:"/library/jobs/auto/Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25",permalink:"/adaptors/library/jobs/auto/Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25",draft:!1,tags:[],version:"current",frontMatter:{title:"Upsert Risk and Vulnerability Assessment - Service Referral",sidebar_label:"\u2728 Upsert Risk and Vulnerability Assessment - Service Referral",id:"Upsert-Risk-and-Vulnerability-Assessment-Service-Referral-2021-05-25",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","relationship","upsertIf","Array"]},sidebar:"adaptors",previous:{title:"Upsert Team or Group Name",permalink:"/adaptors/library/jobs/auto/Upsert-Team-or-Group-Name-2021-04-28"},next:{title:"Upsert Coach Support Visit CSV",permalink:"/adaptors/library/jobs/auto/Upsert-Coach-Support-Visit-CSV-2021-04-28"}},o={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}],c={toc:l},f="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(f,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("em",null,"This job was provided by an OpenFn.org user via the job library API."),(0,a.yg)("h2",{id:"metadata"},"Metadata"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Name: Upsert Risk and Vulnerability Assessment - Service Referral"),(0,a.yg)("li",{parentName:"ul"},"Adaptor: ",(0,a.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce"},(0,a.yg)("inlineCode",{parentName:"a"},"@openfn/language-salesforce"))),(0,a.yg)("li",{parentName:"ul"},"Adaptor Version: ",(0,a.yg)("a",{parentName:"li",href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4"},(0,a.yg)("inlineCode",{parentName:"a"},"v2.7.4"))),(0,a.yg)("li",{parentName:"ul"},"Created over 3 years ago"),(0,a.yg)("li",{parentName:"ul"},"Updated 9 months ago"),(0,a.yg)("li",{parentName:"ul"},"Score: ",(0,a.yg)("b",null,"92")," (an ",(0,a.yg)("a",{parentName:"li",href:"/adaptors/library/#library-scores"},"indicator")," of how useful this job may be)")),(0,a.yg)("h2",{id:"key-functions"},"Key Functions"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"alterState"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"dataValue"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"field"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"fields"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"join"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"map"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"relationship"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"upsertIf"),", ",(0,a.yg)("inlineCode",{parentName:"p"},"Array")),(0,a.yg)("h2",{id:"expression"},"Expression"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"// Your job goes here.\nalterState(state => {\n  function split(str, separator) {\n    if (!str) {\n      return [];\n    } else {\n      return str.toString().split(separator);\n    }\n  }\n  function checked(key, str) {\n    if (!str) return false;\n    return split(str.toString(), ' ').indexOf(key) >= 0;\n  }\n\n  function capitalizeFirstLetter(str) {\n    if (!str) return;\n    let new_str = str.toString().toLowerCase();\n    return new_str.slice(0, 1).toUpperCase() + new_str.slice(1);\n  }\n\n  function transformDont(str) {\n    if (!str) return str;\n    return split(str.toString(), '_')\n      .map(word => word.replace(/dont/i, \"don't\"))\n      .join('_')\n      .toString()\n      .trim();\n  }\n\n  function transformCant(str) {\n    if (!str) return str;\n    return split(str.toString(), '_')\n      .map(word => word.replace(/cant/i, \"can't\"))\n      .join('_')\n      .toString()\n      .trim();\n  }\n\n  function splitAndJoin(str, splitDelimiter, joinDelimiter) {\n    if (!str) return;\n\n    return split(str.toString(), splitDelimiter).join(joinDelimiter).toString().trim();\n  }\n\n  function transformHowOften(str) {\n    if (!str) return;\n    if (str === 'special_occasions') return 'Special Occasions';\n    if (str === 'no_dont_want_to_disclose') return \"Don't want to disclose\";\n    if (str === 'dont_want_to_disclose') return \"Don't want to disclose\";\n    return transformGenericText(str).toString().trim();\n  }\n\n  function transformHIVStatus(status) {\n    switch (status) {\n      case 'yes_negative':\n        return 'Yes,Negative';\n      case 'yes_positive':\n        return 'Yes,Positive';\n      case 'no_i_dont':\n        return \"No,I don't know\";\n      case 'yes_dont_want_to_disclose':\n        return \"Yes, don't want to disclose\";\n      default:\n        return;\n    }\n  }\n\n  function transformLastTested(str) {\n    if (!str) return;\n    switch (str.toString()) {\n      case 'yes_negative':\n        return 'Yes,Negative';\n      case 'yes_positive':\n        return 'Yes,Positive';\n      case 'no_i_dont':\n        return \"No,I don't know\";\n      case 'yes_dont_want_to_disclose':\n        return \"Yes, don't want to disclose\";\n      default:\n        return;\n    }\n  }\n\n  function transformMonthAgo(str) {\n    if (!str) return;\n    switch (str) {\n      case 'month_ago':\n        return '1 month ago';\n      case 'months_ago':\n        return '3 months ago';\n      case 'month_ago':\n        return 'copy-1-of-months_ago ';\n      case 'month_ago':\n        return '6 months ago';\n      case 'a_year_or_more_ago':\n        return 'A year or more';\n      default:\n        return;\n    }\n  }\n\n  function transformGenericText(str) {\n    if (!str) return;\n    return capitalizeFirstLetter(splitAndJoin(transformDont(str), '_', ' '))\n      .toString()\n      .trim();\n  }\n\n  function transformRange(range) {\n    if (!range) return;\n    return range\n      .toString()\n      .replace(/\\d_\\d/i, match => match.replace('_', '-'))\n      .toString()\n      .trim();\n  }\n\n  function transformAgeRange(range) {\n    if (!range) return;\n    if (range === '10_years') return '< 10 years';\n    if (range === 'greater_than_19') return '> 19 years';\n    return capitalizeFirstLetter(transformDont(transformCant(splitAndJoin(transformRange(range), '_', ' '))))\n      .toString()\n      .trim();\n  }\n\n  function transformAbuseExperienced(str) {\n    if (!str) return;\n    return split(str, ' ')\n      .map(word => capitalizeFirstLetter(word))\n      .join(';')\n      .toString()\n      .trim();\n  }\n\n  function getAge(dateString) {\n    if (!dateString) return;\n\n    const today = new Date();\n    const birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  }\n\n  state.data.perform_a_risk_assessment = state.data.form.do_you_want_to_perform_a_risk_assessment === 'yes';\n\n  state.data.complete_service_referrals = state.data.form.referral_services ? true : false;\n\n  state.data.form.client_information.gender = capitalizeFirstLetter(state.data.form.client_information.gender);\n\n  state.helperFunctions = {\n    split,\n    checked,\n    transformAgeRange,\n    transformHIVStatus,\n    transformLastTested,\n    transformMonthAgo,\n    transformGenericText,\n    transformDont,\n    splitAndJoin,\n    transformHowOften,\n    transformAbuseExperienced,\n    getAge,\n  };\n  return state;\n});\n\nupsertIf(\n  dataValue('perform_a_risk_assessment'),\n  'Risk_Assessment__c',\n  'CommCare_Ext_ID__c',\n  fields(\n    field('CommCare_Ext_ID__c', dataValue('id')),\n    field('Date__c', dataValue('form.risk_assessment.date')),\n    field('Participant_Name__c', dataValue('form.client_information.participant_full_name')),\n    field('Participant_Age__c', state => {\n      const dob = dataValue('form.client_information.date_of_birth')(state);\n\n      return state.helperFunctions.getAge(dob);\n    }),\n    relationship('Site2__r', 'CommCare_Ext_ID__c', dataValue('form.client_information.site')),\n    relationship('EventLink__r', 'CommCare_Ext_ID__c', dataValue('form.client_information.intervention_name')),\n    relationship('Venue__r', 'CommCare_Ext_ID__c', dataValue('form.client_information.venue')),\n\n    field('Participant_Sex__c', dataValue('form.client_information.gender')),\n    field('X1_0_Sexually_Active_past_12_month__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.sexual_risk_and_pregnancy.sexually_active_12_months')(state)\n      )\n    ),\n    field('X1_1_Age_at_first_sex__c', state =>\n      state.helperFunctions.transformAgeRange(\n        dataValue('form.risk_assessment.sexual_risk_and_pregnancy.age_at_first_sex')(state)\n      )\n    ),\n    field('X1_2_Have_you_ever_had_unprotected_sex__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.sexual_risk_and_pregnancy.have_you_ever_had_unprotected_sex')(state)\n      )\n    ),\n    field('X1_3_Sex_for_monetary_or_material_benefi__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.sexual_risk_and_pregnancy.sex_monetary_material')(state)\n      )\n    ),\n    field('Do_you_know_your_HIV_status__c', state =>\n      state.helperFunctions.transformHIVStatus(\n        dataValue('form.risk_assessment.hiv_status.do_you_know_your_hiv_status')(state)\n      )\n    ),\n    field('X2_1_When_last_did_you_test_for_HIV__c', state =>\n      state.helperFunctions.transformMonthAgo(\n        dataValue('form.risk_assessment.hiv_status.when_last_did_you_test_for_hiv')(state)\n      )\n    ),\n    field('X2_2_Are_you_on_treatment_ART__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.hiv_status.are_you_on_treatment_art')(state)\n      )\n    ),\n    field('X3_0_Had_an_STI_in_the_last_12months_yea__c', state =>\n      state.helperFunctions.transformHowOften(dataValue('form.risk_assessment.sti_and_pep.hiv_last_12_months')(state))\n    ),\n    field('X3_1_Past_12_months_sex_HIV_status_part__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.sti_and_pep.knowing_partners_hiv_status')(state)\n      )\n    ),\n    field('X4_0_Forms_of_abuse_experienced_before__c', state => {\n      const abusesArray = state.helperFunctions.split(\n        dataValue('form.risk_assessment.gender_based_violence.abuse_experienced')(state),\n        ' '\n      );\n      const abuses = [];\n      abusesArray.forEach(ab => {\n        abuses.push(state.helperFunctions.transformGenericText(ab));\n      });\n      return abuses.join(';');\n    }),\n    field('X4_1_Feel_unsafe_any1_interact_with_ofte__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.gender_based_violence.unsafe_with_others')(state)\n      )\n    ),\n    field('X4_2_Of_what_relationship_person_to_you__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.gender_based_violence.relationship_of_abuser')(state)\n      )\n    ),\n    field('X5_0_Do_you_take_alcohol_or_drugs__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.drugs_and_alcohol_use.do_you_take_alcohol_andor_drugs')(state)\n      )\n    ),\n    field('X5_1_On_average_how_often_drink_alcohol__c', state =>\n      state.helperFunctions.transformHowOften(\n        dataValue('form.risk_assessment.drugs_and_alcohol_use.how_often_alcohol')(state)\n      )\n    ),\n    field('X5_2_On_average_how_often_take_drugs__c', state =>\n      state.helperFunctions.transformHowOften(\n        dataValue('form.risk_assessment.drugs_and_alcohol_use.how_often_drugs')(state)\n      )\n    ),\n    field('X5_3_Easy_for_teens_to_obtain_alcohol__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.drugs_and_alcohol_use.alcohol_19')(state)\n      )\n    ),\n    field('X5_4__c', state =>\n      state.helperFunctions.transformGenericText(\n        dataValue('form.risk_assessment.drugs_and_alcohol_use.illegal_drugs_19')(state)\n      )\n    )\n  )\n);\n\nfn(state => {\n  state.data.intervention_name = state.data.form.client_information.intervention_name\n    ? [relationship('Event__r', 'CommCare_Ext_ID__c', dataValue('form.client_information.intervention_name'))]\n    : [];\n\n  return state;\n});\n\nupsertIf(dataValue('complete_service_referrals'), 'NewReferral__c', 'CommCare_Ext_ID__c', state => ({\n  ...fields(\n    field('CommCare_Ext_ID__c', state => {\n      if (state.data.form.subcase_0.case) return state.data.form.subcase_0.case['@case_id'];\n      else if (state.data.form.referral_services) {\n        if (state.data.form.referral_services.art_support_services.skillz_plus_club_details)\n          return state.data.form.referral_services.art_support_services.skillz_plus_club_details\n            .create_skillz_plus_club_participant_case.case['@case_id'];\n      }\n      return undefined;\n    }),\n    field('Participants_Full_Name__c', dataValue('form.client_information.participant_full_name')),\n    field('Service_Provider_Name__c', dataValue('form.client_information.coach_name')),\n    field('Parent_Guardian_Full_Name__c', dataValue('form.parent__guardian_information.parent__guardian_full_name')),\n    field('Relationship__c', dataValue('form.parent__guardian_information.relationship_to_client')),\n    //field('', dataValue('form.parent__guardian_information.please_specify')),\n    field('Parent_Guardian_Contact_Number__c', dataValue('form.parent__guardian_information.contact_number')),\n    //field('', dataValue('form.parent__guardian_information.guardian_consent')),\n    field('Institution_Referred_To_1__c', dataValue('form.referral_information.institution_referred_to')),\n    field('Institution_Referred_To_2__c', dataValue('form.referral_information.copy-1-of-institution_referred_to')),\n    field('Institution_Referred_To_3__c', dataValue('form.referral_information.copy-2-of-institution_referred_to')),\n    field('HIV_Testing_Services_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'hiv_testing_services',\n        dataValue('form.referral_services.hiv_support__care.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('HIV_Other__c', dataValue('form.referral_services.hiv_support__care.please_specify')),\n    field('ART_Initiation_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'art_initiationenrollment',\n        dataValue('form.referral_services.art_support_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('SKILLZ_Plus_Club_Support_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'grs_skillz_plus_club',\n        dataValue('form.referral_services.art_support_services.skillz_plus_club_option')(state)\n      )\n    ),\n    field('PMTCT_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'pmtct',\n        dataValue('form.referral_services.art_support_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('VMMC_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'vmmc',\n        dataValue('form.referral_services.hiv_support__care.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('TB_Screening_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'tb_screening_treatment_adherence',\n        dataValue('form.referral_services.hiv_support__care.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('Legal_Other__c', dataValue('form.referral_services.legal_services.please_specify_other_legal')),\n    field('Post_Exposure_Prophylaxis_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'post_exposure_prophylaxis',\n        dataValue('form.referral_services.hiv_support__care.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('PrEP_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'prep',\n        dataValue('form.referral_services.hiv_support__care.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('HIV_STI_PREVENTION_Other_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'other',\n        dataValue('form.referral_services.hiv_support__care.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('HIV_Other__c', dataValue('form.referral_services.hiv_support__care.please_specify')),\n    field(\n      'Victim_Friendly_Services_GRS_Staff__c',\n      state =>\n        state.helperFunctions.checked(\n          'suspected_abuse_reported_police_court_other_authority',\n          dataValue(\n            'form.referral_services.child_protection_support_services.check_the_services_that_client_was_referred_to'\n          )(state)\n        ) ||\n        state.helperFunctions.checked(\n          'post_violence_care_medical_legal_counseling',\n          dataValue(\n            'form.referral_services.child_protection_support_services.check_the_services_that_client_was_referred_to'\n          )(state)\n        ) ||\n        state.helperFunctions.checked(\n          'child_support_grant_social_foster_general_support',\n          dataValue(\n            'form.referral_services.child_protection_support_services.check_the_services_that_client_was_referred_to'\n          )(state)\n        ) ||\n        state.helperFunctions.checked(\n          'other',\n          dataValue(\n            'form.referral_services.child_protection_support_services.check_the_services_that_client_was_referred_to'\n          )(state)\n        )\n    ),\n\n    field('Sexual_and_GBV_Abuse_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'sexual__gender-based_violenceabus',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n\n    // field('missing in SF', dataValue('form.referral_services.child_protection_support_services.type_of_post_violence_care')),\n    // field('missing in SF', dataValue('form.referral_services.child_protection_support_services.child_support_grant_for')),\n    field(\n      'Legal_Services_Other_GRS_Staff__c',\n      state =>\n        state.helperFunctions.checked(\n          'other',\n          dataValue('form.referral_services.legal_services.legal_services')(state)\n        ) ||\n        state.helperFunctions.checked('id', dataValue('form.referral_services.legal_services.legal_services')(state)) ||\n        state.helperFunctions.checked(\n          'birth_bertificate',\n          dataValue('form.referral_services.legal_services.legal_services')(state)\n        )\n    ),\n    field('Legal_Other__c', dataValue('form.referral_services.legal_services.please_specify_other_legal')),\n    field('IPTG_Health_Facility__c', state =>\n      state.helperFunctions.checked(\n        'iptg_to_health_facility',\n        dataValue('form.referral_services.mental_health_services.mental_health_select_services')\n      )\n    ),\n    field('IPTG_Specialized_to_SMZ__c', state =>\n      state.helperFunctions.checked(\n        'iptg_specialised_to_smz',\n        dataValue('form.referral_services.mental_health_services.mental_health_select_services')\n      )\n    ),\n    field('STI_Screen_Testing_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'sti_screening_diagnosis_treatment',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('Contraception_Family_Plan_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'contraceptivesfamily_planning',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('Cervical_Cancer_Screening_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'cervical_cancer_screening',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('HPV_vaccine_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'hpv',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('Antenatal_Care_ANC_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'antenatal_care_anc',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n\n    field(\n      'Psycho_Social_Support_GRS_Staff__c',\n      state =>\n        state.helperFunctions.checked(\n          'drug_or_alcohol_abuse',\n          dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n        ) ||\n        state.helperFunctions.checked(\n          'psychiatric_careintensive_counseling',\n          dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n        ) ||\n        state.helperFunctions.checked(\n          'psychosocial_support',\n          dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n        )\n    ),\n    field('Psycho_Social_Services_Other_GRS_Staff__c', state =>\n      state.helperFunctions.checked(\n        'other',\n        dataValue('form.referral_services.other_srhr_services.check_the_services_that_client_was_referred_to')(state)\n      )\n    ),\n    field('Psycho_Other__c', dataValue('form.referral_services.other_srhr_services.please_specify_srhr_referred')),\n\n    field('Date_Referred__c', dataValue('form.follow-up.date_referred')),\n    field('Expected_Visit_Date__c', dataValue('form.follow-up.expected_visit_date')),\n    field('Client_Follow_up_Consent_given__c', state =>\n      state.helperFunctions.checked('client_follow-up_consent_given', dataValue('form.follow-up.select')(state))\n    ),\n    field('Client_Linked_to_care__c', state =>\n      state.helperFunctions.checked('client_linked_to_care', dataValue('form.follow-up.select')(state))\n    ),\n\n    field('Business_Unit_Site__c', state => {\n      const bu = dataValue('form.client_information.business_unit')(state);\n      return bu === '65680f0c4c144b03ad0f86bdc46c1ebc'\n        ? 'GRS Zambia'\n        : bu === '04d98397e28046118fade28ced6b65cb'\n        ? 'GRS Zimbabwe'\n        : bu === 'ed125ab19ec34aacab79585e59eb76f4'\n        ? 'GRS Partnerships'\n        : undefined;\n    })\n  ),\n  ...fields(...state.data.intervention_name),\n}));\n\n")))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>p});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),l=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):_(_({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(o.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=l(n),d=a,p=f["".concat(o,".").concat(d)]||f[d]||u[d]||s;return n?r.createElement(p,_(_({ref:t},c),{},{components:n})):r.createElement(p,_({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,_=new Array(s);_[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[f]="string"==typeof e?e:a,_[1]=i;for(var l=2;l<s;l++)_[l]=n[l];return r.createElement.apply(null,_)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);