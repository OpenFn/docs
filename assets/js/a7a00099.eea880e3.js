"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[90866],{85952:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=t(58168),o=(t(96540),t(15680));const i={title:"Collections",sidebar_label:"Collections"},l=void 0,r={unversionedId:"build/collections",id:"build/collections",title:"Collections",description:"Collections provides a high-volume, high-performance storage solution built into",source:"@site/docs/build/collections.md",sourceDirName:"build",slug:"/build/collections",permalink:"/documentation/build/collections",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/build/collections.md",tags:[],version:"current",frontMatter:{title:"Collections",sidebar_label:"Collections"},sidebar:"docs",previous:{title:"Credentials",permalink:"/documentation/build/credentials"},next:{title:"Limits",permalink:"/documentation/build/limits"}},s={},c=[{value:"Use Cases",id:"use-cases",level:2},{value:"Buffering Data",id:"buffering-data",level:3},{value:"Mapping Structures",id:"mapping-structures",level:3},{value:"Collections Basics",id:"collections-basics",level:2},{value:"Managing Collections",id:"managing-collections",level:2},{value:"Using Collections",id:"using-collections",level:2}],p={toc:c},g="wrapper";function d(e){let{components:n,...i}=e;return(0,o.yg)(g,(0,a.A)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Collections provides a high-volume, high-performance storage solution built into\nOpenFn."),(0,o.yg)("p",null,"Collections is suitable for buffering, caching and aggregating data from\nWebhooks, storing large mapping files, and sharing state between workflows."),(0,o.yg)("p",null,"Collections can be used to store a very large number of items (in the order of\nmillions)."),(0,o.yg)("admonition",{title:"Collections Stability",type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Collections is a new feature to OpenFn, in beta release since November 2024."),(0,o.yg)("p",{parentName:"admonition"},"We'd love to hear your feedback on\n",(0,o.yg)("a",{parentName:"p",href:"https://community.openfn.org/"},"community.openfn.org")," via email at\n",(0,o.yg)("a",{parentName:"p",href:"mailto:support@openfn.org"},"support@openfn.org"),".")),(0,o.yg)("h2",{id:"use-cases"},"Use Cases"),(0,o.yg)("h3",{id:"buffering-data"},"Buffering Data"),(0,o.yg)("p",null,"Many OpenFn integrations are triggered through a webhook, called from another\nsystem based on some event. For example, every time a patient is registered, a\nwebhook calls into OpenFn to trigger a workflow and propagate the registration\nevent to other systems."),(0,o.yg)("p",null,"Collections can be used as a buffer for these incoming events, saving the event\ndata on OpenFn and then processing a batch of events at the end of the day. This\nis particularly useful in high volume events, or when limits are imposed on\nupstream systems."),(0,o.yg)("p",null,"With Collections, you can save each incoming event onto OpenFn, then run a\nWorkflow on a Cron trigger to process a batch of events in one go, and send on\naggregated, filtered or transformed results to the next system."),(0,o.yg)("h3",{id:"mapping-structures"},"Mapping Structures"),(0,o.yg)("p",null,"A typical use-case is data integrations is to store large mapping objects. These\nobjects themselves are key-value pairs which map strings from one system into\nmatching strings from another system. For example, mapping medical codes into\nSNOMED, or mapping city codes into human-readable strings, or mappings some\ninput string to a DHIS2 attribute code."),(0,o.yg)("p",null,"These objects are often very large and hard to maintain, and can bloat job code."),(0,o.yg)("p",null,"Instead, the mappings can be saved to a GitHub repository as a JSON object, and\nuploaded to a collection using the CLI."),(0,o.yg)("h2",{id:"collections-basics"},"Collections Basics"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"The Collections API is automatically available to all Workflows and does not\nrequire any credentials. Authentication with the OpenFn platform is managed for\nyou."),(0,o.yg)("p",{parentName:"admonition"},"You can use the Collections API with any adaptor.")),(0,o.yg)("p",null,"Data is stored as key-value pairs, where the key is a unique identifier for\nsome data (like a UUID, or timestamp). The value is always saved as a string\n(although you can pass JSON-compatible objects directly, which will be\nautomatically serialized by the Collections API)."),(0,o.yg)("p",null,"Keys can be fetched in bulk and filtered by ",(0,o.yg)("em",{parentName:"p"},"pattern"),". For example, the pattern\n",(0,o.yg)("inlineCode",{parentName:"p"},"2024*")," will match all keys which start with ",(0,o.yg)("inlineCode",{parentName:"p"},"2024"),". Designing keys to have an\nefficient sort order is critical for high-volume Collections applications."),(0,o.yg)("p",null,"The example below fetches values from the ",(0,o.yg)("inlineCode",{parentName:"p"},"openfn-patient-registrations"),"\ncollection and saves them onto state for further processing:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"collections.get('openfn-patient-registrations', '2024*').then(state => {\n  state.registrationsThisYear = state.data;\n  return state;\n});\n")),(0,o.yg)("p",null,"Returned items are written to state.data as an array of ",(0,o.yg)("inlineCode",{parentName:"p"},"[{ key, value }]"),"\npairs:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'{\n  "data": {\n    "20240102-5901257": {\n      "name": "Tom Waits",\n      "id": "5901257",\n    },\n    "20240213-0183216": {\n      "name": "Billie Holiday",\n      "id": "0183216",\n    }\n  }\n}\n')),(0,o.yg)("p",null,"If fetching a single item (i.e. no ",(0,o.yg)("inlineCode",{parentName:"p"},"*")," in the key), it will be written directly\nto ",(0,o.yg)("inlineCode",{parentName:"p"},"state.data")," with no key:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},'{\n  "data": {\n    "name": "Billie Holiday",\n    "id": "0183216",\n  }\n}\n')),(0,o.yg)("p",null,"Every key permanently saves its creation date, so as well as fetching by\nkey-pattern, you can also filter keys by date. This example fetches all keys\ncreated before 30th September 2024:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"collections\n  .get('openfn-patient-registrations', '*', { createdBefore: '2024-09-30' })\n  .then(state => {\n    state.registrationsThisYear = state.data;\n    return state;\n  });\n")),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"collections.get")," will download all matching values into memory. For large\nvalues or high-volume value sets, it is more efficient to use\n",(0,o.yg)("inlineCode",{parentName:"p"},"collections.each"),", which will stream each value into memory individually and\nthen discard it."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"collections.each(\n  'my-collection',\n  { key: '2024*', createdAfter: '20240601' },\n  (state, value, key) => {\n    console.log(value);\n  }\n);\n")),(0,o.yg)("p",null,"Values are uploaded to a collection through ",(0,o.yg)("inlineCode",{parentName:"p"},"collections.set"),'. All sets are "upserts" - meaning that new keys will be created for values that don\'t exist, and values will be updated for keys that ',(0,o.yg)("em",{parentName:"p"},"do")," exist. "),(0,o.yg)("p",null,"The example below sets a single item:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"collections.set('openfn-demo', 'commcare-fhir-value-mappings', {\n  current_smoker: {\n    system: 'http://snomed.info/sct',\n    code: '77176002',\n    display: 'Smoker',\n  },\n  /* ... */\n});\n")),(0,o.yg)("p",null,"If setting multiple values at once, pass a key generator function instead of an\nid to generate a key for each item. For example, if several value are saved in\nan array on ",(0,o.yg)("inlineCode",{parentName:"p"},"state.data"),":"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"collections.set('openfn-demo', (patient, state) => patient.id, $.patients);\n")),(0,o.yg)("p",null,"The key generator will be called with each value and must return a string key."),(0,o.yg)("h2",{id:"managing-collections"},"Managing Collections"),(0,o.yg)("p",null,"Collections can be created, destroyed or renamed from the Admin menu."),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Collections Admin Page",src:t(80218).A,width:"932",height:"561"})),(0,o.yg)("p",null,"Before it can be used, a collection must be created. Collection names must be\nunique to the deployment, so we recommend using your organisation (and maybe\nproject) as a prefix, ie, ",(0,o.yg)("inlineCode",{parentName:"p"},"openfn-demo"),"."),(0,o.yg)("h2",{id:"using-collections"},"Using Collections"),(0,o.yg)("p",null,"Collections are available to all Workflows via a simple high-level interface."),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"A Collection must be created in the admin interface before it can be used.")),(0,o.yg)("p",null,"The Collections API provides four basic verbs:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/adaptors/packages/collections-docs#collections_get"},(0,o.yg)("inlineCode",{parentName:"a"},"collections.get()")),"\ndownloads values matching a key or key pattern."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/adaptors/packages/collections-docs#collections_each"},(0,o.yg)("inlineCode",{parentName:"a"},"collections.each()")),"\nefficiently iterates over a range of items in a collection."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/adaptors/packages/collections-docs#collections_set"},(0,o.yg)("inlineCode",{parentName:"a"},"collections.set()")),"\nuploads values to a collection."),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("a",{parentName:"li",href:"/adaptors/packages/collections-docs#collections_remove"},(0,o.yg)("inlineCode",{parentName:"a"},"collections.remove()")),"\nwill remove values by key or key pattern.")),(0,o.yg)("p",null,"The Collection API is backed by a special adaptor: see the\n",(0,o.yg)("a",{parentName:"p",href:"/adaptors/collections"},"Collections Adaptor API")," for more details."))}d.isMDXComponent=!0},15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(96540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),g=c(t),u=o,m=g["".concat(s,".").concat(u)]||g[u]||d[u]||i;return t?a.createElement(m,l(l({ref:n},p),{},{components:t})):a.createElement(m,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=u;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[g]="string"==typeof e?e:o,l[1]=r;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},80218:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/collections_admin-f85b45720bd099657062e0b556e2650d.png"}}]);