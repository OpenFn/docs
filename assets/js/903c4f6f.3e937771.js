"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[38992],{28453:(e,s,r)=>{r.d(s,{R:()=>l,x:()=>i});var n=r(96540);const t={},a=n.createContext(t);function l(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),n.createElement(a.Provider,{value:s},e.children)}},41483:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"library/jobs/auto/Upsert-Register-Skills-plus-Club-2021-04-30","title":"Upsert Register Skills plus Club","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Upsert-Register-Skills-plus-Club-2021-04-30.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Upsert-Register-Skills-plus-Club-2021-04-30","permalink":"/adaptors/library/jobs/auto/Upsert-Register-Skills-plus-Club-2021-04-30","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Upsert Register Skills plus Club","sidebar_label":"Upsert Register Skills plus Club","id":"Upsert-Register-Skills-plus-Club-2021-04-30","keywords":["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","relationship","upsert"]},"sidebar":"adaptors","previous":{"title":"Upsert Register Participant Skillz","permalink":"/adaptors/library/jobs/auto/Upsert-Register-Participant-Skillz-2021-08-30"},"next":{"title":"Upsert Register Event","permalink":"/adaptors/library/jobs/auto/Upsert-Register-Event-2021-04-30"}}');var t=r(74848),a=r(28453);const l={title:"Upsert Register Skills plus Club",sidebar_label:"Upsert Register Skills plus Club",id:"Upsert-Register-Skills-plus-Club-2021-04-30",keywords:["library","job","expression","salesforce","alterState","dataValue","field","fields","join","map","relationship","upsert"]},i=void 0,o={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,t.jsx)(s.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Name: Upsert Register Skills plus Club"}),"\n",(0,t.jsxs)(s.li,{children:["Adaptor: ",(0,t.jsx)(s.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(s.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,t.jsxs)(s.li,{children:["Adaptor Version: ",(0,t.jsx)(s.a,{href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4",children:(0,t.jsx)(s.code,{children:"v2.7.4"})})]}),"\n",(0,t.jsx)(s.li,{children:"Created about 4 years ago"}),"\n",(0,t.jsx)(s.li,{children:"Updated 5 months ago"}),"\n",(0,t.jsxs)(s.li,{children:["Score: ",(0,t.jsx)("b",{children:"0"})," (an ",(0,t.jsx)(s.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"alterState"}),", ",(0,t.jsx)(s.code,{children:"dataValue"}),", ",(0,t.jsx)(s.code,{children:"field"}),", ",(0,t.jsx)(s.code,{children:"fields"}),", ",(0,t.jsx)(s.code,{children:"join"}),", ",(0,t.jsx)(s.code,{children:"map"}),", ",(0,t.jsx)(s.code,{children:"relationship"}),", ",(0,t.jsx)(s.code,{children:"upsert"})]}),"\n",(0,t.jsx)(s.h2,{id:"expression",children:"Expression"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"// push to production\nalterState((state) => {\n  \n  function clean(str) {\n    if (!!str)\n      return str\n        .split('_')\n        .map(word => {\n          let new_word = word.toString().toLowerCase();\n          return new_word.slice(0, 1).toUpperCase() + new_word.slice(1);\n        })\n        .join(' ');\n  }\n  \n  const coachFieldNames = ['Coach_A__r','Coach_B__r','Coach_C__r','Coach_D__r']\n \n  state.data.destinationCoachFields = state.data.form.coaches\n  .split(' ')\n  .reduce(\n    (accumulator, currentValue, currentIndex) => [\n      ...accumulator,\n      (currentIndex < coachFieldNames.length && !!currentValue\n        ? relationship(coachFieldNames[currentIndex], 'CommCare_Ext_ID__c', currentValue)\n        : []),\n    ],\n    []\n  );\n\n  return state; \n}); \n\n\n\nupsert(\n  'Event__c',\n  'CommCare_Case_ID__c',\n  state=>({\n  ...fields(\n      field('Name', dataValue('form.name_of_skillz_plus_club')),\n      field('CommCare_Ext_ID__c', dataValue('form.name_of_skillz_plus_club')),\n      field('CommCare_Case_ID__c', dataValue('form.case.@case_id')),\n      relationship('RecordType', 'Name', 'Intervention'),\n      relationship('Site__r', 'CommCare_Ext_ID__c', dataValue('form.skillz_plus_site')),\n      relationship('Venue__r', 'CommCare_Ext_ID__c', dataValue('form.skillz_plus_venue')),\n    ),\n    ...fields(...state.data.destinationCoachFields)\n  })\n);\n\n"})})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);