"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[94181],{6085:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"library/jobs/auto/satusehat-create-encounter","title":"Create an Encounter Record","description":"\ud83d\udcdc This job is an official example from OpenFn.","source":"@site/adaptors/library/jobs/auto/satusehat-create-encounter.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/satusehat-create-encounter","permalink":"/adaptors/library/jobs/auto/satusehat-create-encounter","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Create an Encounter Record","sidebar_label":"\ud83d\udcdc Create an Encounter Record","id":"satusehat-create-encounter","keywords":["library","job","expression","satusehat","post"]},"sidebar":"adaptors","previous":{"title":"\ud83d\udcdc Create a condition Record","permalink":"/adaptors/library/jobs/auto/satusehat-create-condition"},"next":{"title":"\ud83d\udcdc Create an Observation","permalink":"/adaptors/library/jobs/auto/satusehat-create-observations"}}');var s=t(74848),r=t(28453);const o={title:"Create an Encounter Record",sidebar_label:"\ud83d\udcdc Create an Encounter Record",id:"satusehat-create-encounter",keywords:["library","job","expression","satusehat","post"]},i=void 0,c={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["\ud83d\udcdc ",(0,s.jsx)("em",{children:"This job is an official example from OpenFn."})]}),"\n",(0,s.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Name: Create an Encounter Record"}),"\n",(0,s.jsxs)(n.li,{children:["Adaptor: ",(0,s.jsx)(n.a,{href:"https://www.github.com/openfn/language-satusehat",children:(0,s.jsx)(n.code,{children:"@openfn/language-satusehat"})})]}),"\n",(0,s.jsxs)(n.li,{children:["Adaptor Version: ",(0,s.jsx)(n.a,{href:"https://www.github.com/openfn/language-satusehat",children:(0,s.jsx)(n.code,{children:"latest"})})]}),"\n",(0,s.jsx)(n.li,{children:"Created date unknown"}),"\n",(0,s.jsx)(n.li,{children:"Updated date unknown"}),"\n",(0,s.jsxs)(n.li,{children:["Score: ",(0,s.jsx)("b",{children:"100"})," (an ",(0,s.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"post"})}),"\n",(0,s.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// Create an encounter in Satusehat based on an incoming Commcare visit\n\nfn(state => {\n  state.encounterId = util.uuid();\n\n  state.encounter = {\n    id: state.encounterId,\n    resourceType: 'Encounter',\n    identifier: [\n      {\n        system: `http://sys-ids.kemkes.go.id/encounter/${state.visit.organizationId}`,\n        value: state.visit.case_id,\n      },\n    ],\n    status: 'arrived',\n    class: {\n      system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode',\n      code: 'AMB',\n      display: 'ambulatory',\n    },\n    subject: {\n      reference: 'Patient/P00805884304',\n      display: 'Elizabeth Dior',\n    },\n    participant: [\n      {\n        type: [\n          {\n            coding: [\n              {\n                system:\n                  'http://terminology.hl7.org/CodeSystem/v3-ParticipationType',\n                code: 'ATND',\n                display: 'attender',\n              },\n            ],\n          },\n        ],\n        individual: {\n          reference: `Practitioner/N10000001`,\n          display: 'Voigt',\n        },\n      },\n    ],\n    period: {\n      start: state.visit.visit_date,\n      end: state.visit.visit_date,\n    },\n\n    location: [\n      {\n        location: {\n          reference: `Location/574d5ffd-2dc2-453b-a787-d1c63cc89ae4`,\n          display: `PLKB`,\n        },\n        extension: [\n          {\n            url: 'https://fhir.kemkes.go.id/r4/StructureDefinition/ServiceClass',\n            extension: [\n              {\n                url: 'value',\n                valueCodeableConcept: {\n                  coding: [\n                    {\n                      system:\n                        'http://terminology.kemkes.go.id/CodeSystem/locationServiceClass-Outpatient',\n                      code: 'reguler',\n                      display: 'Kelas Reguler',\n                    },\n                  ],\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n    statusHistory: [\n      {\n        status: 'arrived',\n        period: {\n          start: state.visit.visit_date,\n          end: state.visit.visit_date,\n        },\n      },\n    ],\n    serviceProvider: {\n      reference: `Organization/${state.visit.organizationId}`,\n    },\n  };\n\n  return state;\n});\n\n// Post our encounter resources to Satusehat\npost('Encounter', $.encounter);\n\nfn(state => {\n  //  Store the newly created resources, created by the server, into state for the next step\n  state.encounter = state.data;\n  return state;\n});\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);