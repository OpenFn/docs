"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[35632],{28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var t=a(96540);const r={},d=t.createContext(r);function i(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(d.Provider,{value:n},e.children)}},84236:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"library/jobs/auto/ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks","title":"Handling multiple ODK repeat groups","description":"\ud83d\udcdc This job is an official example from OpenFn.","source":"@site/adaptors/library/jobs/auto/ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks","permalink":"/adaptors/library/jobs/auto/ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Handling multiple ODK repeat groups","sidebar_label":"\ud83d\udcdc Handling multiple ODK repeat groups","id":"ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks","keywords":["library","job","expression","salesforce","create","dataPath","dataValue","each","field","fields","lastReferenceValue","merge"]},"sidebar":"adaptors","previous":{"title":"\ud83d\udcdc Create SMS linked to contact","permalink":"/adaptors/library/jobs/auto/Create-SMS-Linked-to-Contact-in-SF"},"next":{"title":"\ud83d\udcdc Merge data into child array then upsert","permalink":"/adaptors/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array"}}');var r=a(74848),d=a(28453);const i={title:"Handling multiple ODK repeat groups",sidebar_label:"\ud83d\udcdc Handling multiple ODK repeat groups",id:"ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks",keywords:["library","job","expression","salesforce","create","dataPath","dataValue","each","field","fields","lastReferenceValue","merge"]},l=void 0,s={},o=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["\ud83d\udcdc ",(0,r.jsx)("em",{children:"This job is an official example from OpenFn."})]}),"\n",(0,r.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Name: Handling multiple ODK repeat groups"}),"\n",(0,r.jsxs)(n.li,{children:["Adaptor: ",(0,r.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,r.jsx)(n.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,r.jsxs)(n.li,{children:["Adaptor Version: ",(0,r.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,r.jsx)(n.code,{children:"latest"})})]}),"\n",(0,r.jsx)(n.li,{children:"Created date unknown"}),"\n",(0,r.jsx)(n.li,{children:"Updated date unknown"}),"\n",(0,r.jsxs)(n.li,{children:["Score: ",(0,r.jsx)("b",{children:"100"})," (an ",(0,r.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"create"}),", ",(0,r.jsx)(n.code,{children:"dataPath"}),", ",(0,r.jsx)(n.code,{children:"dataValue"}),", ",(0,r.jsx)(n.code,{children:"each"}),", ",(0,r.jsx)(n.code,{children:"field"}),", ",(0,r.jsx)(n.code,{children:"fields"}),", ",(0,r.jsx)(n.code,{children:"lastReferenceValue"}),", ",(0,r.jsx)(n.code,{children:"merge"})]}),"\n",(0,r.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"/*\n  Create many records from an ODK submission, moving in and out of repeat\n  blocks, submitted by Taylor Downs @ OpenFn.\n*/\n\nbeta.each(\n  '$.data.data[*]',\n  create(\n    'ODK__c',\n    fields(\n      field('Event_Type__c', dataValue('event_type')),\n      field('Training_Type__c', dataValue('training_type')),\n      field('Event_Leader_ID__c', dataValue('leader')),\n      field('Event_Date__c', dataValue('date')),\n      field('metainstanceid__c', dataValue('*meta-instance-id*'))\n    )\n  )\n);\n\nbeta.each(\n  merge(\n    dataPath('data[*].attendee_new[*]'),\n    fields(field('parentId', lastReferenceValue('id')))\n  ),\n  create(\n    'ODK_Child_2__c',\n    fields(\n      field('ODK__c', dataValue('parentId')),\n      field('Barcode__c', dataValue('new_attendee_id')),\n      field('First_Name__c', dataValue('new_attendee_first_name')),\n      field('Last_Name__c', dataValue('new_attendee_last_name')),\n      field('Phone_Number__c', dataValue('new_attendee_phone'))\n    )\n  )\n);\n\nbeta.each(\n  merge(\n    dataPath('data[*].attendee[*]'),\n    fields(\n      field('parentId', function (state) {\n        return state.references[state.references.length - 1].id;\n      })\n      // ^^ This will get the sfID of the 1st item created.\n    )\n  ),\n  create(\n    'ODK_Child_1__c',\n    fields(\n      field('ODK__c', dataValue('parentId')),\n      field('Barcode__c', dataValue('attendee_id')),\n      field('Late__c', dataValue('late'))\n    )\n  )\n);\n\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);