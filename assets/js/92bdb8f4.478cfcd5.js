"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[61316],{11030:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>g,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=n(58168),r=(n(96540),n(15680));const o={title:"asana developer readme",id:"asana-readme",keywords:["adaptor","readme","asana"]},s="asana Adaptor developer README.md",i={unversionedId:"packages/asana-readme",id:"packages/asana-readme",title:"asana developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/asana",source:"@site/adaptors/packages/asana-readme.md",sourceDirName:"packages",slug:"/packages/asana-readme",permalink:"/adaptors/packages/asana-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"asana developer readme",id:"asana-readme",keywords:["adaptor","readme","asana"]},sidebar:"adaptors",previous:{title:"asana changelog",permalink:"/adaptors/packages/asana-changelog"},next:{title:"Azure Storage",permalink:"/adaptors/azure-storage"}},p={},l=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"How to create an API token",id:"how-to-create-an-api-token",level:3},{value:"Sample expression",id:"sample-expression",level:3},{value:"Find a single task of a given project using the task id.",id:"find-a-single-task-of-a-given-project-using-the-task-id",level:2},{value:"Find the list of tasks of a given project using the project id.",id:"find-the-list-of-tasks-of-a-given-project-using-the-project-id",level:2},{value:"Update a specific task",id:"update-a-specific-task",level:2},{value:"Create a task",id:"create-a-task",level:2},{value:"Update a task or create a new one",id:"update-a-task-or-create-a-new-one",level:2},{value:"Development",id:"development",level:2}],c={toc:l},d="wrapper";function g(e){let{components:a,...n}=e;return(0,r.yg)(d,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"asana-adaptor-developer-readmemd"},"asana Adaptor developer README.md"),(0,r.yg)("p",null,"Source: ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/asana"},"https://github.com/OpenFn/adaptors/tree/main/packages/asana")),(0,r.yg)("h1",{id:"language-asana"},"language-asana"),(0,r.yg)("p",null,"Language Pack for connecting with Asana."),(0,r.yg)("h2",{id:"documentation"},"Documentation"),(0,r.yg)("h3",{id:"configuration"},"Configuration"),(0,r.yg)("p",null,"View all the required and optional properties for ",(0,r.yg)("inlineCode",{parentName:"p"},"state.configuration")," in the\nofficial\n",(0,r.yg)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/asana-configuration-schema/"},"configuration-schema"),"\ndefinition."),(0,r.yg)("h3",{id:"how-to-create-an-api-token"},"How to create an API token"),(0,r.yg)("p",null,"Using Asana's API requires having an API token. To generate that token, head to\nthe ",(0,r.yg)("a",{parentName:"p",href:"https://app.asana.com/0/developer-console"},"Asana developer console")," and\nenter the ",(0,r.yg)("strong",{parentName:"p"},"Personal access tokens")," section.\n",(0,r.yg)("a",{parentName:"p",href:"https://developers.asana.com/docs/api-explorer"},"For API Reference docs")),(0,r.yg)("p",null,"There you can click on ",(0,r.yg)("strong",{parentName:"p"},"+New access token"),". A prompt will be opened allowing\nyou to give the token a name and then create it."),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"Note: Treat your PAT like you would with a password. Do not share it or display\nit online.")),(0,r.yg)("h3",{id:"sample-expression"},"Sample expression"),(0,r.yg)("h2",{id:"find-a-single-task-of-a-given-project-using-the-task-id"},"Find a single task of a given project using the task id."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getTask('1234', {\n  opt_fields: 'name,assignee',\n});\n")),(0,r.yg)("h2",{id:"find-the-list-of-tasks-of-a-given-project-using-the-project-id"},"Find the list of tasks of a given project using the project id."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"getTasks('22889593722', {\n  opt_fields: 'name,notes,assignee',\n});\n")),(0,r.yg)("h2",{id:"update-a-specific-task"},"Update a specific task"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"updateTask('12344', {\n  name: 'test',\n  approval_status: 'pending',\n  assignee: '12345',\n});\n")),(0,r.yg)("h2",{id:"create-a-task"},"Create a task"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"createTask({\n  name: 'test',\n  approval_status: 'pending',\n  assignee: '12345',\n});\n")),(0,r.yg)("h2",{id:"update-a-task-or-create-a-new-one"},"Update a task or create a new one"),(0,r.yg)("p",null,"You can use a field name literal as ",(0,r.yg)("inlineCode",{parentName:"p"},"externalId")," to match a specific task. If\nthe task does not exist, a new one will be created. The first parameter in this\nfunction should be the ",(0,r.yg)("inlineCode",{parentName:"p"},"project_id"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"upsertTask('12344', {\n  externalId: 'name',\n  data: {\n    name: 'A new task',\n    projects: ['12344'],\n    notes: 'This is a new task',\n  },\n});\n")),(0,r.yg)("h2",{id:"development"},"Development"),(0,r.yg)("p",null,"Clone the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),". Follow the\n",(0,r.yg)("inlineCode",{parentName:"p"},"Getting Started")," guide inside to get set up."),(0,r.yg)("p",null,"Run tests using ",(0,r.yg)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,r.yg)("p",null,"Build the project using ",(0,r.yg)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,r.yg)("p",null,"To just build the docs run ",(0,r.yg)("inlineCode",{parentName:"p"},"pnpm build docs")))}g.isMDXComponent=!0},15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>m});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),l=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=l(e.components);return t.createElement(p.Provider,{value:a},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=l(n),u=r,m=d["".concat(p,".").concat(u)]||d[u]||g[u]||o;return n?t.createElement(m,s(s({ref:a},c),{},{components:n})):t.createElement(m,s({ref:a},c))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var p in a)hasOwnProperty.call(a,p)&&(i[p]=a[p]);i.originalType=e,i[d]="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);