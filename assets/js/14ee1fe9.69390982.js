"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[10037],{8011:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"packages/maximo-readme","title":"maximo developer readme","description":"Source//github.com/OpenFn/adaptors/tree/main/packages/maximo","source":"@site/adaptors/packages/maximo-readme.md","sourceDirName":"packages","slug":"/packages/maximo-readme","permalink":"/adaptors/packages/maximo-readme","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"maximo developer readme","id":"maximo-readme","keywords":["adaptor","readme","maximo"]},"sidebar":"adaptors","previous":{"title":"Changelog","permalink":"/adaptors/packages/maximo-changelog"},"next":{"title":"Functions","permalink":"/adaptors/packages/medicmobile-docs"}}');var o=a(74848),s=a(28453);const r={title:"maximo developer readme",id:"maximo-readme",keywords:["adaptor","readme","maximo"]},i="maximo Adaptor developer README.md",d={},c=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Fetch",id:"fetch",level:3},{value:"sample &#39;fetch&#39; expression",id:"sample-fetch-expression",level:4},{value:"sample &#39;create&#39; expression",id:"sample-create-expression",level:3},{value:"sample &#39;update75&#39; expression",id:"sample-update75-expression",level:3},{value:"Development",id:"development",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"maximo-adaptor-developer-readmemd",children:"maximo Adaptor developer README.md"})}),"\n",(0,o.jsxs)(n.p,{children:["Source: ",(0,o.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors/tree/main/packages/maximo",children:"https://github.com/OpenFn/adaptors/tree/main/packages/maximo"})]}),"\n",(0,o.jsx)(n.h1,{id:"language-maximo",children:"Language Maximo"}),"\n",(0,o.jsx)(n.p,{children:"Language Pack for building expressions and operations to access IBM Maximo EAM."}),"\n",(0,o.jsx)(n.h2,{id:"documentation",children:"Documentation"}),"\n",(0,o.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["View all the required and optional properties for ",(0,o.jsx)(n.code,{children:"state.configuration"})," in the\nofficial\n",(0,o.jsx)(n.a,{href:"https://docs.openfn.org/adaptors/packages/maximo-configuration-schema/",children:"configuration-schema"}),"\ndefinition."]}),"\n",(0,o.jsx)(n.h3,{id:"fetch",children:"Fetch"}),"\n",(0,o.jsx)(n.h4,{id:"sample-fetch-expression",children:"sample 'fetch' expression"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"fetch({\n  endpoint: 'maxrest/rest/os/mxinventory',\n  query: {\n    ITEMNUM: '01226',\n    _format: 'json',\n  },\n  postUrl: 'https://www.openfn.org/inbox/not-real',\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"sample-create-expression",children:"sample 'create' expression"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"create({\n  endpoint: 'maxrest/rest/os/mxinvbal/',\n  body: function (state) {\n    return {\n      ITEMNUM: dataValue('form.ITEMNUM')(state),\n      ITEMSETID: dataValue('form.ITEMSETID')(state),\n      SITEID: dataValue('form.SITEID')(state),\n      LOCATION: dataValue('form.LOCATION')(state),\n      ISSUEUNIT: 'FOO',\n      PHYSCNT: dataValue('PHYSCNT')(state),\n      BINNUM: dataValue('form.BINNUM')(state),\n    };\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h3,{id:"sample-update75-expression",children:"sample 'update75' expression"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"update75({\n  endpoint: state => {\n    return (\n      'maxrest/rest/os/mxinvbal/' +\n      dataValue('form.question1.INVBALANCESID')(state)\n    );\n  },\n  body: state => {\n    return {\n      _action: 'AddChange', //this is required for the old Maximo API!\n      ITEMNUM: dataValue('form.ITEMNUM')(state),\n      ITEMSETID: dataValue('form.ITEMSETID')(state),\n      SITEID: dataValue('form.SITEID')(state),\n      LOCATION: dataValue('form.LOCATION')(state),\n      PHYSCNT: dataValue('form.PHYSCNT')(state),\n      BINNUM: dataValue('form.BINNUM')(state),\n    };\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,o.jsxs)(n.p,{children:["Clone the ",(0,o.jsx)(n.a,{href:"https://github.com/OpenFn/adaptors",children:"adaptors monorepo"}),". Follow the\n",(0,o.jsx)(n.code,{children:"Getting Started"})," guide inside to get set up."]}),"\n",(0,o.jsxs)(n.p,{children:["Run tests using ",(0,o.jsx)(n.code,{children:"pnpm run test"})," or ",(0,o.jsx)(n.code,{children:"pnpm run test:watch"})]}),"\n",(0,o.jsxs)(n.p,{children:["Build the project using ",(0,o.jsx)(n.code,{children:"pnpm build"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["To just build the docs run ",(0,o.jsx)(n.code,{children:"pnpm build docs"})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>i});var t=a(96540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);