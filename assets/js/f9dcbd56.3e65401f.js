"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[38588],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(96540);const o={},a=t.createContext(o);function l(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(a.Provider,{value:n},e.children)}},60194:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"build-for-developers/cli-usage","title":"Basic usage of OpenFn CLI","description":"This page shows examples for some of the most common usages of the CLI, including:","source":"@site/docs/build-for-developers/cli-usage.md","sourceDirName":"build-for-developers","slug":"/cli-usage","permalink":"/documentation/cli-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/docs/build-for-developers/cli-usage.md","tags":[],"version":"current","frontMatter":{"title":"Basic usage of OpenFn CLI","sidebar_label":"Basic usage","slug":"/cli-usage"},"sidebar":"docs","previous":{"title":"Get started","permalink":"/documentation/cli"},"next":{"title":"CLI walkthrough","permalink":"/documentation/cli-walkthrough"}}');var o=s(74848),a=s(28453);const l={title:"Basic usage of OpenFn CLI",sidebar_label:"Basic usage",slug:"/cli-usage"},r=void 0,i={},d=[{value:"Get help",id:"get-help",level:3},{value:"Run a job",id:"run-a-job",level:3},{value:"Handle output state",id:"handle-output-state",level:3},{value:"Adjust logging level",id:"adjust-logging-level",level:3},{value:"Maintain auto-installed adaptors repo",id:"maintain-auto-installed-adaptors-repo",level:3},{value:"Run a workflow",id:"run-a-workflow",level:3},{value:"Load adaptor documentation",id:"load-adaptor-documentation",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"This page shows examples for some of the most common usages of the CLI, including:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"get help"}),"\n",(0,o.jsx)(n.li,{children:"run a job"}),"\n",(0,o.jsx)(n.li,{children:"saving the state"}),"\n",(0,o.jsx)(n.li,{children:"adjust logging level"}),"\n",(0,o.jsx)(n.li,{children:"maintain adaptors repo"}),"\n",(0,o.jsx)(n.li,{children:"run a workflow"}),"\n",(0,o.jsx)(n.li,{children:"load adaptor documentation"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"get-help",children:"Get help"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn --help\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn deploy --help\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"run-a-job",children:"Run a job"}),"\n",(0,o.jsxs)(n.p,{children:["To run a single job, you must explicitly specify which adaptor to use - see the ",(0,o.jsx)(n.a,{href:"/adaptors",children:"publicly available adaptors"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Adaptors are automatically installed if the specified version is not detected."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Run a job with the http adaptor:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -a http\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Use a specific adaptor version:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -a http@2.0.0\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Pass a path to a locally installed adaptor:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -a http=/repo/openfn/adaptors/my-http-build\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Use the local adaptors monorepo build:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -ma http\n"})}),"\n",(0,o.jsx)(n.p,{children:"You must set the path to the monorepo in the env var OPENFN_ADAPTORS_REPO. For\nexample:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"OPENFN_ADAPTORS_REPO=~/openfn/adaptors openfn job.js -ma http\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You would typically set this in a configuration file like ",(0,o.jsx)(n.code,{children:".profile"})," or\n",(0,o.jsx)(n.code,{children:".zshrc"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"Remember to rebuild the adaptor before using it!"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Run from a specific start step"})}),"\n",(0,o.jsx)(n.p,{children:"You can specify a step as an exact id, or a partial substring from the name or\nid."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to.job.js --start cf628d9e -s path/to/input.json\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you have previously cached this workflow's results, the CLI will\nautomatically load the correct input from the cache if you omit the ",(0,o.jsx)(n.code,{children:"-s"}),"\nargument:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to.job.js --start cf628d9e\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also pass ",(0,o.jsx)(n.code,{children:"--end"})," to make the workflow exit early."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Run a single step"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"--only"})," works just like ",(0,o.jsx)(n.code,{children:"--start"})," and ",(0,o.jsx)(n.code,{children:"--end"}),". You can partially match a step\nname or id, and input will be automatically loaded from the cache."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to.job.js --only cf628d9e\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"handle-output-state",children:"Handle output state"}),"\n",(0,o.jsxs)(n.p,{children:["After the job finishes, the CLI writes the resulting state to disk. By default,\nit creates an ",(0,o.jsx)(n.code,{children:"output.json"})," next to the job file."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"You can specify custom paths for the output and state files:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -a adaptor-name -o path/to/output.json -s path/to/state.json\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Use ",(0,o.jsx)(n.code,{children:"-O"})," to return the output through stdout:"]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -a adaptor-name -O\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Save all step results locally"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/workflow.json --cache-steps\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Each step will write its output to ",(0,o.jsx)(n.code,{children:"./cli-cache/<workflow-name>/<step-id>.json"}),".\nThe ",(0,o.jsx)(n.code,{children:".cli-cache"})," folder will be git-ignored and the cache will be cleared when\nthe workflow is re-run with ",(0,o.jsx)(n.code,{children:"--cache-steps"})," enabled."]}),"\n",(0,o.jsxs)(n.p,{children:["To ",(0,o.jsx)(n.em,{children:"always"})," cache, set the ",(0,o.jsx)(n.code,{children:"OPENFN_ALWAYS_CACHE_STEPS"})," env var to ",(0,o.jsx)(n.code,{children:'"true"'}),", and\npass ",(0,o.jsx)(n.code,{children:"--no-cache-steps"})," to disable it temporarily."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"adjust-logging-level",children:"Adjust logging level"}),"\n",(0,o.jsxs)(n.p,{children:["You can pass ",(0,o.jsx)(n.code,{children:"-l info"})," or ",(0,o.jsx)(n.code,{children:"--log info"})," to get more feedback about what's\nhappening during runtime. Below is the list of different log levels"]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"log level"}),(0,o.jsx)(n.th,{children:"description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"openfn path/to/job.js -a adaptor -l none"})}),(0,o.jsx)(n.td,{children:"Quiet mode"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"openfn path/to/job.js -a adaptor -l default"})}),(0,o.jsx)(n.td,{children:"Top level information of what is happening"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"openfn path/to/job.js -a adaptor -l info"})}),(0,o.jsx)(n.td,{children:"Get more feedback about runtime, cli and the job"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"openfn path/to/job.js -a adaptor -l debug"})}),(0,o.jsx)(n.td,{children:"Get information about runtime, cli, compiler and the job"})]})]})]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"maintain-auto-installed-adaptors-repo",children:"Maintain auto-installed adaptors repo"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"List the repo contents:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn repo list\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Specify the repo folder using the ",(0,o.jsx)(n.code,{children:"OPENFN_REPO_DIR"})," env var:"]})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"export OPENFN_REPO_DIR=/path/to/repo\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Auto-install adaptors and check if a matching version is found in the repo:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/job.js -a adaptor-name\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Remove all adaptors from the repo:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn repo clean\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"run-a-workflow",children:"Run a workflow"}),"\n",(0,o.jsxs)(s,{children:[(0,o.jsx)("summary",{children:"Click to view an example workflow's JSON structure"}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "options": {\n    "start": "a" // optionally specify the start node (defaults to steps[0])\n  },\n  "workflows": {\n    "steps": [\n      {\n        "id": "a",\n        "expression": "fn((state) => state)", // code or a path\n        "adaptor": "@openfn/language-common@1.75", // specifiy the adaptor to use (version optional)\n        "state": {\n          "data": {} // optionally pre-populate the data object (this will be overriden by keys in in previous state)\n        },\n        "configuration": {}, // Use this to pass credentials\n        "next": {\n          // This object defines which steps to call next\n          // All edges returning true will run\n          // If there are no next edges, the workflow will end\n          "b": true,\n          "c": {\n            "condition": "!state.error" // Note that this is an expression, not a function\n          }\n        }\n      }\n    ]\n  }\n}\n'})})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"To run a workflow:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn path/to/workflow.json -o tmp/output.json\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Check out this detailed ",(0,o.jsx)(n.a,{href:"cli-walkthrough#7-running-workflows",children:"tutorial"})," on\nrunning workflows via the CLI."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"load-adaptor-documentation",children:"Load adaptor documentation"}),"\n",(0,o.jsx)(n.p,{children:"The CLI can list adaptor documentation in the terminal. Note that it has to\ndownload the adaptor to the repo (if it's not already there), which can take a\nmoment."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Print a list of adaptor functions"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn docs http\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Show docs for a specific function"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"openfn docs http post\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);