"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[17051],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},47724:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"library/jobs/auto/Get-CommCare-Forms-Bulk-Extract-2022-05-16","title":"Get CommCare Forms (Bulk Extract)","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Get-CommCare-Forms-Bulk-Extract-2022-05-16.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Get-CommCare-Forms-Bulk-Extract-2022-05-16","permalink":"/adaptors/library/jobs/auto/Get-CommCare-Forms-Bulk-Extract-2022-05-16","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Get CommCare Forms (Bulk Extract)","sidebar_label":"Get CommCare Forms (Bulk Extract)","id":"Get-CommCare-Forms-Bulk-Extract-2022-05-16","keywords":["library","job","expression","http","each","get","post"]},"sidebar":"adaptors","previous":{"title":"Catch Error in HTTP Request","permalink":"/adaptors/library/jobs/auto/Catch-Error-in-HTTP-Request-2016-08-26"},"next":{"title":"aleksa cron","permalink":"/adaptors/library/jobs/auto/aleksa-cron-2022-04-29"}}');var o=n(74848),s=n(28453);const a={title:"Get CommCare Forms (Bulk Extract)",sidebar_label:"Get CommCare Forms (Bulk Extract)",id:"Get-CommCare-Forms-Bulk-Extract-2022-05-16",keywords:["library","job","expression","http","each","get","post"]},i=void 0,l={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,o.jsx)(t.h2,{id:"metadata",children:"Metadata"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Name: Get CommCare Forms (Bulk Extract)"}),"\n",(0,o.jsxs)(t.li,{children:["Adaptor: ",(0,o.jsx)(t.a,{href:"https://www.github.com/openfn/language-http",children:(0,o.jsx)(t.code,{children:"@openfn/language-http"})})]}),"\n",(0,o.jsxs)(t.li,{children:["Adaptor Version: ",(0,o.jsx)(t.a,{href:"https://www.github.com/openfn/language-http/releases/tag/v3.1.7",children:(0,o.jsx)(t.code,{children:"v3.1.7"})})]}),"\n",(0,o.jsx)(t.li,{children:"Created over 3 years ago"}),"\n",(0,o.jsx)(t.li,{children:"Updated over 3 years ago"}),"\n",(0,o.jsxs)(t.li,{children:["Score: ",(0,o.jsx)("b",{children:"0"})," (an ",(0,o.jsx)(t.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"each"}),", ",(0,o.jsx)(t.code,{children:"get"}),", ",(0,o.jsx)(t.code,{children:"post"})]}),"\n",(0,o.jsx)(t.h2,{id:"expression",children:"Expression"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"// Your job goes here.\nget(\n  'https://www.commcarehq.org/a/commcare-demo-2035/api/v0.5/form/',\n  {\n    query: {\n      limit: 1000, //max limit: 1000\n      offset: state.meta && state.meta.next ? state.meta.limit + state.meta.offset : 0,\n      received_on_start: '2022-05-16',\n      received_on_end: '2022-05-18',\n      xmlns: 'http://openrosa.org/formdesigner/C87A7E2A-D98D-4E2C-9F0B-997E0AE635C6',\n    },\n  },\n  state => {\n    const { meta, objects } = state.data;\n    const { openfnInboxUrl } = state.configuration;\n    const xmlnsList = [\n      'http://openrosa.org/formdesigner/C87A7E2A-D98D-4E2C-9F0B-997E0AE635C6'\n\n    ];\n\n    // const forms = objects.filter(obj => xmlnsList.includes(obj.form['@xmlns']));\n    const forms = objects;\n\n    state.configuration = { baseUrl: 'https://www.openfn.org' };\n    console.log('Posting form submissions to OpenFn Inbox...');\n\n    return each(forms, state => {\n      return post(`/inbox/${openfnInboxUrl}`, { body: state.data }, state => ({\n        ...state,\n        data: {},\n        references: [],\n      }))(state);\n    })(state);\n  }\n);\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);