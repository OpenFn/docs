"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[17357],{28453:(e,a,r)=>{r.d(a,{R:()=>s,x:()=>o});var n=r(96540);const t={},i=n.createContext(t);function s(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(i.Provider,{value:a},e.children)}},43819:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"library/jobs/auto/upsert-many-items-in-array-with-value-outside-array","title":"Merge data into child array then upsert","description":"\ud83d\udcdc This job is an official example from OpenFn.","source":"@site/adaptors/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array","permalink":"/adaptors/library/jobs/auto/upsert-many-items-in-array-with-value-outside-array","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Merge data into child array then upsert","sidebar_label":"\ud83d\udcdc Merge data into child array then upsert","id":"upsert-many-items-in-array-with-value-outside-array","keywords":["library","job","expression","salesforce","dataPath","dataValue","each","field","fields","merge","relationship","upsert"]},"sidebar":"adaptors","previous":{"title":"\ud83d\udcdc Handling multiple ODK repeat groups","permalink":"/adaptors/library/jobs/auto/ODK-Create-Many-Records-Moving-In-And-Out-Of-Repeat-Blocks"},"next":{"title":"WF4-2 Bulk upsert Services","permalink":"/adaptors/library/jobs/auto/WF4-2-Bulk-upsert-Services-2023-05-19"}}');var t=r(74848),i=r(28453);const s={title:"Merge data into child array then upsert",sidebar_label:"\ud83d\udcdc Merge data into child array then upsert",id:"upsert-many-items-in-array-with-value-outside-array",keywords:["library","job","expression","salesforce","dataPath","dataValue","each","field","fields","merge","relationship","upsert"]},o=void 0,d={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const a={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a.p,{children:["\ud83d\udcdc ",(0,t.jsx)("em",{children:"This job is an official example from OpenFn."})]}),"\n",(0,t.jsx)(a.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Name: Merge data into child array then upsert"}),"\n",(0,t.jsxs)(a.li,{children:["Adaptor: ",(0,t.jsx)(a.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(a.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,t.jsxs)(a.li,{children:["Adaptor Version: ",(0,t.jsx)(a.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(a.code,{children:"latest"})})]}),"\n",(0,t.jsx)(a.li,{children:"Created date unknown"}),"\n",(0,t.jsx)(a.li,{children:"Updated date unknown"}),"\n",(0,t.jsxs)(a.li,{children:["Score: ",(0,t.jsx)("b",{children:"100"})," (an ",(0,t.jsx)(a.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.code,{children:"dataPath"}),", ",(0,t.jsx)(a.code,{children:"dataValue"}),", ",(0,t.jsx)(a.code,{children:"each"}),", ",(0,t.jsx)(a.code,{children:"field"}),", ",(0,t.jsx)(a.code,{children:"fields"}),", ",(0,t.jsx)(a.code,{children:"merge"}),", ",(0,t.jsx)(a.code,{children:"relationship"}),", ",(0,t.jsx)(a.code,{children:"upsert"})]}),"\n",(0,t.jsx)(a.h2,{id:"expression",children:"Expression"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-js",children:"each(\n  merge(\n    dataPath('form.ID_cards_given_to_vendor[*]'),\n    fields(\n      field('Vendor_Id', dataValue('form.ID_vendor')),\n      field('form_finished_time', dataValue('form.meta.timeEnd'))\n    )\n  ),\n  upsert(\n    'Small_Packet__c',\n    'sp_id__c',\n    fields(\n      field('sp_id__c', dataValue('ID_cards_given_to_vendor')),\n      relationship('Vendor__r', 'Badge_Code__c', dataValue('Vendor_Id')),\n      field(\n        'Small_Packet_Distribution_Date__c',\n        dataValue('form_finished_time')\n      )\n    )\n  )\n);\n\n"})})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);