"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[1281],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(96540);const s={},r=o.createContext(s);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:t},e.children)}},55655:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"library/jobs/auto/01c-Create-person_position-record-2019-12-13","title":"01c/ Create person_position record","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/01c-Create-person_position-record-2019-12-13.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/01c-Create-person_position-record-2019-12-13","permalink":"/adaptors/library/jobs/auto/01c-Create-person_position-record-2019-12-13","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"01c/ Create person_position record","sidebar_label":"01c/ Create person_position record","id":"01c-Create-person_position-record-2019-12-13","keywords":["library","job","expression","http","alterState","post"]},"sidebar":"adaptors","previous":{"title":"02b/ Initiate Payments","permalink":"/adaptors/library/jobs/auto/02b-Initiate-Payments-2019-11-19"},"next":{"title":"01a/ Create Registrants","permalink":"/adaptors/library/jobs/auto/01a-Create-Registrants-2019-11-19"}}');var s=n(74848),r=n(28453);const a={title:"01c/ Create person_position record",sidebar_label:"01c/ Create person_position record",id:"01c-Create-person_position-record-2019-12-13",keywords:["library","job","expression","http","alterState","post"]},i=void 0,p={},c=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,s.jsx)(t.h2,{id:"metadata",children:"Metadata"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Name: 01c/ Create person_position record"}),"\n",(0,s.jsxs)(t.li,{children:["Adaptor: ",(0,s.jsx)(t.a,{href:"https://www.github.com/openfn/language-http",children:(0,s.jsx)(t.code,{children:"@openfn/language-http"})})]}),"\n",(0,s.jsxs)(t.li,{children:["Adaptor Version: ",(0,s.jsx)(t.a,{href:"https://www.github.com/openfn/language-http",children:(0,s.jsx)(t.code,{children:"latest"})})]}),"\n",(0,s.jsx)(t.li,{children:"Created almost 6 years ago"}),"\n",(0,s.jsx)(t.li,{children:"Updated over 5 years ago"}),"\n",(0,s.jsxs)(t.li,{children:["Score: ",(0,s.jsx)("b",{children:"0"})," (an ",(0,s.jsx)(t.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"alterState"}),", ",(0,s.jsx)(t.code,{children:"post"})]}),"\n",(0,s.jsx)(t.h2,{id:"expression",children:"Expression"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// Pluck out parts of the ODK submission and prepare our 'person_postion' object that we\n// will use in multiple requests to iHRIS. =====================================\nalterState(state => {\n  console.log(state);\n  // The position field in the form holds the position ID and the salary\n  const positionData = state.references[0].RegistrationForm.position.split('_');\n  const startDateComponents = state.references[0].RegistrationForm.start_date.split('-')\n  state.person_position = {\n    'form[person_position][0][0][fields][id]': 'person_position|0',\n    'form[person_position][0][0][fields][parent]': state.data.person_id,\n    'form[person_position][0][0][fields][position]': 'position|'+positionData[0],\n    'form[person_position][0][0][fields][start_date][day]': startDateComponents[2],\n    'form[person_position][0][0][fields][start_date][month]': startDateComponents[1],\n    'form[person_position][0][0][fields][start_date][year]': startDateComponents[0],\n    'form[salary][0][0][fields][salary]': 'currency|3='+positionData[1],\n    'can_edit_position': '1'\n  };\n  state.person_contact = {\n    'form[person_contact_personal][0][0][fields][id]': 'person_contact_personal|0',\n    'form[person_contact_personal][0][0][fields][parent]': state.data.person_id,\n    'form[person_contact_personal][0][0][fields][mobile_phone]': state.references[0].RegistrationForm.phone_number,\n    'contact_type': 'personal',\n  };\n  return state;\n});\n\n// =============================================================================\n// Create records via iHRIS api, with the hostUrl, port, and authentication\n// handled by the credential ===================================================\npost(\n  '/manage/make_offer',\n  {\n    formData: state => {\n      state.person_position.submit_type = 'confirm';\n      return state.person_position;\n    },\n  },\n  post('/manage/make_offer', {\n    formData: state => {\n      state.person_position.submit_type = 'save';\n      return state.person_position;\n    },\n    options: {\n      successCodes: [302],\n    },\n  })\n);\n\npost(\n  '/manage/contact?contact_type=personal',\n  {\n    formData: state => {\n      state.person_contact.submit_type = 'confirm';\n      return state.person_contact;\n    },\n  },\n  post('/manage/contact?contact_type=personal', {\n    formData: state => {\n      state.person_contact.submit_type = 'save';\n      return state.person_contact;\n    },\n    options: {\n      successCodes: [302],\n    },\n  })\n);\n\n\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);