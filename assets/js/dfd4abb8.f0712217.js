"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[24998],{28453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>i});var s=a(96540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}},49967:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>_,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"library/jobs/auto/Coach-Session-Register-2021-05-03","title":"Coach Session Register","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Coach-Session-Register-2021-05-03.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Coach-Session-Register-2021-05-03","permalink":"/adaptors/library/jobs/auto/Coach-Session-Register-2021-05-03","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Coach Session Register","sidebar_label":"Coach Session Register","id":"Coach-Session-Register-2021-05-03","keywords":["library","job","expression","salesforce","dataValue","each","field","fields","query","relationship","upsert"]},"sidebar":"adaptors","previous":{"title":"Create Intervention","permalink":"/adaptors/library/jobs/auto/Create-Intervention-2021-04-08"},"next":{"title":"Attendance Non Skillz","permalink":"/adaptors/library/jobs/auto/Attendance-Non-Skillz-2021-06-14"}}');var t=a(74848),o=a(28453);const r={title:"Coach Session Register",sidebar_label:"Coach Session Register",id:"Coach-Session-Register-2021-05-03",keywords:["library","job","expression","salesforce","dataValue","each","field","fields","query","relationship","upsert"]},i=void 0,c={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,t.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Name: Coach Session Register"}),"\n",(0,t.jsxs)(n.li,{children:["Adaptor: ",(0,t.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce",children:(0,t.jsx)(n.code,{children:"@openfn/language-salesforce"})})]}),"\n",(0,t.jsxs)(n.li,{children:["Adaptor Version: ",(0,t.jsx)(n.a,{href:"https://www.github.com/openfn/language-salesforce/releases/tag/v2.7.4",children:(0,t.jsx)(n.code,{children:"v2.7.4"})})]}),"\n",(0,t.jsx)(n.li,{children:"Created over 4 years ago"}),"\n",(0,t.jsx)(n.li,{children:"Updated 7 months ago"}),"\n",(0,t.jsxs)(n.li,{children:["Score: ",(0,t.jsx)("b",{children:"0"})," (an ",(0,t.jsx)(n.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"dataValue"}),", ",(0,t.jsx)(n.code,{children:"each"}),", ",(0,t.jsx)(n.code,{children:"field"}),", ",(0,t.jsx)(n.code,{children:"fields"}),", ",(0,t.jsx)(n.code,{children:"query"}),", ",(0,t.jsx)(n.code,{children:"relationship"}),", ",(0,t.jsx)(n.code,{children:"upsert"})]}),"\n",(0,t.jsx)(n.h2,{id:"expression",children:"Expression"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"// push to production\nquery(\n  `SELECT Coach_A__c, Coach_A__r.Name from Event__c where CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const present = dataValue('form.present')(state).toLowerCase();\n\n  function getSessionValue() {\n    let value;\n    switch (present) {\n      case 'yes':\n        value = 'X';\n        break;\n      case 'no':\n        value = 'A';\n        break;\n      case '':\n        value = 'N';\n        break;\n      default:\n        value = 'U';\n        break;\n    }\n    return value;\n  }\n\n  const session_text = dataValue('form.session')(state);\n\n  const session_id = session_text.trim().slice(0, session_text.indexOf(' ')).slice(1);\n  console.log(\"session_id: \", session_id);\n\n  const coachname = dataValue('form.coach_name')(state)\n    ? dataValue('form.coach_name')(state)\n    : state.references[0].records[0].Coach_A__r.Name;\n\n  let external_id = `${dataValue('form.case.@case_id')(state)}\n    ${coachname}`; //case_id + coach_name for external Id\n\n  state.data.commcare_external_id = external_id.toLowerCase().replace(/\\s/g, '').trim();\n\n  state.data.dynamicFields = [\n    field(`Session_${session_id}__c`, getSessionValue()),\n    field(`Session_${session_id}_Date__c`, dataValue('form.date')(state)),\n    //field(`Session_${session_id}_Duration__c`, dataValue('form.duration')(state)), //NOTE: Duration fields don't exist in SF?\n  ];\n\n  state.data.durationFields = [field(`Session_${session_id}_Duration__c`, dataValue('form.duration')(state))];\n  console.log(state.data.durationFields);\n\n  return state;\n});\n\nupsert('Event__c', 'CommCare_Case_ID__c', state => ({\n  ...fields(field('CommCare_Case_ID__c', dataValue('form.case.@case_id'))),\n  ...fields(...state.data.durationFields),\n}));\n\nquery(\n  `SELECT Coach_A__c, Coach_A__r.CommCare_Ext_ID__c from Event__c where CommCare_Case_ID__c = '${state.data.form.case['@case_id']}'`\n);\n\nfn(state => {\n  const coaches = dataValue('form.coach_name')(state).split(' ');\n  const dynamicFields = state.data.dynamicFields;\n  const commcare_external_id = state.data.commcare_external_id;\n  const caseid = state.data.form.case['@case_id'];\n  return each(\n    coaches,\n    upsert('Attendance__c', 'CommCare_Ext_ID__c', state => ({\n      ...fields(\n        //relationship('RecordType', 'Name', 'Coach Development'),\n        field('RecordTypeId', '012500000009jqaAAA'),\n        relationship('Event__r', 'CommCare_Case_ID__c', caseid),\n        relationship('Person_Attendance__r', 'CommCare_Ext_ID__c', state => {\n          const coach_name = state.data;\n          return coach_name;\n        }),\n        field('CommCare_Ext_ID__c', commcare_external_id)\n      ),\n      ...fields(...dynamicFields),\n    }))\n  )(state);\n});\n\n"})})]})}function _(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);