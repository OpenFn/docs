"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[78417],{28453:(e,s,t)=>{t.d(s,{R:()=>a,x:()=>i});var n=t(96540);const r={},o=n.createContext(r);function a(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:s},e.children)}},93935:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"library/jobs/auto/commcare-reports-api-2016-08-29","title":"commcare reports api","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/commcare-reports-api-2016-08-29.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/commcare-reports-api-2016-08-29","permalink":"/adaptors/library/jobs/auto/commcare-reports-api-2016-08-29","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"commcare reports api","sidebar_label":"commcare reports api","id":"commcare-reports-api-2016-08-29","keywords":["library","job","expression","http","get","post","Promise"]},"sidebar":"adaptors","previous":{"title":"04b/ Update ODK form","permalink":"/adaptors/library/jobs/auto/04b-Update-ODK-form-2019-12-03"},"next":{"title":"Changelog","permalink":"/adaptors/packages/http-changelog"}}');var r=t(74848),o=t(28453);const a={title:"commcare reports api",sidebar_label:"commcare reports api",id:"commcare-reports-api-2016-08-29",keywords:["library","job","expression","http","get","post","Promise"]},i=void 0,c={},l=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,r.jsx)(s.h2,{id:"metadata",children:"Metadata"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Name: commcare reports api"}),"\n",(0,r.jsxs)(s.li,{children:["Adaptor: ",(0,r.jsx)(s.a,{href:"https://www.github.com/openfn/language-http",children:(0,r.jsx)(s.code,{children:"@openfn/language-http"})})]}),"\n",(0,r.jsxs)(s.li,{children:["Adaptor Version: ",(0,r.jsx)(s.a,{href:"https://www.github.com/openfn/language-http/releases/tag/v0.0.9",children:(0,r.jsx)(s.code,{children:"v0.0.9"})})]}),"\n",(0,r.jsx)(s.li,{children:"Created about 9 years ago"}),"\n",(0,r.jsx)(s.li,{children:"Updated almost 9 years ago"}),"\n",(0,r.jsxs)(s.li,{children:["Score: ",(0,r.jsx)("b",{children:"0"})," (an ",(0,r.jsx)(s.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"get"}),", ",(0,r.jsx)(s.code,{children:"post"}),", ",(0,r.jsx)(s.code,{children:"Promise"})]}),"\n",(0,r.jsx)(s.h2,{id:"expression",children:"Expression"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:'get("api/v0.5/configurablereportdata/daily_form_stats", {\n    query: function(state) {\n      return { date: state.lastSubmissionDate || "Aug 29, 2016 4:44:26 PM" }\n    },\n    callback: function(state) {\n      // Pick submissions out in order to avoid `post` overwriting `response`.\n      var submissions = state.response.body;\n      // Use .slice to limit how much you send to the server for testing\n      // return submissions\n      return submissions.reduce(function(acc, item) {\n        return acc.then(\n          post(\n            "http://localhost:4000/inbox/8ad63a29-5c25-4d8d-ba2c-fe6274dcfbab",\n            { body: item }\n          )\n        )\n      }, Promise.resolve(state))\n      .then(function(state) {\n        console.log(submissions.length)\n        if (submissions.length) {\n          state.lastSubmissionDate = submissions[submissions.length-1].SubmissionDate\n        }\n        return state;\n      })\n      .then(function(state) {\n        delete state.response\n        return state;\n      })\n    }\n  })\n'})})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);