"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[98196],{28901:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=a(58168),o=(a(96540),a(15680));const r={sidebar_label:"Glossary",title:"A glossary for data integration"},s=void 0,i={unversionedId:"get-started/glossary",id:"get-started/glossary",title:"A glossary for data integration",description:"This glossary establishes some of the foundational concepts and terms used while",source:"@site/docs/get-started/glossary.md",sourceDirName:"get-started",slug:"/get-started/glossary",permalink:"/documentation/get-started/glossary",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/docs/get-started/glossary.md",tags:[],version:"current",frontMatter:{sidebar_label:"Glossary",title:"A glossary for data integration"},sidebar:"docs",previous:{title:"Key Concepts",permalink:"/documentation/get-started/terminology"},next:{title:"Standards",permalink:"/documentation/get-started/standards"}},l={},d=[{value:"API",id:"api",level:2},{value:"API Protocol",id:"api-protocol",level:2},{value:"Database",id:"database",level:2},{value:"Data integration",id:"data-integration",level:2},{value:"Data source",id:"data-source",level:2},{value:"Data system",id:"data-system",level:2},{value:"Encryption",id:"encryption",level:2},{value:"File system",id:"file-system",level:2},{value:"ETL",id:"etl",level:2},{value:"Integration platform",id:"integration-platform",level:2},{value:"iPaaS",id:"ipaas",level:3},{value:"Metadata",id:"metadata",level:2},{value:"Push, pull, and streaming",id:"push-pull-and-streaming",level:2},{value:"Webhook",id:"webhook",level:2},{value:"Structured and unstructured data",id:"structured-and-unstructured-data",level:2},{value:"Workflow",id:"workflow",level:2},{value:"Workflow automation",id:"workflow-automation",level:2},{value:"Writeback",id:"writeback",level:2}],u={toc:d},c="wrapper";function h(e){let{components:t,...a}=e;return(0,o.yg)(c,(0,n.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This glossary establishes some of the foundational concepts and terms used while\ntalking about data integration and workflow automation."),(0,o.yg)("p",null,"This doesn't mean you can't use OpenFn if you don't know what any of these words\nmean prior to reading our documentation - but it does mean that some of the most\nimportant tasks along the OpenFn journey will assume at least a basic\nunderstanding of each of these terms."),(0,o.yg)("p",null,"This glossary is meant to be OpenFn-agnostic. The rest of the docs and\n",(0,o.yg)("a",{parentName:"p",href:"/documentation/get-started/terminology"},"Key Concepts page")," help you to get a\npicture of the parts of OpenFn, what we call them, and why - but this glossary\nis really meant as a prerequisite to all those other things to aid users with no\nexperience in this area."),(0,o.yg)("admonition",{title:"Something missing?",type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"If you've come across a word, phrase, or concept that you think is missing from\nthis page, open an issue on ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/docs"},"OpenFn/docs"),",\nsuggest an edit to\n",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/docs/blob/main/docs/get-started/glossary.md"},"this page"),",\nor ask on the ",(0,o.yg)("a",{parentName:"p",href:"https://community.openfn.org"},"Community"))),(0,o.yg)("h2",{id:"api"},"API"),(0,o.yg)("p",null,'API is short for "application programming interface," and it\'s the part of some\nsoftware ',(0,o.yg)("b",null,"application")," that has chosen to make itself visible\n(",(0,o.yg)("b",null,"interface"),") to users outside the application itself. And it's doing that\nin a ",(0,o.yg)("b",null,"programmatic")," way, in a way that allows developers of other\napplications or data systems to use it the same way each time."),(0,o.yg)("h2",{id:"api-protocol"},"API Protocol"),(0,o.yg)("p",null,"There's no hard and fast rule about how an API gets developed, but over time,\nstandards have emerged to make it more straightforward for a new user to\ninteract with Platform X's API, by trying to ensure most applications use one of\na few different formats. That's what an API protocol is. A few of the big names\nhere are REST, SOAP, JSON, and GraphQL. Rather than reinvent the wheel,\n",(0,o.yg)("a",{parentName:"p",href:"https://frontend-digest.com/beginners-guide-to-apis-protocols-and-data-formats-f80cf7f30425%5D"},"here's a good primer on how protocols differ, their data formats, and why that all matters.")),(0,o.yg)("h2",{id:"database"},"Database"),(0,o.yg)("p",null,"Any organized collection of data can probably be safely called a database. If\nit's got a structure with which to reference all the stuff it's storing, and the\n\"stuff\" is data, then it's a database."),(0,o.yg)("h2",{id:"data-integration"},"Data integration"),(0,o.yg)("p",null,"The process of combining data from different sources into a centralized view.\nData integration is a means of achieving workflow automation. Its tasks may be\nstreamlined, automated, and managed by a workflow automation tool."),(0,o.yg)("h2",{id:"data-source"},"Data source"),(0,o.yg)("p",null,"A data source is an application, database, or table that provides data to some\nother platform. Nothing is ",(0,o.yg)("i",null,"always")," a data source. For example, Google\nSheets can be a data source, but it can also pull from data sources (individual\nCSV uploads or manual user data entry). We just call it a source when it's doing\nthe job of sourcing data to some other place. Data sources are the starting\npoint, temporally, for any integration."),(0,o.yg)("h2",{id:"data-system"},"Data system"),(0,o.yg)("p",null,"Sometimes folks get confused about the distinction between a database, a data\nsource, an application, and a data system. A data ",(0,o.yg)("i",null,"system")," is a more\ncomplex collection of these other things, usually one that allows a user to more\neasily interact with all of the data they should have access to. The data system\noften serves as an entry point to the myriad databases, applications, tables,\netc. that a user would otherwise have to go 12 different places to find."),(0,o.yg)("h2",{id:"encryption"},"Encryption"),(0,o.yg)("p",null,"In this day and age, security is everything. Encryption is the process of taking\nsomething that is readable to anyone and making it only readable to people we\nwant to read it. OpenFn ensures your data is encrypted every step of the way\nwhile it's in our platform.\n",(0,o.yg)("a",{parentName:"p",href:"https://ssd.eff.org/en/node/36"},"For more on different kinds of encryption, you can look here.")),(0,o.yg)("h2",{id:"file-system"},"File system"),(0,o.yg)("p",null,"A file system is to files what a data system is to data. It structures your\nfiles in a way that makes it easy for you to retrieve them in a standardized way\n(think of your home file system with its file paths on your home computer). File\nsystems can exist in other contexts too, and sometimes you need to access them\nto retrieve a file (a Word doc, CSV, plain text file, etc. might all be relevant\ndepending on your use case). The only real difference between file systems and\ndata systems or databases is the kind of information stored, data vs. files."),(0,o.yg)("h2",{id:"etl"},"ETL"),(0,o.yg)("p",null,'ETL stands for "extract, transform, and load". These are often thought of as the\nthree constituent parts of a data integration. First, we extract (push of pull\ndata from a data source). Then, we transform (make any changes to the data to\nmake it acceptable to the destination system or application). Then, we load\n(send it to the destination).'),(0,o.yg)("h2",{id:"integration-platform"},"Integration platform"),(0,o.yg)("p",null,"An integration platform (e.g., OpenFn) is an application (or set of\napplications) that help organizations set up, run, and maintain/manage the\nintegrations between all of their various systems."),(0,o.yg)("h3",{id:"ipaas"},"iPaaS"),(0,o.yg)("p",null,'You may also see the acronym "iPaaS". This stands for integration platform as a\nservice and is a type of "software as a service" (or "SaaS"). SaaS is a software\npurchasing model in which software is paid for only as it is used (often\nmonth-to-month), rather than purchased up front or given away for free.'),(0,o.yg)("h2",{id:"metadata"},"Metadata"),(0,o.yg)("p",null,"This is data that tells us about our data. In a table, for example, that's the\nname of the columns, the number of rows, etc. Metadata is often brought up in\nconversations about privacy\u2014e.g., regulators might want to ensure that ",(0,o.yg)("em",{parentName:"p"},"only\nmetadata")," is moved from Ministry A to Ministry B, as opposed to personally\nidentifiable information (PII) about individuals themselves."),(0,o.yg)("h2",{id:"push-pull-and-streaming"},"Push, pull, and streaming"),(0,o.yg)("i",null,"Pushing")," is when a triggering action in the data source causes it to send data to the destination. ",(0,o.yg)("i",null,"Pulling")," is the opposite, where the destination system requests the data from the source based on some triggering action, rather than waiting for the source to send it on its own. ",(0,o.yg)("i",null,"Streaming")," is a bit different, and it's when a data source is essentially ",(0,o.yg)("i",null,"constantly")," sending data to a destination system.",(0,o.yg)("h2",{id:"webhook"},"Webhook"),(0,o.yg)("p",null,"A ",(0,o.yg)("a",{parentName:"p",href:"/documentation/build/triggers#webhook-event-triggers"},"webhook")," (also called a\nweb callback or HTTP push API \u2014 thanks\n",(0,o.yg)("a",{parentName:"p",href:"https://sendgrid.com/blog/whats-webhook/"},"SendGrid"),"!) is a feature of an\napplication that allows ",(0,o.yg)("i",null,"pushing"),'. It\'s often configured to notify some\nexternal URL when an event occurs. A system administrator might create a\n"webhook" which notifies an integration platform whenever some event occurs so\nthat the iPaaS can start executing some complex workflow.'),(0,o.yg)("h2",{id:"structured-and-unstructured-data"},"Structured and unstructured data"),(0,o.yg)("p",null,"Structured data is data that has metadata. Unstructured data has very little\nmetadata (though probably still has things like time of creation, update, etc.).\nWithout metadata about the format of the data, unstructured data is more\ndifficult to interact with programmatically. We need different sorts of rules\nwhen doing ETL on unstructured data to do it well, whereas structured data is an\neasier starting point because we know what to expect from a column with a name,\ndata type, field size, and so on."),(0,o.yg)("h2",{id:"workflow"},"Workflow"),(0,o.yg)("p",null,"The set of instructions that determine how to solve a problem or accomplish a\ntask. They are often broken down into smaller, independent tasks."),(0,o.yg)("h2",{id:"workflow-automation"},"Workflow automation"),(0,o.yg)("p",null,"The use of software to perform tasks or a business process independently, in\naccordance with predefined business rules, and without the need for human input."),(0,o.yg)("h2",{id:"writeback"},"Writeback"),(0,o.yg)("p",null,"Refers to a destination system making a change in a data source. When my\ndestination application receives information from a data source and wants to do\nsomething back to the source in response, that's writeback."))}h.isMDXComponent=!0},15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>m});var n=a(96540);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(a),p=o,m=c["".concat(l,".").concat(p)]||c[p]||h[p]||r;return a?n.createElement(m,s(s({ref:t},u),{},{components:a})):n.createElement(m,s({ref:t},u))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<r;d++)s[d]=a[d];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);