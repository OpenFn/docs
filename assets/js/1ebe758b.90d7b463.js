"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[16808],{3822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"build-for-developers/cli-collections","title":"Collections CLI Usage","description":"The OpenFn CLI includes support for reading from and writing to","source":"@site/docs/build-for-developers/cli-collections.md","sourceDirName":"build-for-developers","slug":"/collections-cli","permalink":"/documentation/collections-cli","draft":false,"unlisted":false,"editUrl":"https://github.com/openfn/docs/edit/main/docs/build-for-developers/cli-collections.md","tags":[],"version":"current","frontMatter":{"title":"Collections CLI Usage","sidebar_label":"Collections","slug":"/collections-cli"},"sidebar":"docs","previous":{"title":"CLI challenges","permalink":"/documentation/cli-challenges"},"next":{"title":"Planning","permalink":"/documentation/deploy/options"}}');var s=t(74848),i=t(28453);const l={title:"Collections CLI Usage",sidebar_label:"Collections",slug:"/collections-cli"},c=void 0,a={},r=[{value:"Getting a PAT",id:"getting-a-pat",level:2},{value:"Setting a server",id:"setting-a-server",level:2},{value:"Fetching items",id:"fetching-items",level:2},{value:"Uploading items",id:"uploading-items",level:2},{value:"Removing items",id:"removing-items",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["The OpenFn CLI includes support for reading from and writing to\n",(0,s.jsx)(n.a,{href:"/documentation/build/collections",children:"Collections"}),": a key/value store built into\nOpenFn."]}),"\n",(0,s.jsxs)(n.admonition,{title:"Versions",type:"caution",children:[(0,s.jsx)(n.p,{children:"Collections support was added to the CLI in version 1.9.0."}),(0,s.jsxs)(n.p,{children:["Run ",(0,s.jsx)(n.code,{children:"npm install -g @openfn/cli"})," to update or install."]})]}),"\n",(0,s.jsx)(n.p,{children:"You can use the CLI to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Explore the contents of Collections without running a Workflow"}),"\n",(0,s.jsx)(n.li,{children:"Experiment with query syntax to get the keys you need"}),"\n",(0,s.jsx)(n.li,{children:"Update mapping objects and lookup tables from local (or source-controlled)\nfiles"}),"\n",(0,s.jsx)(n.li,{children:"Manually remove unneeded data"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Got feedback? Want more Collections support in the CLI? Post a Feature Request\nto ",(0,s.jsx)(n.a,{href:"https://community.openfn.org/c/feature-requests",children:"community.openfn.org"}),"!"]})}),"\n",(0,s.jsxs)(n.p,{children:["Get started with the Collections API with ",(0,s.jsx)(n.code,{children:"openfn collections --help"})]}),"\n",(0,s.jsxs)(n.p,{children:["You'll need a Personal Access Token (PAT) to access a collection. You'll also\nneed to ensure a collection has been created before you can read or write to\nit - see\n",(0,s.jsx)(n.a,{href:"/documentation/build/collections#managing-collections",children:"Managing Collections"})]}),"\n",(0,s.jsxs)(n.admonition,{title:"Trying to use Collections in a CLI workflow?",type:"info",children:[(0,s.jsxs)(n.p,{children:["These docs explain how to use the ",(0,s.jsx)(n.code,{children:"openfn collections"})," CLI command."]}),(0,s.jsxs)(n.p,{children:["If you're running an expression or workflow through the CLI, you need to use the\ncollections adaptor - check out the\n",(0,s.jsx)(n.a,{href:"/adaptors/collections#cli-usage",children:"Collections Adaptor Docs"})," for detauls"]})]}),"\n",(0,s.jsx)(n.h2,{id:"getting-a-pat",children:"Getting a PAT"}),"\n",(0,s.jsx)(n.p,{children:"Data inside Collections is securely stored under a Project, and access is\nstrictly only allowed to users with access to that Project. So if you want to\naccess a Collection, you have to tell the server who you are."}),"\n",(0,s.jsxs)(n.p,{children:["We do this using Personal Access Tokens. See\n",(0,s.jsx)(n.a,{href:"/documentation/api-tokens#about-api-tokens",children:"Create and Manage API Tokens"})," for\nmore details."]}),"\n",(0,s.jsxs)(n.p,{children:["One you have a PAT, you need to pass it in to the CLI. The easiest way to do\nthis is to set your ",(0,s.jsx)(n.code,{children:"OPENFN_PAT"})," env var, which the CLI will use automatically."]}),"\n",(0,s.jsxs)(n.p,{children:["If you're using multiple access tokens, you can pass ",(0,s.jsx)(n.code,{children:"--token"})," to the CLI to\noverride the default."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection \\* --token $MY_OPENFN_PAT\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["The rest of this guide assumes that the ",(0,s.jsx)(n.code,{children:"OPENFN_PAT"})," env var has been set. So\nlong as it has, as you're using a server which has a ",(0,s.jsx)(n.code,{children:"my-collection"})," collection,\nall examples will work."]})}),"\n",(0,s.jsx)(n.h2,{id:"setting-a-server",children:"Setting a server"}),"\n",(0,s.jsxs)(n.p,{children:["By default, the CLI will point to our primary platform at\n",(0,s.jsx)(n.a,{href:"https://app.openfn.org",children:"https://app.openfn.org"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"If you're running from open source or using a different deployment, you'll also\nneed to tell the CLI which Collections server to use."}),"\n",(0,s.jsxs)(n.p,{children:["You can do this by passing ",(0,s.jsx)(n.code,{children:"--lightning"})," directly:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection \\* --lightning http://localhost:4000\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Or by setting the ",(0,s.jsx)(n.code,{children:"OPENFN_ENDPOINT"})," environment variable."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"To see which server the CLI is using, ask for debug-level logging in your\noutput:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection \\* --log debug\n"})})]}),"\n",(0,s.jsx)(n.h2,{id:"fetching-items",children:"Fetching items"}),"\n",(0,s.jsxs)(n.p,{children:["You can fetch items from a Collection by passing a collection name and a key, or\nkey pattern (like ",(0,s.jsx)(n.code,{children:"*"}),' for "everything", or ',(0,s.jsx)(n.code,{children:"2024*"})," for keys starting with\n",(0,s.jsx)(n.code,{children:"2024"}),")"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get <collection-name> <key>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For example, to get everything from ",(0,s.jsx)(n.code,{children:"my-collection"}),", run:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection \\*\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["In unix shells (MacOS or Linux), the ",(0,s.jsx)(n.code,{children:"*"})," character has special meaning. So if\nyou want to get all items, you have to escape it or quote it:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"openfn collections get my-collection \\*\n"})}),(0,s.jsxs)(n.p,{children:["Including ",(0,s.jsx)(n.code,{children:"*"})," in a pattern string should still work:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"openfn collections get my-collection 2024*\n"})})]}),"\n",(0,s.jsx)(n.p,{children:"Collections are saved as strings, but will be serialized to JSON in the output."}),"\n",(0,s.jsxs)(n.p,{children:["By default the CLI will log downloaded values to your shell. To write to disk,\npass ",(0,s.jsx)(n.code,{children:"--output"})," or ",(0,s.jsx)(n.code,{children:"-o"})," with a file path relative to your working directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection \\* -o /tmp/my_collection.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To format the output to make it easier to read, add the ",(0,s.jsx)(n.code,{children:"--pretty"})," flag for\npretty-printing:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection \\* -o /tmp/my_collection.json --pretty\n"})}),"\n",(0,s.jsx)(n.p,{children:"It's important to understand that the output works a bit differently if you're\ngetting one specific item with a single key or getting many items with a\nkey-pattern."}),"\n",(0,s.jsxs)(n.p,{children:['A single key always returns its value "raw" or "verbatim", without the key\nattached. So for a key ',(0,s.jsx)(n.code,{children:"item-1"})," which holds a JSON object as a value, then this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections get my-collection item-1\n"})}),"\n",(0,s.jsx)(n.p,{children:"Will download and save something like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'{\n  "id": "item-1"\n  /* ... other properties of the value */\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"If you use a key-pattern to retrieve data, the value is output in multi-item\nmode: which is a JSON object where the key is the item's key, and the value is\nthe item's value:"}),"\n",(0,s.jsxs)(n.p,{children:["So if we get all items whose key starts with ",(0,s.jsx)(n.code,{children:"item-"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ openfn collections get my-collection item-1*\n"})}),"\n",(0,s.jsx)(n.p,{children:"The resulting data will look like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "item-1": {\n    "id": "item-1"\n    /* ... other properties of the value */\n  },\n  "item-10": {\n    "id": "item-10"\n    /* ... other properties of the value */\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"uploading-items",children:"Uploading items"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"collections"})," command to upload data to a collection. When\nuploading, values always come from a file on disk. In this example we'll use\nJSON files, but if you're uploading a single value it doesn't have to be valid\nJSON."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"set"})," command has two modes. To upload a single item, use:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections set <collection-name> <key> <path/to/value.json>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will read the data in ",(0,s.jsx)(n.code,{children:"path/to/value.json"})," as a string, and upsert it under\nthe provided key. Key patterns are not supported."]}),"\n",(0,s.jsx)(n.p,{children:"To bulk upsert multiple values, use:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections set <collection-name> --items <path/to/items.json>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"items.json"})," file must contain a JSON object where the keys are item keys\nand the values are item values (just like the multi-item get command returns):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "item-1": {\n    "id": "item-1"\n    /* ... other properties of the value */\n  },\n  "item-10": {\n    "id": "item-10"\n    /* ... other properties of the value */\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:["Remember that Collections always uses an ",(0,s.jsx)(n.em,{children:"upsert"})," strategy when uploading new\nitems."]}),(0,s.jsx)(n.p,{children:"This means that if a key does not exist, it will be created and assigned a\nvalue. If it already exists, its value will be updated."})]}),"\n",(0,s.jsx)(n.h2,{id:"removing-items",children:"Removing items"}),"\n",(0,s.jsxs)(n.p,{children:["You can also remove items from a collection with the ",(0,s.jsx)(n.code,{children:"collections remove"}),"\ncommand:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections remove <collection-name> <key>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Key-patterns are supported and allow you to remove multiple keys."}),"\n",(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.code,{children:"--dry-run"})," to get a list of the keys that would be deleted without actually\nrunning the delete:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn collections remove my-collection 2024* --dry-run\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>c});var o=t(96540);const s={},i=o.createContext(s);function l(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);