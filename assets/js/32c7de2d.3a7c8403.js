"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[82465],{37680:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(58168),a=(n(96540),n(15680));const o={title:"Redis Adaptor"},i=void 0,s={unversionedId:"redis",id:"redis",title:"Redis Adaptor",description:"About Redis",source:"@site/adaptors/redis.md",sourceDirName:".",slug:"/redis",permalink:"/adaptors/redis",draft:!1,tags:[],version:"current",frontMatter:{title:"Redis Adaptor"},sidebar:"adaptors",previous:{title:"rapidpro developer readme",permalink:"/adaptors/packages/rapidpro-readme"},next:{title:"redis@1.3.0",permalink:"/adaptors/packages/redis-docs"}},p={},l=[{value:"About Redis",id:"about-redis",level:2},{value:"Integration Options",id:"integration-options",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Helpful Links",id:"helpful-links",level:3},{value:"Implementation Examples",id:"implementation-examples",level:3}],d={toc:l},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"about-redis"},"About Redis"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://redis.io/"},"Redis (Remote Dictionary Server)")," is an open-source, in-memory data store used as a database, cache, and message broker. It is commonly used for caching, real-time analytics, session management, and pub/sub messaging."),(0,a.yg)("h2",{id:"integration-options"},"Integration Options"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"redis")," adaptor provides direct database connections for accessing data and executing NoSQL and standard database operations. See ",(0,a.yg)("a",{parentName:"p",href:"/adaptors/packages/redis-docs"},"functions")," for more on how to use this adaptor."),(0,a.yg)("h2",{id:"authentication"},"Authentication"),(0,a.yg)("p",null,"See ",(0,a.yg)("a",{parentName:"p",href:"https://redis.io/docs/latest/"},"Redis")," for the latest on supported authentication methods. When integrating with a NoSQL database via OpenFn, you authenticate via SSH using authorized database credentials. See this adaptor's ",(0,a.yg)("a",{parentName:"p",href:"/adaptors/packages/redis-configuration-schema"},"Configuration docs")," for more on the required authentication parameters."),(0,a.yg)("p",null,"See platform docs on ",(0,a.yg)("a",{parentName:"p",href:"/documentation/manage-projects/manage-credentials"},"managing credentials")," for how to configure a credential in OpenFn. If working locally or if using a Raw JSON credential type, then your configuration will look something like this:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'{\n  "host": "redis.example.com",\n  "password": "@some(!)Str0ngp4ss0w0rd",\n  "username": "test@openfn.org"\n}\n')),(0,a.yg)("h3",{id:"helpful-links"},"Helpful Links"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("a",{parentName:"li",href:"https://redis.io/documentation"},"Redis Documentation"))),(0,a.yg)("h3",{id:"implementation-examples"},"Implementation Examples"),(0,a.yg)("p",null,(0,a.yg)("em",{parentName:"p"},"Coming soon!")))}u.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>g});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=a,g=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);