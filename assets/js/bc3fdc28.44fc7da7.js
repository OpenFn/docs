"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[58564],{16044:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"collections","title":"Collections Adaptor","description":"Collections Overview","source":"@site/adaptors/collections.md","sourceDirName":".","slug":"/collections","permalink":"/adaptors/collections","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Collections Adaptor"},"sidebar":"adaptors","previous":{"title":"README.md","permalink":"/adaptors/packages/claude-readme"},"next":{"title":"Functions","permalink":"/adaptors/packages/collections-docs"}}');var s=t(74848),a=t(28453);const l={title:"Collections Adaptor"},i=void 0,c={},r=[{value:"Collections Overview",id:"collections-overview",level:2},{value:"The Collections Adaptor",id:"the-collections-adaptor",level:2},{value:"Usage Guide",id:"usage-guide",level:2},{value:"Set some data in a Collection",id:"set-some-data-in-a-collection",level:3},{value:"Getting data from a Collection",id:"getting-data-from-a-collection",level:3},{value:"Remove data from a Collection",id:"remove-data-from-a-collection",level:3},{value:"Filters, Limits &amp; Cursors",id:"filters-limits--cursors",level:2},{value:"CLI usage",id:"cli-usage",level:2},{value:"For a single job",id:"for-a-single-job",level:3},{value:"For a workflow",id:"for-a-workflow",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"collections-overview",children:"Collections Overview"}),"\n",(0,s.jsx)(n.p,{children:"The Collections API provides access to a secure key/value store that allows\nusers to store, update and reuse data across workflows in their OpenFn projects.\nIt is designed for high performance over a large volume of data."}),"\n",(0,s.jsx)(n.p,{children:"Collections are secure, private datastores which are only accessible to\nWorkflows within a particular OpenFn Project. They can be created, managed and\ndestroyed from the OpenFn Admin page."}),"\n",(0,s.jsx)(n.p,{children:"The Collections Adaptor provides an interface to workflows to use the\nCollections API."}),"\n",(0,s.jsx)(n.p,{children:"When running in the CLI, a Personal Access Token can be used to get access to\nthe collection (generated from the app at /profile/tokens)."}),"\n",(0,s.jsxs)(n.p,{children:["Learn more about Collections and common use cases in the\n",(0,s.jsx)(n.a,{href:"/documentation/build/collections",children:"Collections Docs"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.p,{children:["Collections must be created in the\n",(0,s.jsx)(n.a,{href:"/documentation/build/collections#managing-collections",children:"Platform Admin page"}),"\nbefore they can be used."]})}),"\n",(0,s.jsx)(n.h2,{id:"the-collections-adaptor",children:"The Collections Adaptor"}),"\n",(0,s.jsx)(n.p,{children:"The Collections API is inserted into all each Step of a Workflow through a\nspecial kind of adaptor."}),"\n",(0,s.jsxs)(n.p,{children:["Uniquely, the Collections adaptor it is designed to be run ",(0,s.jsx)(n.em,{children:"alongside"})," other\nadaptors, not by itself. It is automatically injected into the runtime\nenvironment making the Collections API available to every Step in a Workflow,\nregardless of which adaptor it is using."]}),"\n",(0,s.jsxs)(n.p,{children:["If using the CLI the use Collections locally, refer to the\n",(0,s.jsx)(n.a,{href:"#cli-usage",children:"CLI Usage"})," guide below."]}),"\n",(0,s.jsx)(n.h2,{id:"usage-guide",children:"Usage Guide"}),"\n",(0,s.jsx)(n.p,{children:"All values in a Collection are stored under a string key. Values are stored as\nStrings, but the Collections API will automatically serialized and de-serialize\nJSON objects to strings for you (so, in effect, you can treat keys as strings\nand value as objects)."}),"\n",(0,s.jsxs)(n.p,{children:["Collections can be manipulated using a single key a pattern - where a pattern is\na string with a wildcard. So the key-pattern ",(0,s.jsx)(n.code,{children:"mr-benn"})," will only match a single\nvalue under the key ",(0,s.jsx)(n.code,{children:"mr-benn"}),", but the pattern ",(0,s.jsx)(n.code,{children:"2024*"})," will match all keys which\nstart with ",(0,s.jsx)(n.code,{children:"2024"})," but have any other characters afterwards. The pattern\n",(0,s.jsx)(n.code,{children:"2024*mr-benn*"})," will match keys starting with 2024, then having some values plus\nthe string ",(0,s.jsx)(n.code,{children:"mr-benn"}),", plus any other sequence of characters (in other words,\nfetch all keys which relate to Mr Benn in 2024)."]}),"\n",(0,s.jsx)(n.p,{children:"The Collections API gives you four functions to read, write and remove data from\na collection."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.a,{href:"/adaptors/packages/collections-docs#collections_get",children:(0,s.jsx)(n.code,{children:"collections.get()"})}),"\nto fetch a single value, or batch-download a range of values."]}),"\n",(0,s.jsxs)(n.li,{children:["Use\n",(0,s.jsx)(n.a,{href:"/adaptors/packages/collections-docs#collections_each",children:(0,s.jsx)(n.code,{children:"collections.each()"})})," to\nefficiently iterate over a range of items in a collection. Recommended for\nlarge data sets."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.a,{href:"/adaptors/packages/collections-docs#collections_set",children:(0,s.jsx)(n.code,{children:"collections.set()"})}),"\nto upload one or more values to a collection. ",(0,s.jsx)(n.code,{children:"set()"}),' is always an "upsert":\nif a key already exists, it\'s value will be replaced by the new value']}),"\n",(0,s.jsxs)(n.li,{children:["Use\n",(0,s.jsx)(n.a,{href:"/adaptors/packages/collections-docs#collections_remove",children:(0,s.jsx)(n.code,{children:"collections.remove()"})}),"\nto remove one or more values."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Detailed usage examples are provided below."}),"\n",(0,s.jsx)(n.h3,{id:"set-some-data-in-a-collection",children:"Set some data in a Collection"}),"\n",(0,s.jsx)(n.p,{children:"The Collection API allows you to set a JSON object (or any primitive JS value)\nunder a given key:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.set('my-collection', 'commcare-fhir-value-mappings', {\n  current_smoker: {\n    system: 'http://snomed.info/sct',\n    code: '77176002',\n    display: 'Smoker',\n  },\n  /* ... */\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can also pass an array of items for a batch-set. When setting multiple\nvalues, you need to set a key generator function to calculate a key for each\nitem, like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.set('my-favourite-footballer', value => value.id, [\n  {\n    id: 'player01',\n    name: 'Lamine Yamal',\n    /* other patient details */\n  },\n  {\n    id: 'player02',\n    name: 'Aitana Bonmati',\n    /* other patient details */\n  },\n  /* More patients {}, {} */\n]);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The key generator is a function which receives each of the values in the\nsupplied values array as an id (so, in the example above, it gets called with\nthe ",(0,s.jsx)(n.code,{children:"player01"})," object, then the ",(0,s.jsx)(n.code,{children:"player02"})," object, and so on). For each value,\nit should return a string key, under which it will be saved in the collection."]}),"\n",(0,s.jsx)(n.p,{children:"You can use Javascript template literals to easily generate key values which\ninclude a mixture of static and dynamic values:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.set(\n  'my-favourite-footballer',\n  value => `${value.createdDate}-${value.region}-${value.name}`\n  $.data\n),\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this example, the ",(0,s.jsx)(n.code,{children:"createdDate"}),", ",(0,s.jsx)(n.code,{children:"region"})," and ",(0,s.jsx)(n.code,{children:"name"})," properties will be read\nfrom each value and assembled into a key-string, separated by dashes. This\ntechnique creates keys that are easily sorted by date."]}),"\n",(0,s.jsx)(n.h3,{id:"getting-data-from-a-collection",children:"Getting data from a Collection"}),"\n",(0,s.jsxs)(n.p,{children:["To retrieve multiple items from a Collection, we generally recommend using the\n",(0,s.jsx)(n.code,{children:"each()"})," function."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"each()"})," will stream each value individually, greatly reducing the memory\noverhead of downloading a large amount of data to the client."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.each('my-collection', '2024*', (state, value, key) => {\n  console.log(value);\n  // No need to return state here\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The second argument to ",(0,s.jsx)(n.code,{children:"each"})," is a query string or object. Pass a key with a\npattern, or an object including different query strings. Check the API reference\nfor a full listing."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.each(\n  'my-collection',\n  { key: '2024*', created_after: '20240601' },\n  (state, value, key) => {\n    console.log(value);\n  }\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can limit the amount of data you want to download with the ",(0,s.jsx)(n.code,{children:"limit"})," key. If\nthere are returned values on the server, a ",(0,s.jsx)(n.code,{children:"cursor"})," key will be written to\n",(0,s.jsx)(n.code,{children:"state.data"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections\n  .each('my-collection', { key: '2024*', limit: 1000 }, (state, value, key) => {\n    console.log(value);\n  })\n  .then(state => {\n    state.nextCursor = state.data.cursor;\n    // state.data.cursor now contains the cursor position\n    return state;\n  });\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can fetch items individually with ",(0,s.jsx)(n.code,{children:"get()"}),", which will be written to\nstate.data:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.get('my-collection', 'commcare-fhir-value-mappings').then(state => {\n  state.mappings = state.data;\n  return state;\n});\ncollections.each($.inputs, state => {\n  const mappedString = state.mappings[state.data.diagnosis];\n  state.resources ??= {};\n  state.resources[state.data.id] = mappedString;\n  return state;\n});\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can also fetch multiple items with ",(0,s.jsx)(n.code,{children:"get()"}),", which supports the same query\noptions as ",(0,s.jsx)(n.code,{children:"each()"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Bear in mind that all the items will be loaded into memory at once. For large\ndatasets and structures, this may cause problems."}),"\n",(0,s.jsxs)(n.p,{children:["When bulk-loading with ",(0,s.jsx)(n.code,{children:"get()"}),", state.data will be an array of items, and\n",(0,s.jsx)(n.code,{children:"state.data.cursor"})," will contain the cursor position from the server"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.get('my-collection', '2024*').then(state => {\n  state.allRecords = state.data;\n  return state;\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"remove-data-from-a-collection",children:"Remove data from a Collection"}),"\n",(0,s.jsx)(n.p,{children:"You can remove an individual value by key:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.remove('my-collection', 'commcare-fhir-value-mappings');\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can also use patterns to delete multiple values at a time:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.remove('my-collection', '2024*');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"filters-limits--cursors",children:"Filters, Limits & Cursors"}),"\n",(0,s.jsx)(n.p,{children:"As well as filtering keys with patterns, you can filter by created date:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"collections.each(\n  'my-collection',\n  { key: '2024*', createdAfter: '20240601' },\n  (state, value, key) => {\n    console.log(value);\n  }\n);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use ",(0,s.jsx)(n.code,{children:"createdBefore"})," and ",(0,s.jsx)(n.code,{children:"createdAfter"})," dates, which must be ISO 1806\nformatted strings. The ",(0,s.jsx)(n.code,{children:"createdBefore"})," timestamp will match all dates less than\nor equal to (<=) the ",(0,s.jsx)(n.em,{children:"start"})," of the provided date. Conversely, ",(0,s.jsx)(n.code,{children:"createdAfter"}),"\nwill match dates greater than or equal to the ",(0,s.jsx)(n.em,{children:"end"})," of the provided date."]}),"\n",(0,s.jsx)(n.p,{children:"By default, all matching values will be returned to you, but you can limit how\nmany items are returned in a single call:"}),"\n",(0,s.jsxs)(n.p,{children:["If a limit is set and there are more values waiting on the server, a ",(0,s.jsx)(n.code,{children:"cursor"}),"\nwill be written to ",(0,s.jsx)(n.code,{children:"state.data"}),". You can pass this cursor back to the server in\nthe next query to resume from that position."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// request 10k values from the cursor position\ncollections.get('my-collection', { key: '*', limit: 10e3, cursor: $.cursor });\nfn(state => {\n  // Write the cursor (if any) back to state for next time\n  state.cursor = state.data.cursor;\n  return state;\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cli-usage",children:"CLI usage"}),"\n",(0,s.jsx)(n.p,{children:"Workflows which use Collections can be run through the CLI. You will need to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Get a Personal Access Token (PAT)"}),"\n",(0,s.jsxs)(n.li,{children:["Update the ",(0,s.jsx)(n.code,{children:"workflow.json"})," with your PAT and the OpenFn endpoint"]}),"\n",(0,s.jsx)(n.li,{children:"Set the step to use the Collections adaptor"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can also call the Collections API directly from the CLI. See the\n",(0,s.jsx)(n.a,{href:"/documentation/collections-cli",children:"CLI Collections Guide"})]})}),"\n",(0,s.jsx)(n.p,{children:"Collections are designed for close integration with the platform app, but can be\nused from the CLI too."}),"\n",(0,s.jsx)(n.p,{children:"You can get a Personal Access Token from any v2 deployment."}),"\n",(0,s.jsx)(n.p,{children:"Remember that a Collection must be created from the Admin page before it can be\nused!"}),"\n",(0,s.jsx)(n.h3,{id:"for-a-single-job",children:"For a single job"}),"\n",(0,s.jsx)(n.p,{children:"You can pass multiple adaptors from the CLI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"openfn job.js -a collections -a http -s state.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"You'll need to set configuration on the state.json:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "configuration": {\n    "collections_endpoint": "http://localhost:4000/collections",\n    "collections_token": "...paste your Personal Access Token..."\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"for-a-workflow",children:"For a workflow"}),"\n",(0,s.jsxs)(n.p,{children:["If you're using ",(0,s.jsx)(n.code,{children:"workflow.json"}),", set the token and endpoint on\n",(0,s.jsx)(n.code,{children:"workflow.credentials"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "workflow": {\n    "steps": [ ... ],\n    "credentials": {\n      "collections_endpoint": "http://localhost:4000/collections",\n      "collections_token": "...paste your Personal Access Token..."\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"And make sure that any steps which use collections have multiple adaptors set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "workflow": {\n    "steps": [\n      {\n        "expression": "...",\n        "adaptors": ["@openfn/language-http", "@openfn/language-collections"]\n      }\n    ]\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var o=t(96540);const s={},a=o.createContext(s);function l(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);