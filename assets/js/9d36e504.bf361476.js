"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[55673],{63616:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>y,contentTitle:()=>g,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var n=a(58168),r=(a(96540),a(15680));const l={title:"salesforce@5.0.5",id:"salesforce-docs",keywords:["adaptor","salesforce","bulk","bulkQuery","create","describe","destroy","get","insert","post","query","request","retrieve","update","upsert"]},g=void 0,p={unversionedId:"packages/salesforce-docs",id:"packages/salesforce-docs",title:"salesforce@5.0.5",description:"bulk(sObjectName, operation, records, [options])",source:"@site/adaptors/packages/salesforce-docs.md",sourceDirName:"packages",slug:"/packages/salesforce-docs",permalink:"/adaptors/packages/salesforce-docs",draft:!1,tags:[],version:"current",frontMatter:{title:"salesforce@5.0.5",id:"salesforce-docs",keywords:["adaptor","salesforce","bulk","bulkQuery","create","describe","destroy","get","insert","post","query","request","retrieve","update","upsert"]},sidebar:"adaptors",previous:{title:"Salesforce",permalink:"/adaptors/salesforce"},next:{title:"Config for salesforce",permalink:"/adaptors/packages/salesforce-configuration-schema"}},y={},o=[{value:"Functions",id:"functions",level:2},{value:"bulk",id:"bulk",level:3},{value:"bulkQuery",id:"bulkquery",level:3},{value:"create",id:"create",level:3},{value:"describe",id:"describe",level:3},{value:"destroy",id:"destroy",level:3},{value:"get",id:"get",level:3},{value:"insert",id:"insert",level:3},{value:"post",id:"post",level:3},{value:"query",id:"query",level:3},{value:"request",id:"request",level:3},{value:"retrieve",id:"retrieve",level:3},{value:"update",id:"update",level:3},{value:"upsert",id:"upsert",level:3},{value:"util",id:"util",level:2},{value:"util.toUTF8",id:"util_toUTF8",level:3},{value:"Interfaces",id:"interfaces",level:2},{value:"BulkOptions",id:"bulkoptions",level:3},{value:"BulkQueryOptions",id:"bulkqueryoptions",level:3},{value:"FullRequestOptions",id:"fullrequestoptions",level:3},{value:"QueryOptions",id:"queryoptions",level:3},{value:"SalesforceResultState",id:"salesforceresultstate",level:3},{value:"SalesforceState",id:"salesforcestate",level:3},{value:"SimpleRequestOptions",id:"simplerequestoptions",level:3}],u={toc:o},i="wrapper";function s(e){let{components:t,...a}=e;return(0,r.yg)(i,(0,n.A)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("dl",null,(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#bulk"},"bulk(sObjectName, operation, records, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#bulkquery"},"bulkQuery(query, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#create"},"create(sObjectName, records)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#describe"},"describe(sObjectName)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#destroy"},"destroy(sObjectName, ids, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#get"},"get(path, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#insert"},"insert(sObjectName, records)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#post"},"post(path, data, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#query"},"query(query, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#request"},"request(path, [options])")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#retrieve"},"retrieve(sObjectName, id)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#update"},"update(sObjectName, records)")),(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#upsert"},"upsert(sObjectName, externalId, records)"))),(0,r.yg)("p",null,"This adaptor exports the following namespaced functions:"),(0,r.yg)("dl",null,(0,r.yg)("dt",null,(0,r.yg)("a",{href:"#util_toUTF8"},"util.toUTF8(input)"))),(0,r.yg)("h2",{id:"functions"},"Functions"),(0,r.yg)("h3",{id:"bulk"},"bulk"),(0,r.yg)("p",null,(0,r.yg)("code",null,"bulk(sObjectName, operation, records, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Create and execute a bulk job. Nested relationships will be flattened to dot notation automatically.\nThis function uses ",(0,r.yg)("a",{parentName:"p",href:"https://sforce.co/4fDLJnk"},"Bulk API"),",\nwhich is subject to ",(0,r.yg)("a",{parentName:"p",href:"https://sforce.co/4b6kn6z"},"rate limits"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"API name of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"operation"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The bulk operation to be performed.Eg ",(0,r.yg)("inlineCode",{parentName:"td"},"insert"),", ",(0,r.yg)("inlineCode",{parentName:"td"},"update")," or ",(0,r.yg)("inlineCode",{parentName:"td"},"upsert"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"records"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"array")),(0,r.yg)("td",{parentName:"tr",align:null},"an array of records, or a function which returns an array.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#bulkoptions"},(0,r.yg)("code",null,"BulkOptions"))),(0,r.yg)("td",{parentName:"tr",align:null},"Options to configure the request. In addition to these, you can pass any of the options supported by the ",(0,r.yg)("a",{parentName:"td",href:"https://bit.ly/41tyvVU"},"jsforce API"),".")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"Summary of the response from Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.success"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")," if Salesforce reports no errors from the operation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.completed"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of ids for every successful completion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.errors"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of errors reported by Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Bulk insert"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'bulk(\n  "Patient__c",\n  "insert",\n  (state) => state.patients.map((x) => ({ Age__c: x.age, Name: x.name })),\n  { failOnError: true }\n);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Bulk upsert"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'bulk(\n  "vera__Beneficiary__c",\n  "upsert",\n  [\n    {\n      vera__Reporting_Period__c: 2023,\n      vera__Geographic_Area__c: "Uganda",\n      "vera__Indicator__r.vera__ExtId__c": 1001,\n      vera__Result_UID__c: "1001_2023_Uganda",\n    },\n  ],\n  { extIdField: "vera__Result_UID__c" }\n);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Bulk upsert with a nested relationship"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'bulk(\n  "vera__Beneficiary__c",\n  "upsert",\n  [\n    {\n      vera__Reporting_Period__c: 2023,\n      "vera_Project": {\n        "Metrics_ID__c": "jfh5LAnxu1i4na"\n      }\n    },\n  ],\n  { extIdField: "vera__Result_UID__c" }\n);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Bulk update Account records using a lazy state reference"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'fn((state) => {\n  state.accounts = state.data.map((a) => ({ Id: a.id, Name: a.name }));\n  return state;\n});\nbulk("Account", "update", $.accounts, { failOnError: true });\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"bulkquery"},"bulkQuery"),(0,r.yg)("p",null,(0,r.yg)("code",null,"bulkQuery(query, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Execute an SOQL Bulk Query.\nThis function query large data sets and reduce the number of API requests.\n",(0,r.yg)("inlineCode",{parentName:"p"},"bulkQuery()")," uses ",(0,r.yg)("a",{parentName:"p",href:"https://sforce.co/4azgczz"},"Bulk API v2.0 Query")," which is available in API version 47.0 and later.\nThis API is subject to ",(0,r.yg)("a",{parentName:"p",href:"https://sforce.co/4b6kn6z"},"rate limits"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"query"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"A query string.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#bulkqueryoptions"},(0,r.yg)("code",null,"BulkQueryOptions"))),(0,r.yg)("td",{parentName:"tr",align:null},"Options passed to the bulk api.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),' Bulk query patient records where "Health_ID__c" is equal to the value in "state.data.healthId"'),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"bulkQuery(`SELECT Id FROM Patient__c WHERE Health_ID__c = '${$.data.healthId}'`);\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Bulk query with custom polling options"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"bulkQuery(\n  (state) =>\n    `SELECT Id FROM Patient__c WHERE Health_ID__c = '${state.data.field1}'`,\n  { pollTimeout: 10000, pollInterval: 6000 }\n);\n")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"create"},"create"),(0,r.yg)("p",null,(0,r.yg)("code",null,"create(sObjectName, records) \u21d2 Operation")),(0,r.yg)("p",null,"Create one or more new sObject records. Relationships in the record should be nested and not use dot-notation syntax"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"API name of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"records"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"Object")," ","|"," ",(0,r.yg)("code",null,"Array.","<","Object",">")),(0,r.yg)("td",{parentName:"tr",align:null},"Field attributes for the new record, or an array of field attributes.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"Summary of the response from Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.success"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")," if Salesforce reports no errors from the operation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.completed"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of ids for every successful completion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.errors"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of errors reported by Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Single record creation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'create("Account", { Name: "My Account #1" });\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Multiple records creation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'create("Account",[{ Name: "My Account #1" }, { Name: "My Account #2" }]);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Create records from data on state"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'create("Account",\n  $.data.map((account) => ({\n    Name: account.label\n  })\n));\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Update a record with a relationship"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'create("Account", {\n  Name: "My Account #1" ,\n  "Project__r": {\n    "Metrics_ID__c": "jfh5LAnxu1i4na"\n  }\n});\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"describe"},"describe"),(0,r.yg)("p",null,(0,r.yg)("code",null,"describe(sObjectName) \u21d2 Operation")),(0,r.yg)("p",null,"Fetches and logs metadata for an sObject and pushes the result to ",(0,r.yg)("inlineCode",{parentName:"p"},"state.data"),".\nIf ",(0,r.yg)("inlineCode",{parentName:"p"},"sObjectName")," is not specified, it will print the total number of all available sObjects and push the result to ",(0,r.yg)("inlineCode",{parentName:"p"},"state.data"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The API name of the sObject. If omitted, fetches metadata for all sObjects.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Fetch metadata for all available sObjects"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"describe()\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Fetch metadata for Account sObject"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"describe('Account')\n")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"destroy"},"destroy"),(0,r.yg)("p",null,(0,r.yg)("code",null,"destroy(sObjectName, ids, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Delete records of an sObject."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"API name of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"ids"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")," ","|"," ",(0,r.yg)("code",null,"Array.","<","string",">")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"ID or array of IDs of records to delete")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Options for the destroy delete operation.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options.failOnError]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"false")),(0,r.yg)("td",{parentName:"tr",align:null},"If true, the operation will fail if any record fails to delete.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"Summary of the response from Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.success"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")," if Salesforce reports no errors from the operation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.completed"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of ids for every successful completion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.errors"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of errors reported by Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Delete a single record"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'destroy("Account", "001XXXXXXXXXXXXXXX");\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Allow operation to fail if any record fails to delete"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'destroy("Account", ["001XXXXXXXXXXXXXXX", "001YYYYYYYYYYYYYYY"], {\n  failOnError: true,\n});\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Using a state variable"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},' fn((state) => {\n  state.data = ["001XXXXXXXXXXXXXXX", "001YYYYYYYYYYYYYYY"];\n  return state;\n});\ndestroy("Account", $.data);\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"get"},"get"),(0,r.yg)("p",null,(0,r.yg)("code",null,"get(path, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Send a GET request on salesforce server configured in ",(0,r.yg)("inlineCode",{parentName:"p"},"state.configuration"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"path"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The Salesforce API endpoint.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#simplerequestoptions"},(0,r.yg)("code",null,"SimpleRequestOptions"))),(0,r.yg)("td",{parentName:"tr",align:null},"Configure headers and query parameters for the request.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Make a GET request to a custom Salesforce flow"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"get('/actions/custom/flow/POC_OpenFN_Test_Flow');\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Make a GET request to a custom Salesforce flow with query parameters"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"get('/actions/custom/flow/POC_OpenFN_Test_Flow', { query: { Status: 'Active' } });\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Make a GET request then map the response"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"get('/jobs/query/v1/jobs/001XXXXXXXXXXXXXXX/results', (state) => {\n // Mapping the response\n state.mapping = state.data.map(d => ({ name: d.name, id: d.extId }));\n return state;\n});\n")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"insert"},"insert"),(0,r.yg)("p",null,(0,r.yg)("code",null,"insert(sObjectName, records) \u21d2 Operation")),(0,r.yg)("p",null,'Alias for "create(sObjectName, records)".'),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"API name of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"records"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"Object")," ","|"," ",(0,r.yg)("code",null,"Array.","<","Object",">")),(0,r.yg)("td",{parentName:"tr",align:null},"Field attributes for the new record, or an array of field attributes.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Single record creation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'insert("Account", { Name: "My Account #1" });\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Multiple records creation"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'insert("Account",[{ Name: "My Account #1" }, { Name: "My Account #2" }]);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Using a state variable"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'fn((state) => {\n  state.data = [{ Name: "My Account #1" }, { Name: "My Account #2" }];\n  return state;\n});\ninsert("Account", $.data);\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"post"},"post"),(0,r.yg)("p",null,(0,r.yg)("code",null,"post(path, data, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Send a POST request to salesforce server configured in ",(0,r.yg)("inlineCode",{parentName:"p"},"state.configuration"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"path"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The Salesforce API endpoint.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null},"A JSON Object request body.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#simplerequestoptions"},(0,r.yg)("code",null,"SimpleRequestOptions"))),(0,r.yg)("td",{parentName:"tr",align:null},"Configure headers and query parameters for the request.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Make a POST request to a custom Salesforce flow"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'post("/actions/custom/flow/POC_OpenFN_Test_Flow", {\n  body: {\n    inputs: [\n      {\n        CommentCount: 6,\n        FeedItemId: "0D5D0000000cfMY",\n      },\n    ],\n  },\n});\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"query"},"query"),(0,r.yg)("p",null,(0,r.yg)("code",null,"query(query, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Executes an SOQL (Salesforce Object Query Language) query to retrieve records from Salesforce.\nThis operation uses ",(0,r.yg)("a",{parentName:"p",href:"https://jsforce.github.io/document/#using-soql"},"for querying salesforce records")," using SOQL query and handles pagination.\nNote that in an event of a query error, error logs will be printed but the operation will not throw the error."),(0,r.yg)("p",null,"The Salesforce query API is subject to rate limits, ",(0,r.yg)("a",{parentName:"p",href:"https://sforce.co/3W9zyaQ"},"learn more here"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"query"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")," ","|"," ",(0,r.yg)("code",null,"function")),(0,r.yg)("td",{parentName:"tr",align:null},"A SOQL query string or a function that returns a query string. Must be less than 4000 characters in WHERE clause")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#queryoptions"},(0,r.yg)("code",null,"QueryOptions"))),(0,r.yg)("td",{parentName:"tr",align:null},"Optional configuration for the query operation")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of result objects of the form ",(0,r.yg)("code",null,"{"," done, totalSize, records ","}"))))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Run a query and download all matching records"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"query('SELECT Id FROM Patient__c', { autoFetch: true });\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Query patients by Health ID"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"query(state => `SELECT Id FROM Patient__c WHERE Health_ID__c = '${state.data.healthId}'`);\n")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Query patients by Health ID using a lazy state reference"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"query(`SELECT Id FROM Patient__c WHERE Health_ID__c = '${$.data.healthId}'`);\n")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"request"},"request"),(0,r.yg)("p",null,(0,r.yg)("code",null,"request(path, [options]) \u21d2 Operation")),(0,r.yg)("p",null,"Send a request to salesforce server configured in ",(0,r.yg)("inlineCode",{parentName:"p"},"state.configuration"),"."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"path"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The Salesforce API endpoint.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[options]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"#fullrequestoptions"},(0,r.yg)("code",null,"FullRequestOptions"))),(0,r.yg)("td",{parentName:"tr",align:null},"Configure headers, query and body parameters for the request.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Make a POST request to a custom Salesforce flow"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'request("/actions/custom/flow/POC_OpenFN_Test_Flow", {\n  method: "POST",\n  json: { inputs: [{}] },\n});\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"retrieve"},"retrieve"),(0,r.yg)("p",null,(0,r.yg)("code",null,"retrieve(sObjectName, id) \u21d2 Operation")),(0,r.yg)("p",null,"Retrieves a Salesforce sObject(s)."),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The sObject to retrieve")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"id"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The id of the record")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Retrieve a specific ContentVersion record"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"retrieve('ContentVersion', '0684K0000020Au7QAE/VersionData');\n")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"update"},"update"),(0,r.yg)("p",null,(0,r.yg)("code",null,"update(sObjectName, records) \u21d2 Operation")),(0,r.yg)("p",null,"Update an sObject record or records. Relationships in the record should be nested and not use dot-notation syntax"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"API name of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"records"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")," ","|"," ",(0,r.yg)("code",null,"Array.","<","object",">")),(0,r.yg)("td",{parentName:"tr",align:null},"Field attributes for the new object.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"Summary of the response from Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.success"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")," if Salesforce reports no errors from the operation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.completed"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of ids for every successful completion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.errors"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of errors reported by Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Single record update"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'update("Account", {\n  Id: "0010500000fxbcuAAA",\n  Name: "Updated Account #1",\n});\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Multiple records update"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'update("Account", [\n  { Id: "0010500000fxbcuAAA", Name: "Updated Account #1" },\n  { Id: "0010500000fxbcvAAA", Name: "Updated Account #2" },\n]);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Update a record with a relationship"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'update("Account", {\n  Id: "0010500000fxbcuAAA",\n  "Project__r": {\n    "Metrics_ID__c": "jfh5LAnxu1i4na"\n  }\n});\n')),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"upsert"},"upsert"),(0,r.yg)("p",null,(0,r.yg)("code",null,"upsert(sObjectName, externalId, records) \u21d2 Operation")),(0,r.yg)("p",null,"Create a new sObject record, or updates it if it already exists. Relationships in the record should be nested and not use dot-notation syntax"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"sObjectName"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"API name of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"externalId"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"The external ID of the sObject.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"records"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"Object")," ","|"," ",(0,r.yg)("code",null,"Array.","<","Object",">")),(0,r.yg)("td",{parentName:"tr",align:null},"Field attributes for the records to upsert, or an array of field attributes.")))),(0,r.yg)("p",null,"This operation writes the following keys to state:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"State Key"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Single record upsert "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'upsert("UpsertTable__c", "ExtId__c", { Name: "Record #1", ExtId__c : \'ID-0000001\' });\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:"),"  Multiple record upsert "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'upsert("UpsertTable__c", "ExtId__c", [\n  { Name: "Record #1", ExtId__c : \'ID-0000001\' },\n  { Name: "Record #2", ExtId__c : \'ID-0000002\' },\n]);\n')),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Update a record with a relationship"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'upsert("UpsertTable__c", {\n  Name: "Record #1",\n  "Project__r": {\n    "Metrics_ID__c": "jfh5LAnxu1i4na"\n  }\n});\n')),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"util"},"util"),(0,r.yg)("p",null,"These functions belong to the util namespace."),(0,r.yg)("h3",{id:"util_toUTF8"},"util.toUTF8"),(0,r.yg)("p",null,(0,r.yg)("code",null,"toUTF8(input) \u21d2 string")),(0,r.yg)("p",null,"Transliterates unicode characters to their best ASCII representation"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Returns"),": ",(0,r.yg)("code",null,"string")," - - ASCII representation of input string  "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Param"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"input"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},"A string with unicode characters")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Example:")," Transliterate ",(0,r.yg)("inlineCode",{parentName:"p"},"\u03ac\u03bd\u03b8\u03c1\u03c9\u03c0\u03bf\u03b9")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"anthropoi")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'fn((state) => {\n  const s = util.toUTF8("\u03ac\u03bd\u03b8\u03c1\u03c9\u03c0\u03bf\u03b9");\n  console.log(s); // anthropoi\n  return state;\n});\n')),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"interfaces"},"Interfaces"),(0,r.yg)("h3",{id:"bulkoptions"},"BulkOptions"),(0,r.yg)("p",null,"Options provided to the Salesforce bulk API request"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"extIdField"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"External id field. Required for upsert.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[allowNoOp]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Skipping bulk operation if no records.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[failOnError]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"false")),(0,r.yg)("td",{parentName:"tr",align:null},"Fail the operation on error.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[pollTimeout]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"integer")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"240000")),(0,r.yg)("td",{parentName:"tr",align:null},"Polling timeout in milliseconds.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[pollInterval]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"integer")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"6000")),(0,r.yg)("td",{parentName:"tr",align:null},"Polling interval in milliseconds.")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"bulkqueryoptions"},"BulkQueryOptions"),(0,r.yg)("p",null,"Options provided to the Salesforce bulk query API request"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[pollTimeout]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"integer")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"90000")),(0,r.yg)("td",{parentName:"tr",align:null},"Polling timeout in milliseconds.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[pollInterval]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"integer")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"3000")),(0,r.yg)("td",{parentName:"tr",align:null},"Polling interval in milliseconds.")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"fullrequestoptions"},"FullRequestOptions"),(0,r.yg)("p",null,"Options provided to the Salesforce HTTP request"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[method]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,'"',"GET",'"')),(0,r.yg)("td",{parentName:"tr",align:null},"HTTP method to use.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"headers"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Object of request headers.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"query"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Object request query.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"json"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"Object request body.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"body"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"string")),(0,r.yg)("td",{parentName:"tr",align:null}),(0,r.yg)("td",{parentName:"tr",align:null},"A string request body.")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"queryoptions"},"QueryOptions"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"[autoFetch]"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"boolean")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"false")),(0,r.yg)("td",{parentName:"tr",align:null},"When true, automatically fetches next batch of records if available.")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"salesforceresultstate"},"SalesforceResultState"),(0,r.yg)("p",null,"State object"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"Summary of the response from Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.success"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"true")," if Salesforce reports no errors from the operation")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.completed"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of ids for every successful completion")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data.errors"),(0,r.yg)("td",{parentName:"tr",align:null},"Array of errors reported by Salesforce")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"salesforcestate"},"SalesforceState"),(0,r.yg)("p",null,"State object"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"data"),(0,r.yg)("td",{parentName:"tr",align:null},"API response data. Can be either an object or array of objects")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"references"),(0,r.yg)("td",{parentName:"tr",align:null},"History of all previous states")))),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"simplerequestoptions"},"SimpleRequestOptions"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Properties")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Type"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"headers"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null},"Object of request headers.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"query"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("code",null,"object")),(0,r.yg)("td",{parentName:"tr",align:null},"Object of request query.")))),(0,r.yg)("hr",null))}s.isMDXComponent=!0},15680:(e,t,a)=>{a.d(t,{xA:()=>u,yg:()=>m});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function g(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var y=n.createContext({}),o=function(e){var t=n.useContext(y),a=t;return e&&(a="function"==typeof e?e(t):g(g({},t),e)),a},u=function(e){var t=o(e.components);return n.createElement(y.Provider,{value:t},e.children)},i="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,y=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),i=o(a),d=r,m=i["".concat(y,".").concat(d)]||i[d]||s[d]||l;return a?n.createElement(m,g(g({ref:t},u),{},{components:a})):n.createElement(m,g({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,g=new Array(l);g[0]=d;var p={};for(var y in t)hasOwnProperty.call(t,y)&&(p[y]=t[y]);p.originalType=e,p[i]="string"==typeof e?e:r,g[1]=p;for(var o=2;o<l;o++)g[o]=a[o];return n.createElement.apply(null,g)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);