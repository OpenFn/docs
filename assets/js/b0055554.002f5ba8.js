"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[64293],{56487:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var o=n(58168),a=(n(96540),n(15680));const r={title:"Using multiple operations"},i=void 0,l={unversionedId:"jobs/multiple-operations",id:"version-legacy/jobs/multiple-operations",title:"Using multiple operations",description:"You can do many things in sequence with OpenFn, whether using core,",source:"@site/versioned_docs/version-legacy/jobs/multiple-operations.md",sourceDirName:"jobs",slug:"/jobs/multiple-operations",permalink:"/documentation/legacy/jobs/multiple-operations",draft:!1,editUrl:"https://github.com/openfn/docs/edit/main/versioned_docs/version-legacy/jobs/multiple-operations.md",tags:[],version:"legacy",frontMatter:{title:"Using multiple operations"},sidebar:"docs",previous:{title:"What's an operation?",permalink:"/documentation/legacy/jobs/operations"},next:{title:"Initial and final state for runs",permalink:"/documentation/legacy/jobs/state"}},s={},u=[{value:"Flow jobs vs multiple operations in a single job vs posting back to the inbox",id:"flow-jobs-vs-multiple-operations-in-a-single-job-vs-posting-back-to-the-inbox",level:2},{value:"Reasons to use flow jobs",id:"reasons-to-use-flow-jobs",level:3},{value:"Reasons to use multiple operations in a single job",id:"reasons-to-use-multiple-operations-in-a-single-job",level:3},{value:"Reasons to post back to the inbox",id:"reasons-to-post-back-to-the-inbox",level:3}],p={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,o.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"You can do many things in sequence with OpenFn, whether using ",(0,a.yg)("inlineCode",{parentName:"p"},"core"),",\n",(0,a.yg)("inlineCode",{parentName:"p"},"microservice"),", or ",(0,a.yg)("inlineCode",{parentName:"p"},"platform"),"."),(0,a.yg)("h2",{id:"flow-jobs-vs-multiple-operations-in-a-single-job-vs-posting-back-to-the-inbox"},"Flow jobs vs multiple operations in a single job vs posting back to the inbox"),(0,a.yg)("h3",{id:"reasons-to-use-flow-jobs"},"Reasons to use flow jobs"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Each operation needs to use functions that are ",(0,a.yg)("em",{parentName:"li"},"only")," available in different\nadaptors."),(0,a.yg)("li",{parentName:"ul"},"You ",(0,a.yg)("em",{parentName:"li"},"must")," have different credentials for each operation"),(0,a.yg)("li",{parentName:"ul"},"You want to see success and failure at the level of each operation"),(0,a.yg)("li",{parentName:"ul"},"Each individual run takes a long time and you're worried about your NodeVM\nbeing timed out. (On ",(0,a.yg)("inlineCode",{parentName:"li"},"platform"),", this happens after 100s for non-enterprise\nusers; on ",(0,a.yg)("inlineCode",{parentName:"li"},"microservice")," you've likely configured your own timeout duration.)")),(0,a.yg)("h3",{id:"reasons-to-use-multiple-operations-in-a-single-job"},"Reasons to use multiple operations in a single job"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The job must be atomic, you want the whole thing to count as a failure if any\npart of it fails."),(0,a.yg)("li",{parentName:"ul"},"You run jobs manually and you want a single button to click to retry the\nentire sequence of operations."),(0,a.yg)("li",{parentName:"ul"},"You update a ",(0,a.yg)("inlineCode",{parentName:"li"},"cursor")," in a series of operations that involve ",(0,a.yg)("inlineCode",{parentName:"li"},"GET")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"POST"),".\nWhen the ",(0,a.yg)("inlineCode",{parentName:"li"},"POST")," fails, you don't want to update the ",(0,a.yg)("inlineCode",{parentName:"li"},"cursor")," for the\nsubsequent job run which contains the ",(0,a.yg)("inlineCode",{parentName:"li"},"GET"),"."),(0,a.yg)("li",{parentName:"ul"},"Your operations don't take too long (<100s in total for ",(0,a.yg)("inlineCode",{parentName:"li"},"platform"),") and you\nwant to reduce the number of executions.")),(0,a.yg)("h3",{id:"reasons-to-post-back-to-the-inbox"},"Reasons to post back to the inbox"),(0,a.yg)("p",null,"You might decide to send data from a ",(0,a.yg)("inlineCode",{parentName:"p"},"GET")," back to your inbox and let another\njob be triggered by a message filter."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"get('somePath', { query: { after: '2020-10-12' } }, post('my-inbox-uuid'));\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"You'd like to store the result of the first operation for later use or\ninspection and not have to retry that operation in order to reproduce the\ndata."),(0,a.yg)("li",{parentName:"ul"},"You don't care about small delays between the first and second job being run.")))}m.isMDXComponent=!0},15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var o=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,y=c["".concat(s,".").concat(d)]||c[d]||m[d]||r;return n?o.createElement(y,i(i({ref:t},p),{},{components:n})):o.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);