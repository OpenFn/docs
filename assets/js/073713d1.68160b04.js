"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[43895],{50592:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>g,contentTitle:()=>l,default:()=>d,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var a=r(58168),o=(r(96540),r(15680));const n={title:"googlehealthcare developer readme",id:"googlehealthcare-readme",keywords:["adaptor","readme","googlehealthcare"]},l="googlehealthcare Adaptor developer README.md",p={unversionedId:"packages/googlehealthcare-readme",id:"packages/googlehealthcare-readme",title:"googlehealthcare developer readme",description:"Source//github.com/OpenFn/adaptors/tree/main/packages/googlehealthcare",source:"@site/adaptors/packages/googlehealthcare-readme.md",sourceDirName:"packages",slug:"/packages/googlehealthcare-readme",permalink:"/adaptors/packages/googlehealthcare-readme",draft:!1,tags:[],version:"current",frontMatter:{title:"googlehealthcare developer readme",id:"googlehealthcare-readme",keywords:["adaptor","readme","googlehealthcare"]},sidebar:"adaptors",previous:{title:"googlehealthcare changelog",permalink:"/adaptors/packages/googlehealthcare-changelog"},next:{title:"Google Forms/Google Sheets",permalink:"/adaptors/googlesheets"}},g={},c=[{value:"Documentation",id:"documentation",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Development",id:"development",level:2}],i={toc:c},s="wrapper";function d(e){let{components:t,...r}=e;return(0,o.yg)(s,(0,a.A)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"googlehealthcare-adaptor-developer-readmemd"},"googlehealthcare Adaptor developer README.md"),(0,o.yg)("p",null,"Source: ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors/tree/main/packages/googlehealthcare"},"https://github.com/OpenFn/adaptors/tree/main/packages/googlehealthcare")),(0,o.yg)("h1",{id:"language-googlehealthcare-"},"language-googlehealthcare ",(0,o.yg)("img",{src:"assets/sq-256x256.png",width:"30",height:"30"})),(0,o.yg)("p",null,"An OpenFn ",(0,o.yg)("strong",{parentName:"p"},(0,o.yg)("em",{parentName:"strong"},"adaptor"))," for building integration jobs for use with the\n",(0,o.yg)("a",{parentName:"p",href:"https://cloud.google.com/healthcare-api/docs/how-tos/fhir-resources#healthcare-create-patient-nodejs"},"Google Cloud Healthcare API"),"."),(0,o.yg)("h2",{id:"documentation"},"Documentation"),(0,o.yg)("p",null,"View the\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/googlehealthcare-docs"},"docs site")," for\nfull technical documentation."),(0,o.yg)("h3",{id:"configuration"},"Configuration"),(0,o.yg)("p",null,"View the\n",(0,o.yg)("a",{parentName:"p",href:"https://docs.openfn.org/adaptors/packages/googlehealthcare-configuration-schema/"},"configuration-schema"),"\nfor required and optional ",(0,o.yg)("inlineCode",{parentName:"p"},"configuration")," properties."),(0,o.yg)("h2",{id:"development"},"Development"),(0,o.yg)("p",null,"Clone the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/OpenFn/adaptors"},"adaptors monorepo"),'. Follow the\n"Getting Started" guide inside to get set up.'),(0,o.yg)("p",null,"Run tests using ",(0,o.yg)("inlineCode",{parentName:"p"},"pnpm run test")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"pnpm run test:watch")),(0,o.yg)("p",null,"Build the project using ",(0,o.yg)("inlineCode",{parentName:"p"},"pnpm build"),"."),(0,o.yg)("p",null,"To build ",(0,o.yg)("em",{parentName:"p"},"only")," the docs run ",(0,o.yg)("inlineCode",{parentName:"p"},"pnpm build docs"),"."))}d.isMDXComponent=!0},15680:(e,t,r)=>{r.d(t,{xA:()=>i,yg:()=>u});var a=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var g=a.createContext({}),c=function(e){var t=a.useContext(g),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},i=function(e){var t=c(e.components);return a.createElement(g.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,g=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),s=c(r),h=o,u=s["".concat(g,".").concat(h)]||s[h]||d[h]||n;return r?a.createElement(u,l(l({ref:t},i),{},{components:r})):a.createElement(u,l({ref:t},i))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=h;var p={};for(var g in t)hasOwnProperty.call(t,g)&&(p[g]=t[g]);p.originalType=e,p[s]="string"==typeof e?e:o,l[1]=p;for(var c=2;c<n;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);