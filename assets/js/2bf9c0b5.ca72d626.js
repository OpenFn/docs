"use strict";(self.webpackChunk_openfn_docs=self.webpackChunk_openfn_docs||[]).push([[11662],{28453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>i});var n=t(96540);const r={},o=n.createContext(r);function s(e){const a=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:a},e.children)}},67473:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"library/jobs/auto/Load-to-DB-2022-05-16","title":"Load to DB","description":"This job was provided by an OpenFn.org user via the job library API.","source":"@site/adaptors/library/jobs/auto/Load-to-DB-2022-05-16.md","sourceDirName":"library/jobs/auto","slug":"/library/jobs/auto/Load-to-DB-2022-05-16","permalink":"/adaptors/library/jobs/auto/Load-to-DB-2022-05-16","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Load to DB","sidebar_label":"Load to DB","id":"Load-to-DB-2022-05-16","keywords":["library","job","expression","postgresql","dataValue","upsert"]},"sidebar":"adaptors","previous":{"title":"1. Get data from SLUHIS","permalink":"/adaptors/library/jobs/auto/1-Get-data-from-SLUHIS-2023-03-08"},"next":{"title":"Upsert to mBrana","permalink":"/adaptors/library/jobs/auto/Upsert-to-mBrana-2021-05-11"}}');var r=t(74848),o=t(28453);const s={title:"Load to DB",sidebar_label:"Load to DB",id:"Load-to-DB-2022-05-16",keywords:["library","job","expression","postgresql","dataValue","upsert"]},i=void 0,l={},d=[{value:"Metadata",id:"metadata",level:2},{value:"Key Functions",id:"key-functions",level:2},{value:"Expression",id:"expression",level:2}];function c(e){const a={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("em",{children:"This job was provided by an OpenFn.org user via the job library API."}),"\n",(0,r.jsx)(a.h2,{id:"metadata",children:"Metadata"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:"Name: Load to DB"}),"\n",(0,r.jsxs)(a.li,{children:["Adaptor: ",(0,r.jsx)(a.a,{href:"https://www.github.com/openfn/language-postgresql",children:(0,r.jsx)(a.code,{children:"@openfn/language-postgresql"})})]}),"\n",(0,r.jsxs)(a.li,{children:["Adaptor Version: ",(0,r.jsx)(a.a,{href:"https://www.github.com/openfn/language-postgresql/releases/tag/v3.3.3",children:(0,r.jsx)(a.code,{children:"v3.3.3"})})]}),"\n",(0,r.jsx)(a.li,{children:"Created over 3 years ago"}),"\n",(0,r.jsx)(a.li,{children:"Updated over 3 years ago"}),"\n",(0,r.jsxs)(a.li,{children:["Score: ",(0,r.jsx)("b",{children:"0"})," (an ",(0,r.jsx)(a.a,{href:"/adaptors/library/#library-scores",children:"indicator"})," of how useful this job may be)"]}),"\n"]}),"\n",(0,r.jsx)(a.h2,{id:"key-functions",children:"Key Functions"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.code,{children:"dataValue"}),", ",(0,r.jsx)(a.code,{children:"upsert"})]}),"\n",(0,r.jsx)(a.h2,{id:"expression",children:"Expression"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-js",children:"// Your job goes here.\nupsert('patient', 'ON CONSTRAINT patient_pk', {\n  patient_id: dataValue('data.patient_name'),\n  patient_name: dataValue('data.patient_name'),\n  village_name: dataValue('data.village_name'),\n  last_menstrual_period: dataValue('data.last_menstrual_period'),\n  expected_delivery_date: dataValue('data.expected_delivery_date'),\n  children_alive: dataValue('data.children_alive'),\n  living_children: dataValue('data.living_children'),\n  feeling_sick: dataValue('data.feeling_sick'),\n  total_children: dataValue('data.Total_children'),\n  risk_level: dataValue('data.Risk_level')\n  \n});\n"})})]})}function p(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);